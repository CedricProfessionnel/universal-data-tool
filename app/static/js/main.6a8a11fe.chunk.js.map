{"version":3,"sources":["components/Theme/index.js","components/HotkeyStorage/default-hotkeys.js","components/HotkeyStorage/index.js","components/AppConfig/index.js","utils/auth-handlers/cognito-handler.js","utils/auth-handlers/use-auth.js","components/LoginDrawer/SignIn.js","components/LoginDrawer/CompleteSignUp.js","components/LoginDrawer/index.js","utils/use-electron.js","utils/use-posthog.js","components/CollaborateButton/index.js","components/HeaderPopupBox/index.js","components/DownloadButton/index.js","components/Header/GithubIcon.js","utils/get-brush-color-palette.js","components/BrushButton/index.js","components/HeaderToolbar/SlackIcon.js","components/HeaderToolbar/index.js","components/StartingPage/templates.js","components/HeaderDrawer/index.js","components/Header/index.js","components/SimpleDialog/index.js","components/CreateFromTemplateDialog/index.js","components/AddAuthFromTemplateDialog/cognito-icon.js","components/AddAuthFromTemplateDialog/authTemplates.js","components/ErrorToasts/index.js","utils/use-errors.js","components/AddAuthFromTemplateDialog/index.js","components/StartingPage/get-embed-youtube-url.js","components/StartingPage/index.js","components/DatasetEditor/EditableTitleText.js","components/SampleGrid/index.js","components/PasteUrlsDialog/get-sample-from-url.js","components/PasteUrlsDialog/index.js","utils/get-sample-name-from-url.js","utils/RecognizeFileExtension.js","utils/dataset-helper/get-files-differences.js","utils/dataset-helper/index.js","components/ImportFromCognitoS3Dialog/get-annotation-from-aws.js","components/ImportFromCognitoS3Dialog/get-images-from-aws.js","components/ImportFromCognitoS3Dialog/check-interface-and-sample-type.js","components/ImportFromCognitoS3Dialog/set-annotation-from-aws.js","components/ImportFromCognitoS3Dialog/index.js","components/ImportFromCognitoS3Dialog/init-config-import.js","components/ImportFromCognitoS3Dialog/set-type-of-file-to-load-and-disable.js","components/ImportFromCognitoS3Dialog/set-button-add-sample-name.js","components/ImportPage/S3Icon.js","components/S3PathSelector/index.js","utils/use-is-desktop.js","utils/auth-handlers/use-iam-s3-api.js","utils/from-udt-csv.js","components/ImportFromS3Dialog/index.js","components/MultiFileDrop/index.js","components/UploadToS3Dialog/index.js","components/TextAreaWithUpload/index.js","components/ImportTextSnippetsDialog/index.js","components/ImportFromGoogleDriveDialog/index.js","components/ImportUDTFileDialog/index.js","components/ImportToyDatasetDialog/index.js","components/ImportFromYoutubeUrls/download-youtube-video.js","components/ProgressBar/index.js","components/ImportFromYoutubeUrls/progress.js","components/ImportFromYoutubeUrls/get-youtube-video-information.js","components/ImportFromYoutubeUrls/split-urls-from-text-area.js","components/ImportFromYoutubeUrls/index.js","components/ImportPage/prompt-and-get-samples-from-local-directory.js","components/ImportPage/index.js","components/TransformVideoKeyframesDialog/index.js","components/DownloadURLsDialog/index.js","components/TransformVideoFramesToImagesDialog/index.js","components/TransformLocalFilesToWebURLs/functions/upload-file-to-transfersh.js","components/TransformLocalFilesToWebURLs/functions/split-file-name-from-file-url.js","components/TransformLocalFilesToWebURLs/functions/get-file-url-key.js","components/TransformLocalFilesToWebURLs/functions/transform-file-urls-to-web-urls.js","components/TransformLocalFilesToWebURLs/index.js","components/TransformImageSamplesIntoSegmentsDialog/index.js","components/TransformSegmentsIntoImageSamplesDialog/index.js","components/TransformPage/index.js","components/SamplesView/index.js","components/ConfigureImageSegmentation/index.js","components/ConfigureImagePixelSegmentation/index.js","components/ConfigureImageClassification/index.js","components/ConfigureTextClassification/index.js","components/ConfigureAudioTranscription/index.js","components/ConfigureTextEntityRecognition/index.js","components/ConfigureTextEntityRelations/index.js","components/ConfigureDataEntry/index.js","components/ConfigureComposite/index.js","components/Configure3D/index.js","components/ConfigureVideoSegmentation/index.js","components/ConfigureImageLandmarkAnnotation/index.js","components/ConfigureInterface/index.js","components/KeyboardShortcutManagerDialog/index.js","components/AdvancedOptionsView/index.js","components/BigInterfaceSelect/index.js","i18n/index.js","utils/use-clobbered-state.js","components/TextClassification/index.js","components/TextEntityRecognition/convert-react-nlp-annotate-types.js","components/TextEntityRecognition/index.js","components/TextEntityRelations/index.js","utils/ria-format.js","components/ImageSegmentation/index.js","components/WorkspaceContainer/index.js","components/ImageClassification/index.js","components/VideoSegmentation/index.js","components/AudioTranscription/index.js","components/ImageLandmarkAnnotation/index.js","utils/get-task-description.js","components/SampleContainer/LinkButton.js","components/SampleContainer/index.js","components/DataEntry/index.js","components/BadOHA/index.js","components/EmptySampleContainer/index.js","components/InterfaceIcon/index.js","components/Composite/index.js","components/UniversalDataViewer/index.js","components/Toasts/index.js","components/RawJSONEditor/index.js","components/SetupPage/index.js","components/EditSampleDialog/index.js","utils/sentry.js","components/LabelErrorBoundary/index.js","components/Stats/index.js","components/LabelHelpView/api-key-entry.js","components/PaperContainer/index.js","components/FileContext/use-active-dataset.js","components/FileContext/index.js","components/LabelHelpView/label-help-dialog-content.js","components/LabelHelpView/LabelHelpProvider.js","utils/use-is-label-only-mode.js","utils/compute-dataset-variable.js","components/LabelHelpView/use-label-help.js","components/LabelHelpView/index.js","components/ActiveLearningView/index.js","components/LabelView/index.js","components/DatasetEditor/index.js","utils/use-time-to-complete-sample.js","utils/file-handlers/use-server/get-human-readable-log.js","utils/file-handlers/use-server/apply-seamless-patch.js","utils/file-handlers/use-server/server-hash.js","utils/file-handlers/use-server/index.js","utils/file-handlers/use-server/handler.js","utils/to-udt-csv.js","utils/file-handlers/use-filesystem.js","utils/file-handlers/use-file-telemetry.js","utils/file-handlers/use-aws-cognito/index.js","utils/file-handlers/use-aws-cognito/update-aws-storage.js","utils/file-handlers/index.js","utils/file-handlers/use-local-storage.js","components/AppErrorBoundary/index.js","utils/use-prevent-navigation.js","components/LocalStorageApp/index.js","components/DesktopApp/index.js","components/Loading/index.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","colors","secondary","typography","fontFamily","button","textTransform","children","ThemeProvider","defaultHotkeys","id","description","binding","HotkeyContext","createContext","hotkeys","changeHotkey","newBinding","useHotkeyStorage","useContext","HotkeyStorageProvider","useAppConfig","fromConfig","setInConfig","useMemo","map","item","keyMap","contextValue","clearHotkeys","Provider","value","configKeyNames","defaultAppConfig","AppConfigContext","appConfig","s","JSON","parse","e","jsonParseOrEmpty","window","localStorage","app_config","setAppConfig","newConfig","key","AppConfigProvider","useLocalStorage","includes","Error","undefined","stringify","CognitoHandler","authProvider","checkIfLoggedIn","a","Amplify","configure","authConfig","Auth","currentAuthenticatedUser","userHandle","user","isLoggedIn","hasChanged","setUser","Boolean","login","tryUser","logout","signOut","getState","this","identityPoolId","region","userPoolId","userPoolWebClientId","mandatorySignIn","authenticationFlowType","Storage","AWSS3","bucket","AuthContext","AuthProvider","useState","handler","setHandler","useReducer","state","handlerVersion","incHandlerVersion","useEffect","interval","setInterval","clearInterval","useAuth","ErrorText","styled","padding","color","useStyles","makeStyles","form","width","marginTop","spacing","submit","margin","onUserChange","onRequireCompleteSignUp","onClose","classes","error","setError","t","useTranslation","username","password","notAuthorizedException","setState","handleTextFieldChange","event","persist","prevState","target","name","signIn","then","challengeName","catch","err","code","console","log","toString","Typography","component","variant","className","noValidate","TextField","required","fullWidth","label","autoComplete","helperText","autoFocus","onChange","type","FormControlLabel","control","Checkbox","onClick","isEmpty","SignInAWS","requiredAttributes","requiredAttributesDict","requiredAttributesErrorDict","forEach","requiredAttribute","newPassword","newPasswordNotValid","newPasswordConfirmation","newPasswordNotEqualsConfirmation","capitalizeFirstLetter","string","charAt","toUpperCase","slice","_handleAttributesTextFieldChange","_handleTextFieldChange","newPasswordError","checkIfPasswordEqualsConfirmationPassword","_handleCantBeNull","allGood","onBlur","completeNewPassword","drawer","root","height","paper","display","flexDirection","alignItems","close","cursor","main","avatar","backgroundColor","loginDrawerOpen","signingIn","completeSignUp","Drawer","anchor","open","role","Grid","container","xs","sm","md","Paper","elevation","square","Avatar","SignIn","challengeParam","toggleCompleteSignUp","CompleteSignUp","require","posthogMock","opt_in_capturing","opt_out_capturing","init","reset","capture","capture_forms","capture_pageview","register","register_once","unregister","identify","alias","set_config","get_config","get_property","get_distinct_id","has_opted_out_capturing","has_opted_in_capturing","disable_all_events","people","set","set_once","posthogInitialized","isDesktop","useElectron","Cypress","posthog","api_host","autocapture","domain","location","origin","is_desktop","Container","position","marginLeft","borderColor","popupBoxBeforeAndAfter","bottom","left","border","content","pointerEvents","PopupBox","zIndex","top","boxSizing","borderRadius","minHeight","boxShadow","borderBottomColor","borderWidth","fontSize","opacity","transition","transform","CreateNewButton","Button","justifyContent","marginRight","ExitButton","fileOpen","inSession","onJoinSession","onCreateSession","onLeaveSession","sessionBoxOpen","changeSessionBoxOpen","loadingSession","changeLoadingSession","sessionUrl","changeSessionUrl","userName","changeUserName","usePosthog","setTimeout","title","onMouseEnter","onMouseLeave","IconButton","style","InputProps","endAdornment","InputAdornment","disabled","CircularProgress","size","StyledButton","textAlign","paddingTop","fontWeight","interfaceType","onDownload","changeOpen","HeaderPopupBox","href","GitHub","props","SvgIcon","d","fade","cmap","amt","newCmap","i","fadedGrey","isFaded","availableColors","colorMap","complete","incomplete","faded","review","ellipsis1","ellipsis2","ellipsis3","brush","seed","length","BrushCircle","OtherColorContainers","flexWrap","StyledIconButton","iconcolor","selected","marginBottom","paddingBottom","selectedBrush","onChangeSelectedBrush","handleClick","useEventCallback","memoize","getBrushColorPalette","SlackIcon","viewBox","headerButton","grow","flexGrow","list","tab","fullHeightTab","mixins","toolbar","breakpoints","down","minWidth","tabWrapper","getIcon","memo","tabs","currentTab","onChangeTab","additionalButtons","onOpenDrawer","isSmall","changeLoginDrawerOpen","collaborateError","isWelcomePage","c","AppBar","Toolbar","packageJSON","version","CollaborateButton","BrushButton","DownloadButton","Tabs","newTab","toLowerCase","Tab","wrapper","icon","GithubIcon","Box","paddingLeft","data-icon","data-size","data-show-count","aria-label","templates","Icon","CropFree","dataset","interface","samples","ImageSearch","labels","regionTypesAllowed","imageUrl","Image","OndemandVideoIcon","videoUrl","Edit","surveyjs","questions","pdfUrl","TextFormat","overlapAllowed","displayName","document","entityLabels","relationLabels","ContactSupport","Audiotrack","audioUrl","Category","fields","fieldName","AccessibilityNewIcon","keypointDefinitions","human","landmarks","nose","defaultPosition","leftEye","leftEar","rightEye","rightEar","sternum","leftShoulder","rightShoulder","leftElbow","rightElbow","leftHand","rightHand","leftThigh","rightThigh","leftKnee","rightKnee","leftFoot","rightFoot","connections","ThreeDRotation","templateMap","reduce","acc","recentItems","changeRecentItems","onClickHome","onCloseDrawer","drawerOpen","onOpenFile","onOpenRecentItem","onClickTemplate","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","List","ListItem","ListItemIcon","ListItemText","ListSubheader","ri","index","fileName","filter","oneRecentFile","template","HeaderContext","logoutUser","emptyArray","changeDrawerOpen","headerContext","useMediaQuery","HeaderDrawer","LoginDrawer","StyledDialogTitle","DialogTitle","grey","borderBottom","StyledDialogContent","DialogContent","StyledDialogActions","DialogActions","borderTop","markdownContent","redOn","red","noActionBar","actions","fullScreen","changeFullScreen","Dialog","maxWidth","lineHeight","source","action","blue","text","bigButton","bigIcon","onSelect","SimpleDialog","CognitoIcon","data-name","fill","x","y","provider","SdStorageOutlinedIcon","AccountTreeIcon","right","errorBox","errors","Collapse","in","life","Fade","message","changeErrors","concat","Math","random","split","cognitoIcon","howToSetupText","textDecoration","forms","cognito","placeholder","isRequired","s3iam","proxy","onFinish","onAuthConfigured","setAuthProvider","dialogTitle","setDialogTitle","useErrors","addError","validateAuthProvider","answers","config","authTemplates","onQuestionChange","questionId","newValue","defaultAnswers","questionIds","q","defaults","configValue","getDefaultsFromConfig","ErrorToasts","url","match","downloadIcon","languageSelectionWrapper","languageSelectionBox","up","ContentContainer","overflowY","Content","Title","languageSelectionFormStyle","base","background","menuList","singleValue","Subtitle","ActionList","Action","ActionTitle","ActionText","Actionless","BottomSpacer","languageOptions","onFileDrop","onOpenTemplate","showDownloadLink","onClickOpenSession","i18n","newVersionAvailable","changeNewVersionAvailable","fetch","r","json","newPackage","packageInfo","checkNewVersion","latestCommunityUpdate","setLatestCommunityUpdate","readme","startCU","search","endCU","communityUpdates","latestYtLink","ytLink","embedYTLink","getEmbedYoutubeUrl","getLatestREADME","createFromTemplateDialogOpen","changeCreateFromTemplateDialogOpen","addAuthFromDialogOpen","changeAddAuthFromDialogOpen","CreateFromTemplateDialog","clicked_template","AddAuthFromTemplateDialog","Header","styles","defaultValue","options","language","changeLanguage","find","src","frameBorder","allow","allowFullScreen","textField","editing","changeEditing","listener","addEventListener","removeEventListener","timeout","SAVE_WAIT","clearTimeout","inputProps","onKeyDown","preventDefault","stopPropagation","blur","onKeyPress","EmptyState","SampleDiv","fontVariantNumeric","userSelect","Sample","completed","onMouseDown","onMouseUp","classNames","p","n","count","tablePaginationPadding","samplesPerPage","changeSamplesPerPage","sampleOffset","changeSampleOffset","min","max","selectRange","changeSelectRange","startSelectRange","moveSelectRange","endSelectRange","checkAndNullifySelectRange","buttons","onClickMemo","range","paddingRight","TablePagination","rowsPerPageOptions","rowsPerPage","page","floor","labelRowsPerPage","onChangePage","newPage","onChangeRowsPerPage","opts","extension","replace","returnNulls","SelectContainer","TextArea","autoDetectOptions","onAddSamples","changeContent","urlType","changeURLType","l","trim","getSampleFromUrl","opt","v","sample","sampleName","decodeURI","UrlOfAFile","typeOfFile","fileExtension","objectOfRef","objectToCheck","resultSet","mode","any","getSampleName","getSampleNameFromURL","getSampleUrl","createOneNewSample","annotation","RecognizeFileExtension","getSampleWithThisSampleName","nameToSearch","setSamplesName","oldsample","renameSampleFromUrl","setIn","sampleToChange","boolName","sampletocompare1","eraseAnnotation","samplesWithoutAnnotation","Newsample","push","fileHasChanged","CheckIfAnnotationExist","result","folderToFetch","element","GetSampleFromAnnotation","newSamples","datasetHelper","sampleFound","get","expires","level","data","setUrl","configImport","loadProjectIsSelected","typeOfFileToLoad","fetchTextInFile","texte","urlSource","method","response","typeAuthorize","file","contentOldFile","actualSamples","annotationToKeep","Tabsamples","Tabsamples2","selectedStyle","tableStyle","expandedDataColumns","selector","sortable","expandedAnnotationsColumns","columns","customStyles","headCells","cells","ExpandedRow","rowData","rowAnnotations","dense","striped","noHeader","noDataComponent","pagination","paginationPerPage","paginationRowsPerPageOptions","onChangeFile","textButtonAdd","changetextButtonAdd","s3Content","changeS3Content","dataForTable","changeDataForTable","setFolderToFetch","checkInterfaceAndsamples","typeOfFileToDisable","Video","Audio","PDF","Texte","contentDialogBoxIsSetting","projectStarted","initConfigImport","setConfigImport","lastObjectRef","useRef","hasProjectStarted","current","configToSet","changes","setTypeOfFileToLoadAndDisable","handleAddSample","GetImageFromAFolderAWS","GetAnnotationFromAFolderAWS","setAnnotationFromAws","changeLoadProjectIsSelected","textToSet","folderName","numberOfSamples","isSelected","folder","setButtonNameAddSample","_dataForTable","obj","endsWith","rowDataContent","startsWith","lastModified","toDateString","rowAnnotationsContent","FormControl","FormLabel","RadioGroup","Radio","checked","expandableRows","expandableRowsComponent","selectableRows","selectableRowsHighlight","selectableRowsNoSelectAll","selectableRowsComponent","noTableHead","onSelectedRowsChange","whatsChanging","selectedRows","row","selectableRowSelected","Items","Path","Item","S3BucketSelector","currentPath","canCreateNew","onChangePath","showFiles","newPath","join","option","newDirectory","prompt","parseS3URI","s3Path","path","useIsDesktop","accessKeyId","secretAccessKey","corsProxy","awsClient","AwsClient","service","fetchS3","sign","request","corsProxyRequest","Request","encodeURIComponent","headers","body","xmlParser","listBuckets","listBucketItemsAt","Host","putBucketItem","res","Code","Message","ImportFromS3Dialog","useIAMS3API","setS3Path","optionsLoading","setOptions","ListAllMyBucketsResult","Buckets","Bucket","b","Name","ListBucketResult","CommonPrefixes","Prefix","loadS3Path","files","items","Contents","Key","S3PathSelector","newS3Path","FileCounter","MultiFileDrop","loadFile","onComplete","totalUploaded","setTotalUploaded","setErrors","filesSelected","totalFiles","setUploadStartState","entries","isDragActive","maxHeight","SelectedPath","UploadToS3Dialog","setComplete","uploadedPaths","activeStep","setActiveStep","Stepper","Step","StepLabel","filePath","UploadHover","emptyFunc","onChangeContent","reader","FileReader","onload","fileContent","readAsText","lastClickTime","changeLastClickTime","Date","now","ImportTextSnippetsDialog","TextAreaWithUpload","ExplainText","GoogleDriveScreenshot","credentials","web","client_id","process","app_id","developer_key","googleScriptLoaded","setGoogleScriptLoaded","pickerApiLoaded","setPickerApiLoaded","oauthToken","setOAuthToken","userSelectedItemsFromDrive","setUserSelectedItemsFromDrive","isPickerOpen","setIsPickerOpen","scriptElement","createElement","async","appendChild","remove","googlePickerActionCallback","google","picker","PICKED","docs","googleDriveDocument","mimeType","createPicker","view","DocsView","ViewId","Docs","FOLDERS","setIncludeFolders","setSelectFolderEnabled","PickerBuilder","enableFeature","Feature","NAV_HIDDEN","MINE_ONLY","MULTISELECT_ENABLED","setAppId","addView","DOCS","setDeveloperKey","setCallback","build","setVisible","handleAuthenticationResponse","authenticationResponse","access_token","onAuthApiLoad","gapi","auth","authorize","scope","immediate","onPickerApiLoad","onLoadPicker","load","callback","badSpellingMap","Object","correct","badSpellings","badSpelling","convertTaskDatumMistakes","normalizedKey","correction","csv","JAC","fromCSV","derivePath","taskOutput","output","InfoText","whiteSpace","ImportUDTFileDialog","changeError","setContent","e1","udt","fromUDTCSV","e2","jsonError","stack","csvError","datasets","getSamples","datasetName","datasetUrl","taskData","ImportToyDatasetDialog","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","data-import-toy-dataset-name","idify","youtubeUrl","videoTitle","remote","videoQuality","downloadPath","onProgress","onChangeOverallProgress","ytdl","videoName","fullVideoPath","writableVideoFile","createWriteStream","youtubeVideoWithOptions","format","quality","pipe","on","chunkLength","downloaded","total","percent","progress","cancel","destroy","Text","Bar","ProgressContainer","TotalPercentageWrapper","Progress","unitProgress","overallProgress","completedVideoTitles","ProgressBar","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","getYoutubeVideoInformation","splittedURLsArray","progressCallback","checkedVideos","Promise","resolve","reject","getBasicInfo","info","errorText","video","splitURLsFromTextArea","stringURLs","urlsHasHTTPS","splittedURLsByNewLines","SelectVideoQualityHeader","SelectVideoQuality","LoadingText","CompletedVideoTitle","qualityOptions","ImportFromYoutubeUrls","urlsFromTextArea","setUrlsFromTextArea","setVideoQuality","setUnitProgress","setOverallProgress","isDownloading","setIsDownloading","setCompletedVideoTitles","cancelRef","setDefaultState","closeDialog","dialog","showOpenDialog","buttonLabel","properties","canceled","filePaths","errorMessage","youtubeVideoInfos","completedVideoPaths","completedVideoTitlesArray","youtubeVideosCount","youtubeVideoInfo","downloadYoutubeVideo","currentProgress","progressText","videoPath","Array","isArray","Fragment","convertToSamplesObject","fp","ext","electron","dirPaths","dirPath","fs","promises","readdir","fn","promptAndGetSamplesLocalDirectory","ButtonBase","MuiButton","DesktopOnlyText","SelectDialogContext","desktopOnly","authConfiguredOnly","signedInOnly","disabledReason","onlySupportType","disabledText","Consumer","onChangeDialog","import_button","classnames","onChangeDataset","selectedDialog","changeDialog","promptAndGetSamplesFromLocalDirectory","localSamples","samplesToAdd","onAddSamplesAsToyDataset","AssignmentReturnedIcon","CreateNewFolderIcon","TextFieldsIcon","PetsIcon","FaYoutube","S3Icon","FaGoogleDrive","DescriptionIcon","PasteUrlsDialog","ImportFromCognitoS3Dialog","ImportFromGoogleDriveDialog","StyledExpansionPanel","StyledExpansionPanelSummary","flatMap","videoFrameAt","keyframes","keys","kf","parseInt","regions","immutable","ErrorBox","downloadFile","urlToDownload","directoryPath","md5","existsSync","directory","filename","changeProgress","cancelled","td","urlKey","pathToFile","getFfmpegTimeCode","ms","cs","ss","mn","padStart","pathToFfmpeg","shell","exec","newsamples","transformsPerformed","imageOutputPath","ffmpegCommand","without","uploadFileToTransferSh","fileURL","remoteURL","axios","exactFilePath","fsFileBuffer","readFileSync","put","status","uploadedFileURL","splitFileNameFromFileURL","splittedFullFileName","getFileURLKey","transformFileURLsToWebURLs","setProgress","progressUnit","samplesIndex","samplesItem","fileURLKey","warn","webURLOfUploadedFile","TransformLocalFilesToWebURLs","rows","setRows","setColumns","nRows","nCols","imageUrls","from","Set","pieces","Icon1","Icon2","transform_button","CollectionsIcon","ComputerIcon","LanguageIcon","GetAppIcon","ImageIcon","CheckBoxOutlineBlankIcon","GridOnIcon","TransformVideoKeyframesDialog","DownloadURLsDialog","TransformVideoFramesToImagesDialog","TransformImageSamplesIntoSegmentsDialog","TransformSegmentsIntoImageSamplesDialog","SampleCounter","ExpandedRowContainer","borderTopLeftRadius","borderTopRightRadius","ExpandedRowTitle","ExpandedRowCode","input","SamplesView","openSampleInputEditor","openSampleLabelEditor","deleteSample","lastSampleTab","changeTabState","changeTab","knownKeys","has","cell","add","raised","ImportPage","onImportPageShouldExit","newOHA","TransformPage","shouldViewChange","SampleGrid","sampleIndex","choices","cellType","iface","asMutable","multipleRegions","multipleRegionLabels","deep","noActions","maxClusterPresets","low","medium","high","maxClusterPresetsRev","curr","visibleIf","step","autosegMode","autoSegmentationEngine","autosegPreset","maxClusters","autosegMaxClusters","multiple","hasOther","column","ButtonsContainer","NoQuestions","Question","borderLeft","PreviewHeader","anchorEl","menuOpen","changeMenuOpen","multiline","ref","MenuItem","Fields","f","fieldIndex","isNested","newFieldInterface","field","fieldOrder","ExplanationTextHeader","ExplanationText","GithubLink","Configure3D","rel","NoOptions","ConfigureInterface","onClickEditJSON","ConfigureImageSegmentation","ConfigureImagePixelSegmentation","ConfigureImageClassification","ConfigureComposite","ConfigureDataEntry","ConfigureAudioTranscription","ConfigureTextEntityRecognition","ConfigureTextEntityRelations","ConfigureTextClassification","ConfigureVideoSegmentation","ConfigureImageLandmarkAnnotation","table","hotkeyIconStyle","onChangeHotkey","hotkeyList","onClearHotkeys","selectedHotKey","setSelectedHotKey","modifier","setCurrentKeyCombo","keyListener","align","hotkey","AdvancedOptionsView","onClearLabelData","forceUpdate","useUpdate","hotkeyDialogOpen","setHotkeyDialogOpen","confirm","getItem","setItem","reload","KeyboardShortcutManagerDialog","BigButton","BigInterfaceSelect","currentInterfaceType","use","LanguageDetector","initReactI18next","fallbackLng","debug","interpolation","escapeValue","resources","fr","translation","frTranslation","en","enTranslation","cn","cnTranslation","pt","ptBrTranslation","nl","nlTranslation","clobber","defaultIfNotClobbered","isClobbered","useDebugValue","notClobberedValue","setNotClobberedValue","TextClassification","useClobberedState","currentSampleIndex","setCurrentSampleIndex","availableLabels","initialLabels","multipleLabels","hotkeysEnabled","disableHotkeys","onPrev","onSaveTaskOutputItem","onExit","onNext","simpleSequenceToEntitySequence","simpleSeq","entSeq","charsPassed","seq","start","end","simpleSequenceAndRelationsToEntitySequence","sequence","relationships","textIdsInRelation","to","textId","entities","relations","entitySequenceToSimpleSeq","doc","sort","nextEntity","TextEntityRecognition","initialSequence","titleContent","TextEntityRelations","initialRelations","relationshipLabels","initialRelationships","getRandomColor","h","rid","convertToRIARegionFmt","regionType","cls","classification","tags","centerX","centerY","w","points","keypointsDefinitionId","convertFromRIARegionFmt","riaRegion","convertToRIAImageFmt","taskDatum","frameTime","convertToRIAKeyframes","newKeyframes","regionTypeToTool","polygon","point","emptyObj","emptyArr","globalSampleIndex","containerProps","onModifySample","selectedIndex","setSelectedIndex","showTags","changeShowTags","selectedTool","changeSelectedTool","isClassification","isPixel","saveCurrentIndexAnnotation","img","images","allowedArea","labelProps","regionClsList","regionTagList","nextAction","onNextImage","onPrevImage","singleImageList","enabledTools","rt","fullImageSegmentationMode","selectedImage","taskDescription","autoSegmentationOptions","HeaderLeftSideContainer","onClickHeaderItem","headerItems","Workspace","headerLeftSide","iconSidebarItems","rightSidebarItems","brightColors","letters","hashInt","indexOf","ImageContainer","objectFit","flexShrink","CheckButton","ImageClassification","setSampleIndex","enlargedLabel","changeEnlargedLabel","currentOutput","changeCurrentOutput","onDone","onNextNoSave","newOutput","onClickLabel","allowMultiple","hotkeyMap","backspace","enter","rightarrow","leftarrow","labelKeyMap","nextAvailableLetter","WorkspaceContainer","getUDTKeyFrames","riaOutput","customId","videoTime","videoSrc","audio","phraseBank","initialTranscriptionText","posingTools","getTaskDescription","linkButtonContainer","linkButton","footer","footerContent","footerBorder","footerCount","allSamplesButton","sampleIcon","menuButton","sectionHeader","SampleContainer","hideDescription","defaultHideDescription","lastSampleExitText","requireCompleteToPressNext","minContentHeight","totalSamples","onChangeSample","changeHideDescriptionState","changeHideDescription","hide","sampleDrawerOpen","changeSampleDrawerOpen","LinkButton","escapeHtml","DataEntry","completeText","explain","BadOHA","Composite","changeCurrentSampleIndex","selectedField","changeSelectedField","indexZero","InterfaceIcon","UniversalDataViewer","onExitProp","hideHeader","onSaveTaskOutputItemProp","onClickSetup","EmptySampleContainer","ImageSegmentation","VideoSegmentation","AudioTranscription","ImageLandmarkAnnotation","msgBox","ToastContext","useToasts","addToast","ToastProvider","fullLife","messageType","msg","toasts","changeToasts","RawJSONEditor","onSave","jsonText","setJSONText","editorProps","$blockScrolling","Infinity","noop","setTab","newInterface","isNotNested","newDataset","sampleInput","changeText","newText","Sentry","dsn","whitelistUrls","ErrorBoundary","hasError","errorInfo","withScope","setExtras","eventId","captureException","errorString","React","Component","Stat","Label","Value","stats","LabelHelpIs","verifying","setVerifying","textFieldValue","setTextFieldValue","apikey","PaperContainer","useActiveDataset","useFileContext","setFile","setDataset","FileContext","Link","usdFormatter","Intl","NumberFormat","currency","preciseUSDFormatter","maximumFractionDigits","minimumFractionDigits","steps","useLabelHelp","labelHelpEnabled","labelHelpError","loadMyCredits","variables","totalCost","formulaFunc","myCredits","labelHelp","labelHelpInfo","setLabelHelpInfo","collabUrl","loaded","loadJob","varName","sample_count","price","api_key","custom_id","toFixed","LabelHelpContext","LabelHelpProvider","loadingPricingConfig","setLoadingPricingConfig","pricingConfig","setPricingConfig","loadingMyTeam","setLoadingMyTeam","setMyCredits","loadPricingConfig","apiKey","credit","completedSamples","totalInteractions","totalSamplesConsidered","isLabelOnlyMode","useIsLabelOnlyMode","remoteFile","labelHelpDisabled","hasLabelHelpAPIKey","formula","variableDescriptions","variableName","computeDatasetVariable","funcArgs","formulaFuncPos","Function","ak","labelHelpAPIKey","LabelHelpView","hasAPIKey","ActiveLearningView","OverviewContainer","onChangeSampleIndex","onChangeSampleTimeToComplete","sampleTimeToComplete","labelOnlyMode","annotationStartTime","setAnnotationStartTime","isInOverview","percentComplete","Stats","duration","selectedSampleIndex","interface_type","LabelErrorBoundary","relativeIndex","saveIcon","editIcon","initialMode","valueDisplay","setValueDisplay","changeMode","sampleInputEditor","changeSampleInputEditor","ipcRenderer","headerTabs","newTimeToComplete","newSamplesInWindow","samplesInWindow","timeToCompleteSample","useTimeToCompleteSample","changeSampleTimeToComplete","onOpenSettingsPage","onOpenSamplesPage","onOpenLabelPage","removeListener","average_time_to_complete_sample","shortcutHandlers","switch_to_label","switch_to_setup","switch_to_samples","allowChanges","handlers","EditableTitleText","newName","SetupPage","some","splice","LabelView","EditSampleDialog","newInput","changeLog","humanReadableChangeLog","op","sampleMatch","seamless","getIn","updateIn","addToArray","withoutIn","parentPath","parentObj","object","patches","patch","isNaN","o","hash","charCodeAt","hashString","collab","serverUrl","getJSON","payload","postJSON","patchJSON","sessionId","bent","initialContent","short_id","udt_json","getLatestState","updateToLatestState","hashOfLatestState","latestVersion","humanReadableLog","getHumanReadableLog","newState","applySeamlessPatch","rfc6902","CUSTOM_COLLABORATION_SERVER","convertToCollaborativeFile","createSession","joinSession","AddSamplesKeys","k","sampleKeys","flatten","validate","toCSV","webReturn","saveFile","workingInterfaces","shouldUpdateAWSStorage","getFilesDifferences","fetchAFile","blob","fileNameExist","createOrReplaceProjectFile","createOrReplaceAnnotations","imageOrVideoName","createOrReplaceImages","UpdateAWSStorage","changeFile","saveAs","saveFileAsync","showSaveDialog","filters","extensions","newFilePath","writeFile","toUDTCSV","useFilesystem","checkForLatestPatch","applyLatestPatches","sendPatchIfChanged","useServer","useAWSCognito","udtInterface","last_used_interface_type","udtSamples","usedToyDataset","numCompleted","dataset_size","samples_completed","percent_completed","toy_dataset_used","recently_used_toy_dataset","useFileTelemetry","openFile","fsFile","handleLoadedFile","openUrl","decodeURIComponent","labelOnly","history","replaceState","makeSession","newFile","Buttons","errorDetails","detect","preventNavigation","confirmationMessage","returnValue","useFileHandler","shouldPreventNavigation","usePreventNavigation","setSelectedBrush","onCreateTemplate","openRecentItem","file_type","outputName","download","sessionName","AppErrorBoundary","DatasetEditor","StartingPage","onOpenWelcomePage","onNewFile","arg0","templateName","saveFileAs","exportToCSV","onOpenFileFromToolbar","onChangeFileName","Loading","App","fallback","Theme","DesktopApp","LocalStorageApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a8a11fe.chunk.js","sourcesContent":["import React from \"react\"\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport \"./theme.css\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: colors.blue,\n    secondary: colors.blue,\n  },\n  typography: {\n    fontFamily: '\"Inter\", \"Roboto\", sans-serif',\n    button: {\n      textTransform: \"none\",\n    },\n  },\n})\n\nexport default ({ children }: any) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n","export const defaultHotkeys = [\n  {\n    id: \"switch_to_label\",\n    description: \"Go to Labels Tab\",\n    binding: \"shift+3\",\n  },\n  {\n    id: \"switch_to_setup\",\n    description: \"Go to Setup Tab\",\n    binding: \"shift+1\",\n  },\n  {\n    id: \"switch_to_samples\",\n    description: \"Go to Samples Tab\",\n    binding: \"shift+2\",\n  },\n  {\n    id: \"select_tool\",\n    description: \"Switch to the Select Tool\",\n    binding: \"escape\",\n  },\n  {\n    id: \"zoom_tool\",\n    description: \"Select the Zoom Tool\",\n    binding: \"z\",\n  },\n  {\n    id: \"create_point\",\n    description: \"Create a point\",\n  },\n  {\n    id: \"create_bounding_box\",\n    description: \"Create a bounding box\",\n    binding: \"b\",\n  },\n  {\n    id: \"pan_tool\",\n    description: \"Select the Pan Tool\",\n    binding: \"p\",\n  },\n  {\n    id: \"create_polygon\",\n    description: \"Create a Polygon\",\n  },\n  {\n    id: \"create_pixel\",\n    description: \"Create a Pixel Mask\",\n  },\n  {\n    id: \"save_and_previous_sample\",\n    description: \"Save and go to previous sample\",\n    binding: \"a\",\n  },\n  {\n    id: \"save_and_next_sample\",\n    description: \"Save and go to next sample\",\n    binding: \"d\",\n  },\n  {\n    id: \"save_and_exit_sample\",\n    description: \"Save and exit current sample\",\n  },\n  {\n    id: \"exit_sample\",\n    description: \"Exit sample without saving\",\n  },\n]\nexport default defaultHotkeys\n","import React, { createContext, useContext, useMemo } from \"react\"\nimport { defaultHotkeys } from \"./default-hotkeys\"\nimport { useAppConfig } from \"../AppConfig\"\n\nexport const HotkeyContext = createContext({\n  hotkeys: defaultHotkeys,\n  changeHotkey: (id, newBinding) => null,\n})\n\nexport const useHotkeyStorage = () => useContext(HotkeyContext)\n\nexport const HotkeyStorageProvider = ({ children }) => {\n  const { fromConfig, setInConfig } = useAppConfig()\n\n  const hotkeys = useMemo(\n    () =>\n      defaultHotkeys.map((item) => {\n        if (fromConfig(`hotkeys.${item.id}`)) {\n          return { ...item, binding: fromConfig(`hotkeys.${item.id}`) }\n        } else {\n          return item\n        }\n      }),\n    [fromConfig]\n  )\n\n  const keyMap = useMemo(() => {\n    const keyMap = {}\n    for (const { id, binding } of hotkeys) {\n      if (!binding) continue\n      keyMap[id] = binding\n    }\n    return keyMap\n  }, [hotkeys])\n\n  const contextValue = useMemo(\n    () => ({\n      hotkeys,\n      keyMap,\n      clearHotkeys: () => {\n        for (const { id } of hotkeys) {\n          setInConfig(`hotkeys.${id}`, null)\n        }\n      },\n      changeHotkey: (id, newBinding) =>\n        setInConfig(`hotkeys.${id}`, newBinding),\n    }),\n    [setInConfig, hotkeys, keyMap]\n  )\n\n  return (\n    <HotkeyContext.Provider value={contextValue}>\n      {children}\n    </HotkeyContext.Provider>\n  )\n}\n\nexport { defaultHotkeys }\n","import React, { useMemo, useContext, createContext } from \"react\"\nimport { useLocalStorage } from \"react-use\"\nimport { defaultHotkeys } from \"../HotkeyStorage\"\n\nconst configKeyNames = [\n  \"auth.provider\",\n  \"auth.cognito.identity_pool_id\",\n  \"auth.cognito.region\",\n  \"auth.cognito.user_pool_id\",\n  \"auth.cognito.user_pool_web_client_id\",\n  \"auth.cognito.mandatory_sign_in\",\n  \"auth.cognito.authentication_flow_type\",\n  \"auth.cognito.storage.aws_s3.bucket\",\n  \"auth.cognito.storage.aws_s3.region\",\n  \"auth.s3iam.access_key_id\",\n  \"auth.s3iam.secret_access_key\",\n  \"auth.s3iam.region\",\n  \"auth.proxy.corsproxy\",\n  \"labelhelp.disabled\",\n  \"labelhelp.apikey\",\n  ...defaultHotkeys.map(({ id }) => `hotkeys.${id}`),\n]\n\nconst defaultAppConfig = {\n  \"auth.proxy.corsproxy\":\n    // TODO this is currently deployed on @seveibar's cloudflare, it'd be\n    // better if it was deployed on the organization's cloudflare\n    \"https://corsproxy.seve.workers.dev/corsproxy/?apiurl={URL}\",\n}\n\nconst jsonParseOrEmpty = (s) => {\n  try {\n    return JSON.parse(s)\n  } catch (e) {\n    return {}\n  }\n}\n\n// NOTE: appConfig should not allow any nested values\nexport const AppConfigContext = createContext({\n  appConfig: {\n    ...defaultAppConfig,\n    ...jsonParseOrEmpty(window.localStorage.app_config),\n  },\n  setAppConfig: (newConfig) => undefined,\n  fromConfig: (key) => undefined,\n  setInConfig: (key, value) => undefined,\n})\n\nexport const useAppConfig = () => useContext(AppConfigContext)\n\nexport const AppConfigProvider = ({ children }) => {\n  const [appConfig, setAppConfig] = useLocalStorage(\"app_config\", {})\n  const contextValue = useMemo(() => {\n    return {\n      appConfig,\n      setAppConfig,\n      fromConfig: (key) => {\n        if (!configKeyNames.includes(key)) {\n          throw new Error(`Unknown config key name \"${key}\"`)\n        }\n        if (appConfig[key] === undefined) {\n          return defaultAppConfig[key]\n        }\n        return appConfig[key]\n      },\n      setInConfig: (key, value) => {\n        if (\n          typeof value !== \"string\" &&\n          typeof value !== \"number\" &&\n          typeof value !== \"boolean\" &&\n          value !== undefined &&\n          value !== null\n        ) {\n          throw new Error(\n            `Config can only have boolean/strings/numbers/null/undefined, something tried to set appConfig[\"${key}\"] = ${JSON.stringify(\n              value\n            )}`\n          )\n        }\n        if (!configKeyNames.includes(key)) {\n          throw new Error(`Unknown config key name \"${key}\"`)\n        }\n        setAppConfig({ ...appConfig, [key]: value })\n      },\n    }\n  }, [appConfig, setAppConfig])\n  return (\n    <AppConfigContext.Provider value={contextValue}>\n      {children}\n    </AppConfigContext.Provider>\n  )\n}\n","import Amplify, { Auth } from \"aws-amplify\"\n\nclass CognitoHandler {\n  authProvider = \"cognito\"\n  constructor(appConfig) {\n    this.authConfig = {\n      Auth: {\n        identityPoolId: appConfig[\"auth.cognito.identity_pool_id\"],\n        region: appConfig[\"auth.cognito.region\"],\n        userPoolId: appConfig[\"auth.cognito.user_pool_id\"],\n        userPoolWebClientId: appConfig[\"auth.cognito.user_pool_web_client_id\"],\n        mandatorySignIn: true,\n        authenticationFlowType: \"USER_PASSWORD_AUTH\",\n      },\n      Storage: {\n        AWSS3: {\n          bucket: appConfig[\"auth.cognito.storage.aws_s3.bucket\"],\n          region: appConfig[\"auth.cognito.storage.aws_s3.region\"],\n        },\n      },\n    }\n    this.isLoggedIn = false\n    this.checkIfLoggedIn()\n  }\n  checkIfLoggedIn = async () => {\n    Amplify.configure(this.authConfig)\n    const userHandle = await Auth.currentAuthenticatedUser()\n    if (userHandle) {\n      this.user = userHandle\n      this.isLoggedIn = true\n      this.hasChanged = true\n    }\n  }\n  setUser = (userHandle) => {\n    this.user = userHandle\n    this.isLoggedIn = Boolean(userHandle)\n    this.hasChanged = true\n  }\n  login = async (tryUser) => {\n    Amplify.configure(this.authConfig)\n\n    const userHandle = await Auth.currentAuthenticatedUser()\n\n    this.user = userHandle\n    this.hasChanged = true\n  }\n  logout = () => {\n    this.user = null\n    this.isLoggedIn = false\n    this.hasChanged = true\n    Auth.signOut()\n  }\n  getState = () => ({\n    user: this.user,\n    isLoggedIn: this.isLoggedIn,\n    authConfig: this.authConfig,\n  })\n}\n\nexport default CognitoHandler\n","import React, {\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n  useReducer,\n} from \"react\"\nimport { useAppConfig } from \"../../components/AppConfig\"\nimport CognitoHandler from \"./cognito-handler.js\"\n\nexport const authProviders = [\"cognito\"]\n\nconst AuthContext = createContext({ authProvider: \"none\" })\n\nexport const AuthProvider = ({ children }) => {\n  const { appConfig, fromConfig } = useAppConfig()\n  const [handler, setHandler] = useState({ authProvider: \"none\" })\n  const authProvider = fromConfig(\"auth.provider\")\n  const [handlerVersion, incHandlerVersion] = useReducer(\n    (state) => state + 1,\n    0\n  )\n\n  useEffect(() => {\n    if (handler && handler.authProvider === authProvider) return\n    if (authProvider === \"cognito\") {\n      setHandler(new CognitoHandler(appConfig))\n    }\n  }, [authProvider, appConfig, handler])\n\n  useEffect(() => {\n    if (!handler) return\n    const interval = setInterval(() => {\n      if (handler.hasChanged) {\n        incHandlerVersion()\n        handler.hasChanged = false\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval)\n    }\n  }, [handler, handlerVersion])\n\n  const contextValue = useMemo(\n    () => ({\n      authProvider: handler.authProvider,\n      ...(handler.getState ? handler.getState() : {}),\n      // TODO remove setUser\n      setUser: handler.setUser,\n      logout: handler.logout,\n      login: handler.login,\n      handlerVersion,\n    }),\n    [handler, handlerVersion]\n  )\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport default useAuth\n","import React, { Fragment, useState } from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { styled } from \"@material-ui/core/styles\"\n\nimport { useTranslation } from \"react-i18next\"\n\nimport Amplify, { Auth } from \"aws-amplify\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useAuth } from \"../../utils/auth-handlers/use-auth.js\"\n\nconst ErrorText = styled(\"div\")({\n  padding: 16,\n  color: colors.red[500],\n})\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default ({ onUserChange, onRequireCompleteSignUp, onClose }) => {\n  const { authConfig, setUser } = useAuth()\n  const classes = useStyles()\n\n  const [error, setError] = useState()\n  const { t } = useTranslation()\n\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n    notAuthorizedException: false,\n  })\n\n  const handleSignInClick = () => {\n    if (isEmpty(state.username) || isEmpty(state.password)) {\n      setState((prevState) => ({\n        ...prevState,\n        notAuthorizedException: true,\n      }))\n    } else {\n      SignInAWS(state.username, state.password)\n    }\n  }\n\n  const handleTextFieldChange = (event) => {\n    event.persist()\n    setState((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n      notAuthorizedException: false,\n    }))\n  }\n\n  async function SignInAWS(username, password) {\n    setError(null)\n    try {\n      await Amplify.configure(authConfig)\n      await Auth.signIn(username, password)\n        .then((user) => {\n          setUser(user)\n          if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n            onRequireCompleteSignUp(user)\n          } else {\n            onUserChange(user)\n            onClose()\n          }\n          return user\n        })\n        .catch((err) => {\n          if (err.code === \"UserNotConfirmedException\") {\n            console.log(\"Must confirm the account\")\n            // The error happens if the user didn't finish the confirmation step when signing up\n            // In this case you need to resend the code and confirm the user\n            // About how to resend the code and confirm the user, please check the signUp part\n          } else if (err.code === \"PasswordResetRequiredException\") {\n            console.log(\"Password has been reset\")\n            // The error happens when the password is reset in the Cognito console\n            // In this case you need to call forgotPassword to reset the password\n            // Please check the Forgot Password part.\n          } else if (err.code === \"NotAuthorizedException\") {\n            console.log(\"Bad password message\")\n            setState({ ...state, notAuthorizedException: true, password: \"\" })\n            // The error happens when the incorrect password is provided\n          } else if (err.code === \"UserNotFoundException\") {\n            console.log(\"User not found message\")\n            // The error happens when the supplied username/username does not exist in the Cognito user pool\n          } else {\n            console.log(\"Error that we do not handle for\")\n            console.log(err.code)\n          }\n          setError(err.toString())\n          return err\n        })\n    } catch (e) {\n      setError(e.toString())\n    }\n  }\n\n  return (\n    <Fragment>\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(\"sign-in\")}\n      </Typography>\n      {error && <ErrorText>{error}</ErrorText>}\n      <form className={classes.form} noValidate>\n        <TextField\n          error={state.notAuthorizedException}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          name=\"username\"\n          autoComplete=\"username\"\n          helperText={\n            state.notAuthorizedException\n              ? \"The username or password is incorrect.\"\n              : \"\"\n          }\n          autoFocus\n          onChange={handleTextFieldChange}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={state.password}\n          onChange={handleTextFieldChange}\n        />\n        <FormControlLabel\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\n          label=\"Remember me\"\n        />\n        <Button\n          onClick={handleSignInClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          {t(\"sign-in\")}\n        </Button>\n      </form>\n    </Fragment>\n  )\n}\n","import React, { Fragment, useState } from \"react\"\nimport { Typography, TextField, Button } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Auth } from \"aws-amplify\"\nimport { useAuth } from \"../../utils/auth-handlers/use-auth.js\"\nimport { useTranslation } from \"react-i18next\"\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default ({ requiredAttributes, onUserChange, onClose }) => {\n  const { user } = useAuth()\n  const requiredAttributesDict = {}\n  const requiredAttributesErrorDict = {}\n  requiredAttributes.forEach((requiredAttribute) => {\n    requiredAttributesDict[requiredAttribute] = \"\"\n    requiredAttributesErrorDict[requiredAttribute] = false\n  })\n\n  const [state, setState] = useState({\n    newPassword: \"\",\n    newPasswordNotValid: false,\n    newPasswordConfirmation: \"\",\n    newPasswordNotEqualsConfirmation: false,\n    requiredAttributesDict: requiredAttributesDict,\n    requiredAttributesErrorDict: requiredAttributesErrorDict,\n  })\n\n  const classes = useStyles()\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const handleCompleteSignUpClick = () => {\n    if (\n      checkIfPasswordEqualsConfirmationPassword() &&\n      _handleCantBeNull(\"checkAll\")\n    ) {\n      completeNewPassword()\n    } else {\n      console.log(\"Something missing\")\n    }\n\n    /// completeNewPassword();\n  }\n\n  const _handleAttributesTextFieldChange = (event) => {\n    setState({\n      ...state,\n      requiredAttributesDict: {\n        ...state.requiredAttributesDict,\n        [event.target.name]: event.target.value,\n      },\n    })\n  }\n\n  const _handleTextFieldChange = (event) => {\n    setState({\n      ...state,\n      newPasswordError: null,\n      newPasswordNotValid: false,\n      newPasswordNotEqualsConfirmation: false,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const checkIfPasswordEqualsConfirmationPassword = () => {\n    if (state.newPassword === state.newPasswordConfirmation) {\n      setState({ ...state, newPasswordNotEqualsConfirmation: false })\n      return true\n    } else {\n      setState({ ...state, newPasswordNotEqualsConfirmation: true })\n      return false\n    }\n  }\n\n  const _handleCantBeNull = (e) => {\n    let allGood = true\n    if (e === \"checkAll\") {\n      requiredAttributes.forEach((requiredAttribute) => {\n        if (state.requiredAttributesDict[requiredAttribute] === \"\") {\n          setState({\n            ...state,\n            requiredAttributesErrorDict: {\n              ...state.requiredAttributesErrorDict,\n              [requiredAttribute]: true,\n            },\n          })\n          allGood = false\n        }\n      })\n    } else {\n      if (e.target.value === \"\") {\n        setState({\n          ...state,\n          requiredAttributesErrorDict: {\n            ...state.requiredAttributesErrorDict,\n            [e.target.name]: true,\n          },\n        })\n      } else {\n        setState({\n          ...state,\n          requiredAttributesErrorDict: {\n            ...state.requiredAttributesErrorDict,\n            [e.target.name]: false,\n          },\n        })\n      }\n    }\n    return allGood\n  }\n\n  function completeNewPassword() {\n    Auth.completeNewPassword(\n      user, // the Cognito User Object\n      state.newPassword, // the new password\n      state.requiredAttributesDict\n    )\n      .then((user) => {\n        onUserChange(user)\n        onClose()\n      })\n      .catch((err) => {\n        setState({ ...state, newPasswordError: err.toString() })\n      })\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <Fragment>\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(\"complete-your-sign-up\")}\n      </Typography>\n      <form className={classes.form} noValidate>\n        <TextField\n          error={state.newPasswordNotValid}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"newPassword\"\n          label=\"New password\"\n          type=\"password\"\n          id=\"password\"\n          value={state.newPassword}\n          onChange={_handleTextFieldChange}\n          helperText={state.newPasswordError || \"\"}\n        />\n        <TextField\n          error={state.newPasswordNotEqualsConfirmation}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"newPasswordConfirmation\"\n          label=\"Confirm new password\"\n          type=\"password\"\n          id=\"confirm-password\"\n          onChange={_handleTextFieldChange}\n          value={state.newPasswordConfirmation}\n          onBlur={checkIfPasswordEqualsConfirmationPassword}\n          helperText={\n            state.newPasswordNotEqualsConfirmation\n              ? \"New password and confirmation password must be the same\"\n              : \"\"\n          }\n        />\n        {requiredAttributes.map((requiredAttribute) => {\n          return (\n            <TextField\n              error={state.requiredAttributesErrorDict[requiredAttribute]}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name={requiredAttribute.toString()}\n              key={requiredAttribute.toString()}\n              label={capitalizeFirstLetter(requiredAttribute.toString())}\n              type=\"text\"\n              id={requiredAttribute.toString()}\n              onChange={_handleAttributesTextFieldChange}\n              value={state.requiredAttributesDict.requiredAttribute}\n              onBlur={_handleCantBeNull}\n              helperText={\n                state.requiredAttributesErrorDict[requiredAttribute]\n                  ? `${capitalizeFirstLetter(\n                      requiredAttribute.toString()\n                    )} can't be null`\n                  : \"\"\n              }\n            />\n          )\n        })}\n        <Button\n          onClick={handleCompleteSignUpClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          {t(\"complete-sign-up\")}\n        </Button>\n      </form>\n    </Fragment>\n  )\n}\n","import React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Drawer from \"@material-ui/core/Drawer\"\n\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Grid from \"@material-ui/core/Grid\"\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport SignIn from \"./SignIn\"\nimport CompleteSignUp from \"./CompleteSignUp\"\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: 500,\n  },\n  root: {\n    height: \"100vh\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  close: {\n    cursor: \"pointer\",\n    color: theme.palette.secondary.main,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}))\n\nexport default ({ loginDrawerOpen, onClose }) => {\n  const classes = useStyles()\n  const [user, setUser] = useState({})\n\n  const [state, setState] = useState({\n    signingIn: true,\n    completeSignUp: false,\n    user: \"\",\n  })\n\n  const toggleCompleteSignUp = (user) => {\n    setState((prevState) => ({\n      ...prevState,\n      signingIn: false,\n      completeSignUp: true,\n      user: user,\n      requiredAttributes: user.challengeParam.requiredAttributes,\n    }))\n  }\n\n  const drawer = () => (\n    <div className={classes.drawer} role=\"presentation\">\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          component={Paper}\n          elevation={6}\n          square\n        >\n          <div className={classes.paper}>\n            <Grid container>\n              <Grid item xs>\n                <ArrowForwardIcon onClick={onClose} className={classes.close} />\n              </Grid>\n            </Grid>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            {state.signingIn && (\n              <SignIn\n                onRequireCompleteSignUp={(user) => toggleCompleteSignUp(user)}\n                onUserChange={(user) => {\n                  setUser(user)\n                }}\n                onClose={onClose}\n              />\n            )}\n            {state.completeSignUp && (\n              <CompleteSignUp\n                requiredAttributes={state.requiredAttributes}\n                user={user}\n                onClose={onClose}\n                onUserChange={(user) => {\n                  setUser(user)\n                }}\n              />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n\n  return (\n    <>\n      <Drawer anchor=\"right\" open={loginDrawerOpen} onClose={onClose}>\n        {drawer()}\n      </Drawer>\n    </>\n  )\n}\n","// @flow\n\nexport default () => {\n  if (window.require) {\n    return window.require(\"electron\")\n  }\n  return null\n}\n","import posthog from \"posthog-js\"\nimport useElectron from \"./use-electron\"\n\nconst posthogMock = {\n  opt_in_capturing: () => null,\n  opt_out_capturing: () => null,\n  init: () => null,\n  reset: () => null,\n  capture: () => null,\n  capture_forms: () => null,\n  capture_pageview: () => null,\n  register: () => null,\n  register_once: () => null,\n  unregister: () => null,\n  identify: () => \"mock\",\n  alias: () => null,\n  set_config: () => null,\n  get_config: () => null,\n  get_property: () => null,\n  get_distinct_id: () => null,\n  has_opted_out_capturing: () => true,\n  has_opted_in_capturing: () => false,\n  disable_all_events: () => null,\n  people: {\n    set: () => null,\n    set_once: () => null,\n  },\n}\n\nwindow.posthogInitialized = false\nexport default () => {\n  const isDesktop = Boolean(useElectron())\n  if (window.Cypress) {\n    window.posthogInitialized = true\n    window.posthog = posthogMock\n  }\n  if (!window.posthogInitialized) {\n    posthog.init(\"dSrx1PbFd02XsxlLd7qNbeTxKZwwao2sclVmapyYlT4\", {\n      api_host: \"https://posthog.universaldatatool.com\",\n      autocapture: false,\n    })\n    window.posthog = posthog\n    const domain = isDesktop ? \"desktop\" : window.location.origin\n    posthog.capture(\"domain\", { domain })\n    posthog.capture(\"is_desktop\", { isDesktop: isDesktop })\n    posthog.people.set({ is_desktop: isDesktop, domain })\n    window.posthogInitialized = true\n  }\n  return window.posthog\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { useLocalStorage } from \"react-use\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport PeopleIcon from \"@material-ui/icons/People\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport AddBoxTwoTone from \"@material-ui/icons/AddBoxTwoTone\"\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\", marginLeft: 8 })\nconst WIDTH = 300\nconst borderColor = colors.grey[500]\nconst popupBoxBeforeAndAfter = {\n  bottom: \"100%\",\n  left: \"25%\",\n  border: \"solid transparent\",\n  content: '\" \"',\n  height: 0,\n  width: 0,\n  position: \"absolute\",\n  pointerEvents: \"none\",\n}\nconst PopupBox = styled(\"div\")({\n  position: \"absolute\",\n  zIndex: 10,\n  top: 45,\n  padding: 16,\n  boxSizing: \"border-box\",\n  borderRadius: 4,\n  left: -WIDTH / 4 + 22,\n  backgroundColor: \"#fff\",\n  border: `1px solid ${borderColor}`,\n  width: WIDTH,\n  minHeight: 200,\n  boxShadow: \"0px 3px 12px rgba(0,0,0,0.3)\",\n  \"&:before\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(0,0,0, 0)\",\n    borderBottomColor: borderColor,\n    borderWidth: 12,\n    marginLeft: -12,\n  },\n  \"&:after\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(255,255,255, 0)\",\n    borderBottomColor: \"#fff\",\n    borderWidth: 10,\n    marginLeft: -10,\n  },\n  \"& h1\": {\n    fontSize: 18,\n    marginTop: 0,\n    color: colors.blue[800],\n  },\n  \"& h2\": {\n    fontSize: 14,\n    color: colors.grey[800],\n  },\n  opacity: 1,\n  transition: \"opacity 200ms linear, transform 200ms ease\",\n  \"&.hidden\": {\n    opacity: 0,\n    transform: \"translate(0, 10px)\",\n    pointerEvents: \"none\",\n  },\n})\nconst ErrorText = styled(\"div\")({\n  color: colors.red[500],\n  padding: 8,\n  fontSize: 14,\n})\n\nconst CreateNewButton = styled(Button)({\n  marginTop: 16,\n  justifyContent: \"flex-start\",\n  color: colors.blue[500],\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n  },\n})\nconst ExitButton = styled(Button)({\n  marginTop: 16,\n  justifyContent: \"flex-start\",\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n    color: colors.red[500],\n  },\n})\n\nexport default ({\n  fileOpen = false,\n  inSession = false,\n  error,\n  onJoinSession,\n  onCreateSession,\n  onLeaveSession,\n  sessionBoxOpen,\n  changeSessionBoxOpen,\n}) => {\n  const [loadingSession, changeLoadingSession] = useState(false)\n  const [sessionUrl, changeSessionUrl] = useState(\"\")\n  const [userName, changeUserName] = useLocalStorage(\"userName\", \"anonymous\")\n  const posthog = usePosthog()\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (loadingSession) {\n      setTimeout(() => {\n        changeLoadingSession(false)\n      }, 10000)\n    }\n  }, [loadingSession])\n\n  return (\n    <Container\n      title=\"collaborate-icon\"\n      onMouseEnter={() => changeSessionBoxOpen(true)}\n      onMouseLeave={() => changeSessionBoxOpen(false)}\n    >\n      <IconButton style={{ color: inSession ? colors.blue[500] : undefined }}>\n        <PeopleIcon />\n      </IconButton>\n      <PopupBox className={sessionBoxOpen ? \"\" : \"hidden\"}>\n        <h1>{t(\"collaborate\")}</h1>\n        {!inSession ? (\n          <>\n            <h2>{t(\"join-a-session\")}</h2>\n            <TextField\n              variant=\"outlined\"\n              label=\"URL to Session\"\n              value={sessionUrl}\n              onChange={(e) => changeSessionUrl(e.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      color=\"primary\"\n                      onClick={() => {\n                        posthog.capture(\"join_collaborative_session\")\n                        onJoinSession(sessionUrl)\n                      }}\n                      disabled={!sessionUrl}\n                    >\n                      <ArrowForwardIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            {error && <ErrorText>{error}</ErrorText>}\n            <CreateNewButton\n              fullWidth\n              disabled={!fileOpen || loadingSession || error}\n              onClick={() => {\n                posthog.capture(\"create_collaborative_session\")\n                onCreateSession()\n                changeLoadingSession(true)\n              }}\n            >\n              {loadingSession ? (\n                <CircularProgress className=\"icon\" size={24} />\n              ) : (\n                <AddBoxTwoTone className=\"icon\" />\n              )}\n              Create New Session\n            </CreateNewButton>\n          </>\n        ) : (\n          <>\n            <TextField\n              style={{ marginTop: 12 }}\n              variant=\"outlined\"\n              label=\"User Name\"\n              value={userName}\n              onChange={(e) => changeUserName(e.target.value)}\n            />\n            <ExitButton fullWidth onClick={onLeaveSession}>\n              <ExitToAppIcon className=\"icon\" />\n              {t(\"leave-session\")}\n            </ExitButton>\n          </>\n        )}\n      </PopupBox>\n    </Container>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst WIDTH = 300\nconst borderColor = colors.grey[500]\nconst popupBoxBeforeAndAfter = {\n  bottom: \"100%\",\n  left: \"25%\",\n  border: \"solid transparent\",\n  content: '\" \"',\n  height: 0,\n  width: 0,\n  position: \"absolute\",\n  pointerEvents: \"none\",\n}\nconst PopupBox = styled(\"div\")({\n  position: \"absolute\",\n  zIndex: 10,\n  top: 45,\n  padding: 16,\n  boxSizing: \"border-box\",\n  borderRadius: 4,\n  left: -WIDTH / 4 + 22,\n  backgroundColor: \"#fff\",\n  border: `1px solid ${borderColor}`,\n  width: WIDTH,\n  minHeight: 200,\n  boxShadow: \"0px 3px 12px rgba(0,0,0,0.3)\",\n  \"&:before\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(0,0,0, 0)\",\n    borderBottomColor: borderColor,\n    borderWidth: 12,\n    marginLeft: -12,\n  },\n  \"&:after\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(255,255,255, 0)\",\n    borderBottomColor: \"#fff\",\n    borderWidth: 10,\n    marginLeft: -10,\n  },\n  \"& h1\": {\n    fontSize: 18,\n    marginTop: 0,\n    color: colors.blue[800],\n  },\n  \"& h2\": {\n    fontSize: 14,\n    color: colors.grey[800],\n  },\n  opacity: 1,\n  transition: \"opacity 200ms linear, transform 200ms ease\",\n  \"&.hidden\": {\n    opacity: 0,\n    transform: \"translate(0, 10px)\",\n    pointerEvents: \"none\",\n  },\n})\n\nexport default ({ open, children }) => {\n  return <PopupBox className={open ? \"\" : \"hidden\"}>{children}</PopupBox>\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport HeaderPopupBox from \"../HeaderPopupBox\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\" })\n\nconst StyledButton = styled(Button)({\n  justifyContent: \"flex-start\",\n  \"& .fakeicon\": {\n    display: \"inline-block\",\n    marginRight: 8,\n    padding: 4,\n    textAlign: \"center\",\n    paddingTop: 5,\n    fontSize: 11,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    backgroundColor: colors.grey[700],\n    borderRadius: 4,\n    width: 36,\n    \"&.blue\": {\n      backgroundColor: colors.blue[700],\n    },\n    \"&.green\": {\n      backgroundColor: colors.green[700],\n    },\n    \"&.orange\": {\n      backgroundColor: colors.orange[700],\n    },\n  },\n})\n\nexport default ({ interfaceType, onDownload }) => {\n  const [open, changeOpen] = useState(false)\n  const { t } = useTranslation()\n\n  return (\n    <Container\n      onMouseEnter={() => changeOpen(true)}\n      onMouseLeave={() => changeOpen(false)}\n    >\n      <IconButton>\n        <DownloadIcon />\n      </IconButton>\n      <HeaderPopupBox open={open}>\n        <h1>{t(\"download\")}</h1>\n        <StyledButton fullWidth onClick={() => onDownload(\"csv\")}>\n          <div className=\"fakeicon green\">CSV</div>\n          {t(\"download-csv\")}\n        </StyledButton>\n        <StyledButton fullWidth onClick={() => onDownload(\"json\")}>\n          <div className=\"fakeicon blue\">JSON</div>\n          {t(\"download-json\")}\n        </StyledButton>\n        <StyledButton\n          fullWidth\n          target=\"_blank\"\n          href=\"https://universaldatatool.com/convert\"\n        >\n          <div className=\"fakeicon orange\">↗</div>\n          {t(\"other-formats\")}\n        </StyledButton>\n      </HeaderPopupBox>\n    </Container>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nfunction GitHub(props: Object) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n    </SvgIcon>\n  )\n}\n\nexport default GitHub\n","// @flow weak\n\nimport seed from \"seed-random\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst fade = (cmap, amt) => {\n  const newCmap = {}\n  for (let i = 100; i < 1000; i++) {\n    if (i - amt <= 0) {\n      newCmap[i] = \"#fff\"\n    } else {\n      newCmap[i] = cmap[i - amt]\n    }\n  }\n  return newCmap\n}\n\nconst fadedGrey = {\n  ...colors.grey,\n  // \"800\": colors.grey[600],\n  // \"700\": colors.grey[500],\n  // \"600\": colors.grey[400],\n  // \"500\": colors.grey[300],\n  // \"400\": colors.grey[200],\n  // \"300\": colors.grey[100],\n  isFaded: true,\n}\n\nconst availableColors = [\n  colors.blue,\n  colors.deepOrange,\n  colors.green,\n  colors.purple,\n  colors.pink,\n  colors.cyan,\n  colors.orange,\n  colors.indigo,\n]\n\nconst colorMap = {\n  ...colors,\n  complete: colors.blue,\n  incomplete: fadedGrey,\n  faded: fadedGrey,\n  review: colors.deepOrange,\n  ellipsis1: fade(colors.grey, 100),\n  ellipsis2: fade(colors.grey, 200),\n  ellipsis3: fade(colors.grey, 300),\n}\n\nexport default (brush) => {\n  return (\n    colorMap[brush] || availableColors[seed(brush) * availableColors.length]\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport BrushIcon from \"@material-ui/icons/Brush\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport HeaderPopupBox from \"../HeaderPopupBox\"\nimport useEventCallback from \"use-event-callback\"\nimport memoize from \"lodash/memoize\"\nimport getBrushColorPalette from \"../../utils/get-brush-color-palette.js\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\" })\nconst BrushCircle = styled(\"div\")(({ color }) => ({\n  display: \"inline\",\n  marginRight: 8,\n  backgroundColor: color[700],\n  width: 24,\n  height: 24,\n  borderRadius: 20,\n}))\n\nconst OtherColorContainers = styled(\"div\")({\n  paddingTop: 10,\n  padding: 4,\n  display: \"flex\",\n  flexWrap: \"wrap\",\n})\n\nconst StyledIconButton = styled(IconButton)(({ iconcolor, selected }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  backgroundColor: iconcolor[700],\n  border: selected ? `4px solid ${iconcolor[\"A200\"]}` : \"4px solid #fff\",\n  boxSizing: \"content-box\",\n  margin: 4,\n  transition: \"transform 200ms linear\",\n  \"&:hover\": {\n    backgroundColor: iconcolor[800],\n    transform: \"scale(1.2,1.2)\",\n  },\n  \"&:active\": {\n    transition: \"transform 100ms linear\",\n    transform: \"scale(1.4,1.4)\",\n  },\n}))\n\nconst StyledButton = styled(Button)(({ selected, iconcolor }) => ({\n  justifyContent: \"flex-start\",\n  marginTop: 4,\n  marginBottom: 4,\n  paddingTop: 8,\n  paddingBottom: 8,\n  backgroundColor: selected ? iconcolor[50] : \"#fff\",\n  border: selected ? `2px solid ${iconcolor[200]}` : \"2px solid #fff\",\n  \"&:hover\": {\n    backgroundColor: selected ? iconcolor[100] : \"none\",\n  },\n}))\n\nexport default ({ selectedBrush, onChangeSelectedBrush }) => {\n  const [open, changeOpen] = useState(false)\n  const handleClick = useEventCallback((color) =>\n    memoize(() => onChangeSelectedBrush(color))\n  )\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  return (\n    <Container\n      onMouseEnter={() => changeOpen(true)}\n      onMouseLeave={() => changeOpen(false)}\n    >\n      <IconButton>\n        <BrushIcon\n          style={{ color: getBrushColorPalette(selectedBrush)[800] }}\n        />\n      </IconButton>\n      <HeaderPopupBox open={open}>\n        <h1>{t(\"sample-brushes\")}</h1>\n        <StyledButton\n          selected={selectedBrush === \"complete\" || selectedBrush === \"blue\"}\n          iconcolor={colors.blue}\n          fullWidth\n          onClick={handleClick(\"complete\")}\n        >\n          <BrushCircle color={colors.blue} />\n          {t(\"complete\")}\n        </StyledButton>\n        <StyledButton\n          selected={\n            selectedBrush === \"review\" || selectedBrush === \"deepOrange\"\n          }\n          iconcolor={colors.deepOrange}\n          fullWidth\n          onClick={handleClick(\"review\")}\n        >\n          <BrushCircle color={colors.deepOrange} />\n          {t(\"review\")}\n        </StyledButton>\n        <OtherColorContainers>\n          <StyledIconButton\n            onClick={handleClick(\"green\")}\n            selected={selectedBrush === \"green\"}\n            iconcolor={colors.green}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"purple\")}\n            selected={selectedBrush === \"purple\"}\n            iconcolor={colors.purple}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"pink\")}\n            selected={selectedBrush === \"pink\"}\n            iconcolor={colors.pink}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"cyan\")}\n            selected={selectedBrush === \"cyan\"}\n            iconcolor={colors.cyan}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"orange\")}\n            selected={selectedBrush === \"orange\"}\n            iconcolor={colors.orange}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"indigo\")}\n            selected={selectedBrush === \"indigo\"}\n            iconcolor={colors.indigo}\n          />\n        </OtherColorContainers>\n      </HeaderPopupBox>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst SlackIcon = (props) => {\n  return (\n    <SvgIcon>\n      <svg\n        style={{\n          width: 32,\n          height: 32,\n        }}\n        viewBox=\"50 60 160 160\"\n      >\n        <g>\n          <g>\n            <path d=\"M99.4,151.2c0,7.1-5.8,12.9-12.9,12.9s-12.9-5.8-12.9-12.9c0-7.1,5.8-12.9,12.9-12.9h12.9V151.2z\" />\n            <path d=\"M105.9,151.2c0-7.1,5.8-12.9,12.9-12.9s12.9,5.8,12.9,12.9v32.3c0,7.1-5.8,12.9-12.9,12.9 s-12.9-5.8-12.9-12.9C105.9,183.5,105.9,151.2,105.9,151.2z\" />\n          </g>\n          <g>\n            <path d=\"M118.8,99.4c-7.1,0-12.9-5.8-12.9-12.9s5.8-12.9,12.9-12.9s12.9,5.8,12.9,12.9v12.9H118.8z\" />\n            <path d=\"M118.8,105.9c7.1,0,12.9,5.8,12.9,12.9s-5.8,12.9-12.9,12.9H86.5c-7.1,0-12.9-5.8-12.9-12.9 s5.8-12.9,12.9-12.9C86.5,105.9,118.8,105.9,118.8,105.9z\" />\n          </g>\n          <g>\n            <path d=\"M170.6,118.8c0-7.1,5.8-12.9,12.9-12.9c7.1,0,12.9,5.8,12.9,12.9s-5.8,12.9-12.9,12.9h-12.9V118.8z\" />\n            <path d=\"M164.1,118.8c0,7.1-5.8,12.9-12.9,12.9c-7.1,0-12.9-5.8-12.9-12.9V86.5c0-7.1,5.8-12.9,12.9-12.9 c7.1,0,12.9,5.8,12.9,12.9V118.8z\" />\n          </g>\n          <g>\n            <path d=\"M151.2,170.6c7.1,0,12.9,5.8,12.9,12.9c0,7.1-5.8,12.9-12.9,12.9c-7.1,0-12.9-5.8-12.9-12.9v-12.9H151.2z\" />\n            <path d=\"M151.2,164.1c-7.1,0-12.9-5.8-12.9-12.9c0-7.1,5.8-12.9,12.9-12.9h32.3c7.1,0,12.9,5.8,12.9,12.9 c0,7.1-5.8,12.9-12.9,12.9H151.2z\" />\n          </g>\n        </g>\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default SlackIcon\n","// @flow weak\n\nimport React, { memo } from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport StorageIcon from \"@material-ui/icons/Storage\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport CollaborateButton from \"../CollaborateButton\"\nimport DownloadButton from \"../DownloadButton\"\nimport Button from \"@material-ui/core/Button\"\nimport GithubIcon from \"../Header/GithubIcon\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport packageJSON from \"../../../package.json\"\nimport BrushButton from \"../BrushButton\"\nimport useAuth from \"../../utils/auth-handlers/use-auth.js\"\nimport SlackIcon from \"./SlackIcon\"\nimport GitHubButton from \"react-github-btn\"\n\nconst capitalize = (s) => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerButton: {\n    marginLeft: 16,\n  },\n  grow: { flexGrow: 1 },\n  list: {\n    width: 300,\n  },\n  tab: {\n    color: \"#000\",\n    \"& .icon\": {},\n  },\n  fullHeightTab: {\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: 20,\n    },\n  },\n  tabWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    textTransform: \"none\",\n    color: \"#000\",\n    \"&&& svg\": {\n      marginBottom: 0,\n      marginRight: 8,\n      width: 18,\n      height: 18,\n    },\n  },\n}))\n\nconst getIcon = (t) => {\n  switch (t) {\n    case \"Setup\":\n      return <SettingsIcon className=\"icon\" />\n    case \"Label\":\n      return <BorderColorIcon className=\"icon\" />\n    case \"Samples\":\n      return <StorageIcon className=\"icon\" />\n    default:\n      return <div></div>\n  }\n}\n\nconst HeaderToolbar = ({\n  tabs,\n  currentTab,\n  onChangeTab,\n  additionalButtons,\n  onOpenDrawer,\n  title = \"Universal Data Tool\",\n  interfaceType,\n  isDesktop,\n  fileOpen,\n  sessionBoxOpen,\n  changeSessionBoxOpen,\n  inSession,\n  onCreateSession,\n  onLeaveSession,\n  onJoinSession,\n  onDownload,\n  selectedBrush,\n  onChangeSelectedBrush,\n  isSmall,\n  authConfig,\n  changeLoginDrawerOpen,\n  collaborateError,\n  isWelcomePage,\n}) => {\n  const c = useStyles()\n  const { authProvider, isLoggedIn, logout } = useAuth()\n\n  return (\n    <AppBar color=\"default\" position=\"static\">\n      <Toolbar variant=\"dense\">\n        {!isDesktop && (\n          <IconButton onClick={onOpenDrawer} className={c.headerButton}>\n            <MenuIcon />\n          </IconButton>\n        )}\n        {fileOpen ? title : \"Universal Data Tool v\" + packageJSON.version}\n        <CollaborateButton\n          sessionBoxOpen={sessionBoxOpen}\n          changeSessionBoxOpen={changeSessionBoxOpen}\n          fileOpen={fileOpen}\n          inSession={inSession}\n          onCreateSession={onCreateSession}\n          onLeaveSession={onLeaveSession}\n          onJoinSession={onJoinSession}\n          error={collaborateError}\n        />\n        {fileOpen && (\n          <BrushButton\n            selectedBrush={selectedBrush}\n            onChangeSelectedBrush={onChangeSelectedBrush}\n          />\n        )}\n        {!isDesktop && fileOpen && (\n          <DownloadButton\n            interfaceType={interfaceType}\n            onDownload={onDownload}\n          />\n        )}\n        <div className={c.grow} />\n        {additionalButtons}\n        {tabs.length > 0 && (\n          <Tabs\n            onChange={(e, newTab) => onChangeTab(newTab.toLowerCase())}\n            value={currentTab}\n          >\n            {tabs.map((t) => (\n              <Tab\n                key={t}\n                classes={{ root: c.fullHeightTab, wrapper: c.tabWrapper }}\n                className={c.tab}\n                icon={getIcon(t)}\n                label={isSmall ? \"\" : t}\n                value={t.toLowerCase()}\n              />\n            ))}\n          </Tabs>\n        )}\n        {authProvider !== \"none\" && isWelcomePage && !isLoggedIn && (\n          <Button\n            onClick={() => {\n              changeLoginDrawerOpen(true)\n            }}\n            className={c.headerButton}\n          >\n            Login with {capitalize(authProvider)}\n          </Button>\n        )}\n        {isLoggedIn && (\n          <Button onClick={logout} className={c.headerButton}>\n            Logout\n          </Button>\n        )}\n        {!isSmall && !isWelcomePage && (\n          <IconButton\n            href=\"https://github.com/UniversalDataTool/universal-data-tool\"\n            className={c.headerButton}\n          >\n            <GithubIcon />\n          </IconButton>\n        )}\n        {!isSmall && isWelcomePage && (\n          <Box paddingTop=\"4px\" paddingLeft=\"8px\">\n            <GitHubButton\n              href=\"https://github.com/UniversalDataTool/universal-data-tool\"\n              data-icon=\"octicon-star\"\n              data-size=\"large\"\n              data-show-count=\"true\"\n              aria-label=\"Star UniversalDataTool/universal-data-tool on GitHub\"\n            >\n              Star\n            </GitHubButton>\n          </Box>\n        )}\n        {!isSmall && isWelcomePage && (\n          <IconButton\n            href=\"https://join.slack.com/t/universaldatatool/shared_invite/zt-d8teykwi-iOSOUfxugKR~M4AJN6VL3g\"\n            className={c.headerButton}\n          >\n            <SlackIcon />\n          </IconButton>\n        )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default memo(HeaderToolbar)\n","// @flow\nimport React from \"react\"\nimport ImageSearch from \"@material-ui/icons/ImageSearch\"\nimport Image from \"@material-ui/icons/Image\"\nimport CropFree from \"@material-ui/icons/CropFree\"\nimport TextFormat from \"@material-ui/icons/TextFormat\"\nimport Edit from \"@material-ui/icons/Edit\"\nimport Audiotrack from \"@material-ui/icons/Audiotrack\"\nimport Category from \"@material-ui/icons/Category\"\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\"\nimport OndemandVideoIcon from \"@material-ui/icons/OndemandVideo\"\nimport ContactSupport from \"@material-ui/icons/ContactSupport\"\nimport LowPriority from \"@material-ui/icons/LowPriority\"\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\"\n\nexport const templates = [\n  {\n    name: \"Empty\",\n    Icon: CropFree,\n    dataset: {\n      interface: {},\n      samples: [],\n    },\n  },\n  {\n    name: \"Image Segmentation\",\n    Icon: ImageSearch,\n    dataset: {\n      interface: {\n        type: \"image_segmentation\",\n        labels: [\"valid\", \"invalid\"],\n        regionTypesAllowed: [\n          \"bounding-box\",\n          \"polygon\",\n          // \"full-segmentation\",\n          \"point\",\n          // \"pixel-mask\"\n        ],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Image Classification\",\n    Icon: Image,\n    dataset: {\n      interface: {\n        type: \"image_classification\",\n        labels: [\"valid\", \"invalid\"],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Video Segmentation\",\n    Icon: OndemandVideoIcon,\n    dataset: {\n      interface: {\n        type: \"video_segmentation\",\n        labels: [\"valid\", \"invalid\"],\n        regionTypesAllowed: [\"bounding-box\", \"polygon\", \"point\"],\n      },\n      samples: [\n        {\n          videoUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/SampleVideo_1280x720_1mb.mp4\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Data Entry\",\n    Icon: Edit,\n    dataset: {\n      interface: {\n        type: \"data_entry\",\n        description: \"# Markdown description here\",\n        surveyjs: {\n          questions: [\n            {\n              type: \"text\",\n              name: \"document_title\",\n              title: \"Title of Document\",\n            },\n          ],\n        },\n      },\n      samples: [\n        {\n          pdfUrl: \"https://arxiv.org/pdf/1906.01969.pdf\",\n        },\n        {\n          pdfUrl: \"https://arxiv.org/pdf/1908.07069.pdf\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Named Entity Recognition\",\n    Icon: TextFormat,\n    dataset: {\n      interface: {\n        type: \"text_entity_recognition\",\n        overlapAllowed: false,\n        labels: [\n          {\n            id: \"food\",\n            displayName: \"Food\",\n            description: \"Edible item.\",\n          },\n          {\n            id: \"hat\",\n            displayName: \"Hat\",\n            description: \"Something worn on the head.\",\n          },\n        ],\n      },\n      samples: [\n        {\n          document:\n            \"This strainer makes a great hat, I'll wear it while I serve spaghetti!\",\n        },\n        {\n          document: \"Why are all these dumpings covered in butter?!\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Text Entity Relations\",\n    Icon: ({ ...props }) => (\n      <LowPriority\n        {...props}\n        style={{ ...props.style, transform: \"rotate(90deg)\" }}\n      />\n    ),\n    dataset: {\n      interface: {\n        type: \"text_entity_relations\",\n        entityLabels: [\n          {\n            id: \"food\",\n            displayName: \"Food\",\n            description: \"Edible item.\",\n          },\n          {\n            id: \"hat\",\n            displayName: \"Hat\",\n            description: \"Something worn on the head.\",\n          },\n        ],\n        relationLabels: [\n          {\n            id: \"subject\",\n            displayName: \"Subject\",\n          },\n        ],\n      },\n      samples: [\n        {\n          document:\n            \"This strainer makes a great hat, I'll wear it while I serve spaghetti!\",\n        },\n        {\n          document: \"Why are all these dumpings covered in butter?!\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Text Classification\",\n    Icon: ContactSupport,\n    dataset: {\n      interface: {\n        type: \"text_classification\",\n        labels: [\"positive_sentiment\", \"negative_sentiment\"],\n      },\n      samples: [\n        {\n          document: \"Wow this is terrible. I hated it.\",\n        },\n        {\n          document: \"This has made me so happy. I love this.\",\n        },\n        {\n          document:\n            \"At first I wasn't sure. Then I thought, oh it's not very good.\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Audio Transcription\",\n    Icon: Audiotrack,\n    dataset: {\n      interface: {\n        type: \"audio_transcription\",\n        description: \"# Markdown description here\",\n      },\n      samples: [\n        {\n          audioUrl: \"https://html5tutorial.info/media/vincent.mp3\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Composite\",\n    Icon: Category,\n    dataset: {\n      description: \"# Markdown description here\",\n      interface: {\n        type: \"composite\",\n        fields: [\n          {\n            fieldName: \"textInfo\",\n            interface: {\n              type: \"data_entry\",\n              surveyjs: {\n                questions: [\n                  {\n                    type: \"text\",\n                    name: \"group_letter\",\n                    title: \"Letter of Group\",\n                  },\n                ],\n              },\n            },\n          },\n          {\n            fieldName: \"segmentation\",\n            interface: {\n              type: \"image_segmentation\",\n              labels: [\"group text\"],\n              regionTypesAllowed: [\"bounding-box\"],\n            },\n          },\n        ],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Pixel Segmentation\",\n    Icon: ImageSearch,\n    dataset: {\n      interface: {\n        type: \"image_pixel_segmentation\",\n        labels: [\"hair\", \"mouth\", \"nose\", \"eyes\"],\n        description: \"These are AI-generated faces, not real people.\",\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010041.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010026.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010025.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Image Landmark Annotation\",\n    Icon: AccessibilityNewIcon,\n    dataset: {\n      interface: {\n        type: \"image_landmark_annotation\",\n        keypointDefinitions: {\n          human: {\n            landmarks: {\n              nose: {\n                label: \"Nose\",\n                color: \"#f00\",\n                defaultPosition: [0, 0],\n              },\n              leftEye: {\n                label: \"Left Eye\",\n                color: \"#00f\",\n                defaultPosition: [-0.05, -0.05],\n              },\n              leftEar: {\n                label: \"Left Ear\",\n                color: \"#0ff\",\n                defaultPosition: [-0.1, -0.05],\n              },\n              rightEye: {\n                label: \"Left Eye\",\n                color: \"#f0f\",\n                defaultPosition: [0.05, -0.05],\n              },\n              rightEar: {\n                label: \"Left Ear\",\n                color: \"#00f\",\n                defaultPosition: [0.1, -0.05],\n              },\n              sternum: {\n                label: \"Sternum\",\n                color: \"#0f0\",\n                defaultPosition: [0, 0.1],\n              },\n              leftShoulder: {\n                label: \"Left Shoulder\",\n                color: \"#0ff\",\n                defaultPosition: [-0.2, 0.1],\n              },\n              rightShoulder: {\n                label: \"Right Shoulder\",\n                color: \"#00f\",\n                defaultPosition: [0.2, 0.1],\n              },\n              leftElbow: {\n                label: \"Left Elbow\",\n                color: \"#0f0\",\n                defaultPosition: [-0.2, 0.2],\n              },\n              rightElbow: {\n                label: \"Right Elbow\",\n                color: \"#f00\",\n                defaultPosition: [0.2, 0.2],\n              },\n              leftHand: {\n                label: \"Left Hand\",\n                color: \"#00f\",\n                defaultPosition: [-0.2, 0.3],\n              },\n              rightHand: {\n                label: \"Right Hand\",\n                color: \"#f0f\",\n                defaultPosition: [0.2, 0.3],\n              },\n              leftThigh: {\n                label: \"Left Thigh\",\n                color: \"#f00\",\n                defaultPosition: [-0.1, 0.35],\n              },\n              rightThigh: {\n                label: \"Right Thigh\",\n                color: \"#0ff\",\n                defaultPosition: [0.1, 0.35],\n              },\n              leftKnee: {\n                label: \"Left Thigh\",\n                color: \"#ff0\",\n                defaultPosition: [-0.15, 0.45],\n              },\n              rightKnee: {\n                label: \"Right Thigh\",\n                color: \"#0f0\",\n                defaultPosition: [0.15, 0.45],\n              },\n              leftFoot: {\n                label: \"Left Foot\",\n                color: \"#00f\",\n                defaultPosition: [-0.15, 0.55],\n              },\n              rightFoot: {\n                label: \"Right Foot\",\n                color: \"#f00\",\n                defaultPosition: [0.15, 0.55],\n              },\n            },\n            connections: [\n              [\"sternum\", \"nose\"],\n              [\"nose\", \"leftEye\"],\n              [\"leftEye\", \"leftEar\"],\n              [\"nose\", \"rightEye\"],\n              [\"rightEye\", \"rightEar\"],\n              [\"sternum\", \"leftShoulder\"],\n              [\"leftShoulder\", \"leftElbow\"],\n              [\"leftElbow\", \"leftHand\"],\n              [\"sternum\", \"leftThigh\"],\n              [\"leftThigh\", \"leftKnee\"],\n              [\"leftKnee\", \"leftFoot\"],\n              [\"sternum\", \"rightShoulder\"],\n              [\"rightShoulder\", \"rightElbow\"],\n              [\"rightElbow\", \"rightHand\"],\n              [\"sternum\", \"rightThigh\"],\n              [\"rightThigh\", \"rightKnee\"],\n              [\"rightKnee\", \"rightFoot\"],\n            ],\n          },\n        },\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://media.istockphoto.com/photos/businesswoman-picture-id918002786\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"3D Bounding Box\",\n    Icon: ThreeDRotation,\n    dataset: {\n      interface: {\n        type: \"3d_bounding_box\",\n        description: \"3D Bounding Box\",\n      },\n      samples: [{}],\n    },\n  },\n]\n\nexport const templateMap = templates.reduce((acc, t) => {\n  acc[t.name] = t\n  acc[t.dataset.interface.type] = t\n  return acc\n}, {})\n\nexport default templates\n","//@flow weak\n\nimport React, { useCallback } from \"react\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport { useDropzone } from \"react-dropzone\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport { GoMarkGithub } from \"react-icons/go\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport HomeIcon from \"@material-ui/icons/Home\"\nimport { FaTrashAlt } from \"react-icons/fa\"\nimport templates from \"../StartingPage/templates\"\nimport * as colors from \"@material-ui/core/colors\"\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\"\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\"\nimport { useTranslation } from \"react-i18next\"\n\nconst useStyles = makeStyles({})\n\nexport default ({\n  recentItems,\n  changeRecentItems,\n  onClickHome,\n  onCloseDrawer,\n  drawerOpen,\n  onOpenFile,\n  onOpenRecentItem,\n  onClickTemplate,\n}) => {\n  const c = useStyles()\n  const { t } = useTranslation()\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      onOpenFile(acceptedFiles[0])\n    },\n    [onOpenFile]\n  )\n\n  function onDeleteFile(i) {\n    changeRecentItems(\n      recentItems.filter((oneRecentFile) => oneRecentFile.id !== i)\n    )\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n  return (\n    <Drawer open={drawerOpen} onClose={onCloseDrawer}>\n      <List className={c.list}>\n        <ListItem onClick={onClickHome} button>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>Home</ListItemText>\n        </ListItem>\n        <ListItem {...getRootProps()} button>\n          <ListItemIcon>\n            <NoteAddIcon />\n          </ListItemIcon>\n          <ListItemText>Open File</ListItemText>\n          <input {...getInputProps()} />\n        </ListItem>\n        <ListSubheader>Recent Files</ListSubheader>\n        {recentItems.length === 0 ? (\n          <ListItem>\n            <ListItemText\n              style={{ textAlign: \"center\", color: colors.grey[500] }}\n            >\n              {t(\"no-recent-items\")}\n            </ListItemText>\n          </ListItem>\n        ) : (\n          recentItems.map((ri, index) => (\n            <ListItem key={ri.fileName} button>\n              <ListItemIcon\n                onClick={() => {\n                  onOpenRecentItem(ri)\n                }}\n              >\n                <FileIcon />\n              </ListItemIcon>\n              <ListItemText\n                onClick={() => {\n                  onOpenRecentItem(ri)\n                }}\n              >\n                {ri.fileName}\n              </ListItemText>\n              <ListItemIcon\n                onClick={() => {\n                  onDeleteFile(ri.id)\n                }}\n              >\n                <FaTrashAlt />\n              </ListItemIcon>\n            </ListItem>\n          ))\n        )}\n        <ListSubheader>Create From Template</ListSubheader>\n        {templates.map((template) => (\n          <ListItem\n            button\n            key={template.name}\n            onClick={() => onClickTemplate(template)}\n          >\n            <ListItemIcon>\n              <template.Icon />\n            </ListItemIcon>\n            <ListItemText>{template.name}</ListItemText>\n          </ListItem>\n        ))}\n        <ListSubheader>{t(\"explore-more\")}</ListSubheader>\n        {/* <ListItem button>\n      <ListItemIcon>\n        <CodeIcon />\n      </ListItemIcon>\n      <ListItemText>Integrate</ListItemText>\n    </ListItem> */}\n        <ListItem\n          button\n          onClick={() => {\n            window.location.href =\n              \"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n          }}\n        >\n          <ListItemIcon>\n            <GoMarkGithub />\n          </ListItemIcon>\n          <ListItemText>Github</ListItemText>\n        </ListItem>\n      </List>\n    </Drawer>\n  )\n}\n","// @flow weak\n\nimport React, { useState, createContext, useContext, useCallback } from \"react\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\nimport LoginDrawer from \"../LoginDrawer\"\n\nimport HeaderToolbar from \"../HeaderToolbar\"\nimport HeaderDrawer from \"../HeaderDrawer\"\n\nexport const HeaderContext = createContext({\n  recentItems: [],\n  changeRecentItems: () => null,\n  onClickTemplate: () => null,\n  onClickHome: () => null,\n  onOpenFile: () => null,\n  onOpenRecentItem: () => null,\n  isDesktop: false,\n  inSession: false,\n  onJoinSession: () => null,\n  onCreateSession: () => null,\n  onLeaveSession: () => null,\n  sessionBoxOpen: false,\n  changeSessionBoxOpen: () => null,\n  fileOpen: false,\n  onDownload: () => null,\n  authConfig: null,\n  onUserChange: () => null,\n  user: null,\n  logoutUser: () => null,\n})\n\nconst emptyArray = []\n\nexport default ({\n  additionalButtons = emptyArray,\n  title,\n  currentTab,\n  onChangeTab,\n  tabs = emptyArray,\n}) => {\n  const [drawerOpen, changeDrawerOpen] = useState(false)\n  const [loginDrawerOpen, changeLoginDrawerOpen] = useState(false)\n  let headerContext = useContext(HeaderContext)\n  if (!headerContext.recentItems) headerContext.recentItems = []\n\n  const isSmall = useMediaQuery(\"(max-width: 800px)\")\n\n  const onOpenDrawer = useCallback(() => changeDrawerOpen(true), [])\n  const onCloseDrawer = useCallback(() => changeDrawerOpen(false), [])\n\n  return (\n    <>\n      <HeaderToolbar\n        tabs={tabs}\n        currentTab={currentTab}\n        onChangeTab={onChangeTab}\n        additionalButtons={additionalButtons}\n        onOpenDrawer={onOpenDrawer}\n        isSmall={isSmall}\n        {...headerContext}\n        changeLoginDrawerOpen={changeLoginDrawerOpen}\n        title={title}\n      />\n      <HeaderDrawer\n        drawerOpen={drawerOpen}\n        onCloseDrawer={onCloseDrawer}\n        onClickHome={headerContext.onClickHome}\n        recentItems={headerContext.recentItems}\n        changeRecentItems={headerContext.changeRecentItems}\n        onOpenFile={headerContext.onOpenFile}\n        onClickTemplate={headerContext.onClickTemplate}\n        onOpenRecentItem={headerContext.onOpenRecentItem}\n      />\n      <LoginDrawer\n        authConfig={headerContext.authConfig}\n        loginDrawerOpen={loginDrawerOpen}\n        onClose={() => changeLoginDrawerOpen(false)}\n        onUserChange={headerContext.onUserChange}\n        logoutUser={headerContext.logoutUser}\n      />\n    </>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport FullScreenIcon from \"@material-ui/icons/Fullscreen\"\nimport FullScreenExitIcon from \"@material-ui/icons/FullscreenExit\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Button from \"@material-ui/core/Button\"\nimport { grey, blue, red } from \"@material-ui/core/colors\"\nimport ReactMarkdown from \"react-markdown\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst StyledDialogTitle = styled(DialogTitle)({\n  backgroundColor: grey[100],\n  borderBottom: `1px solid ${grey[300]}`,\n  paddingBottom: 12,\n  boxShadow: \"0px 2px 3px rgba(0,0,0,0.05)\",\n})\nconst StyledDialogContent = styled(DialogContent)({\n  paddingTop: 16,\n})\nconst StyledDialogActions = styled(DialogActions)({\n  backgroundColor: grey[100],\n  borderTop: `1px solid ${grey[300]}`,\n})\n\nexport default ({\n  open = false,\n  title,\n  children,\n  markdownContent,\n  onClose,\n  red: redOn,\n  noActionBar = false,\n  actions = [],\n}) => {\n  const [fullScreen, changeFullScreen] = useState(false)\n  return (\n    <Dialog open={open} onClose={onClose} fullScreen={fullScreen}>\n      <StyledDialogTitle>\n        <Box display=\"flex\" alignItems=\"center\">\n          <span style={{ color: redOn ? red[700] : undefined }}>{title}</span>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton onClick={() => changeFullScreen(!fullScreen)}>\n            {fullScreen ? <FullScreenExitIcon /> : <FullScreenIcon />}\n          </IconButton>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </StyledDialogTitle>\n      <StyledDialogContent>\n        <Box maxWidth=\"90vw\" minWidth={400} lineHeight={1.5}>\n          {markdownContent ? (\n            <ReactMarkdown source={markdownContent} />\n          ) : (\n            children\n          )}\n        </Box>\n      </StyledDialogContent>\n      {!noActionBar && (\n        <StyledDialogActions>\n          <Button onClick={() => onClose()}>\n            <span style={{ color: grey[700], fontWeight: 500 }}>Close</span>\n          </Button>\n          {actions.map((action, i) => (\n            <Button disabled={action.disabled} key={i} onClick={action.onClick}>\n              <span\n                style={{\n                  color: redOn\n                    ? red[700]\n                    : action.disabled\n                    ? grey[400]\n                    : blue[700],\n                  fontWeight: 500,\n                }}\n              >\n                {action.text}\n              </span>\n            </Button>\n          ))}\n        </StyledDialogActions>\n      )}\n    </Dialog>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport templates from \"../StartingPage/templates\"\nimport SimpleDialog from \"../SimpleDialog\"\n\nconst useStyles = makeStyles({\n  bigButton: {\n    padding: 10,\n    width: 150,\n    height: 120,\n    border: \"1px solid #ccc\",\n    margin: 10,\n  },\n  bigIcon: {\n    width: 48,\n    height: 48,\n  },\n})\n\nexport default ({ open, onClose, onSelect }) => {\n  const c = useStyles()\n  return (\n    <SimpleDialog title=\"Create from Template\" open={open} onClose={onClose}>\n      {templates.map((template) => (\n        <Button\n          key={template.name}\n          onClick={() => onSelect(template)}\n          className={c.bigButton}\n        >\n          <div>\n            <div>{template.name}</div>\n            <div>\n              <template.Icon className={c.bigIcon} />\n            </div>\n          </div>\n        </Button>\n      ))}\n    </SimpleDialog>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst CognitoIcon = (props) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 75 75\">\n      <g id=\"Reference\">\n        <rect\n          id=\"Red_Light_BG\"\n          data-name=\"Red Light BG\"\n          style={{ fill: \"#d6242d\" }}\n          width=\"75\"\n          height=\"75\"\n        />\n        <g id=\"Product_Icon\" data-name=\"Product Icon\">\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M55,15H16.46a3.92,3.92,0,0,0-3.71,4.1v24.8A3.92,3.92,0,0,0,16.46,48H37.75V46H16.46a2,2,0,0,1-1.71-2.1V27h18V42a1,1,0,0,0,1,1h8V41H35.2V40.7a7.74,7.74,0,0,1,5.53-7.43,5.91,5.91,0,0,0,4.92,0,7.82,7.82,0,0,1,4.42,3.42l1.7-1v0a9.8,9.8,0,0,0-4.34-3.82,5.4,5.4,0,0,0,1.27-3.48,5.5,5.5,0,0,0-11,0A5.42,5.42,0,0,0,39,31.8a9.67,9.67,0,0,0-4.22,3.62V22h17v13.7h0V36h2V27h3V37h2l0-17.9A3.92,3.92,0,0,0,55,15ZM43.2,24.87a3.48,3.48,0,0,1,3.5,3.46,3.43,3.43,0,0,1-1.81,3,3.57,3.57,0,0,1-3.39,0,3.44,3.44,0,0,1-1.8-3A3.48,3.48,0,0,1,43.2,24.87ZM53.75,25V21a1,1,0,0,0-1-1h-19a1,1,0,0,0-1,1v4h-18v-5.9A2,2,0,0,1,16.46,17H55a2,2,0,0,1,1.73,2.1V25Z\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"16.77\"\n            y=\"31.95\"\n            width=\"10.98\"\n            height=\"2\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"16.77\"\n            y=\"36.95\"\n            width=\"6.98\"\n            height=\"2\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"25.77\"\n            y=\"36.95\"\n            width=\"2.98\"\n            height=\"2\"\n          />\n          <path style={{ fill: \"#fff\" }} d=\"M51.78,35.65h0v0Z\" />\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M52.14,60.05a10.11,10.11,0,1,1,1.22-20.14h0a10.12,10.12,0,0,1,6.46,16.61,10.47,10.47,0,0,1-3.37,2.57A10.19,10.19,0,0,1,52.14,60.05Zm0-18.22a8,8,0,0,0-3.69.9,8.11,8.11,0,0,0,7.16,14.55,8.2,8.2,0,0,0,2.71-2.07,8.11,8.11,0,0,0-5.19-13.32h0A8.22,8.22,0,0,0,52.12,41.83Z\"\n          />\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M50.55,54.2h0a1,1,0,0,1-.71-.29l-3.23-3.23L48,49.27l2.52,2.52,5.7-5.71,1.42,1.42-6.42,6.41A1,1,0,0,1,50.55,54.2Z\"\n          />\n          <path style={{ fill: \"#fff\" }} d=\"M51.78,35.65h0v0Z\" />\n        </g>\n      </g>\n    </SvgIcon>\n  )\n}\n\nexport default CognitoIcon\n","// @flow\nimport CognitoIcon from \"./cognito-icon.js\"\nimport SdStorageOutlinedIcon from \"@material-ui/icons/SdStorageOutlined\"\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\"\n\nexport default [\n  {\n    name: \"AWS - Cognito\",\n    provider: \"cognito\",\n    Icon: CognitoIcon,\n  },\n  {\n    name: \"AWS - S3 (IAM)\",\n    provider: \"s3iam\",\n    Icon: SdStorageOutlinedIcon,\n  },\n  {\n    name: \"Proxy\",\n    provider: \"proxy\",\n    Icon: AccountTreeIcon,\n  },\n]\n","// @flow\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { red } from \"@material-ui/core/colors\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Fade from \"@material-ui/core/Fade\"\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"center\",\n    pointerEvents: \"none\",\n  },\n  errorBox: {\n    display: \"flex\",\n    backgroundColor: red[700],\n    color: \"#fff\",\n    padding: 4,\n    marginBottom: 4,\n  },\n})\n\nexport default ({ errors }) => {\n  const c = useStyles()\n  return (\n    <div className={c.root}>\n      {errors.map((err) => (\n        <Collapse key={err.id} in={err.life < 5000}>\n          <Fade in={err.life > 500}>\n            <div className={c.errorBox}>{err.message}</div>\n          </Fade>\n        </Collapse>\n      ))}\n    </div>\n  )\n}\n","// @flow\n\nimport { useState, useEffect } from \"react\"\n\nconst REFRESH_INTERVAL = 100\n\nexport default () => {\n  const [errors, changeErrors] = useState([])\n  useEffect(() => {\n    if (errors.length === 0) return () => {}\n    let interval = setInterval(() => {\n      changeErrors(\n        errors\n          .map((err) => ({\n            ...err,\n            life: err.life - REFRESH_INTERVAL,\n          }))\n          .filter((err) => err.life > 0)\n      )\n    }, REFRESH_INTERVAL)\n    return () => clearInterval(interval)\n  }, [errors])\n\n  function addError(message: string) {\n    changeErrors(\n      errors.concat([\n        {\n          id: Math.random().toString().split(\".\")[1],\n          message,\n          life: 5000,\n        },\n      ])\n    )\n  }\n\n  return [errors, addError]\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport authTemplates from \"./authTemplates\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport isEmpty from \"lodash/isEmpty\"\nimport Survey from \"material-survey/components/Survey\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport Amplify from \"aws-amplify\"\nimport { useAppConfig } from \"../AppConfig\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst useStyles = makeStyles({\n  bigButton: {\n    padding: 10,\n    width: 150,\n    height: 120,\n    border: \"1px solid #ccc\",\n    margin: 10,\n  },\n  bigIcon: {\n    width: 48,\n    height: 48,\n  },\n  cognitoIcon: {\n    width: 48,\n    height: 48,\n  },\n  howToSetupText: {\n    padding: 16,\n    color: colors.grey[600],\n    \"& a\": {\n      color: colors.blue[500],\n      textDecoration: \"none\",\n    },\n  },\n})\n\nconst forms = {\n  cognito: {\n    questions: [\n      {\n        name: \"auth.cognito.identity_pool_id\",\n        title: \"Amazon Cognito Identity Pool ID\",\n        placeholder: \"XX-XXXX-X:XXXXXXXX-XXXX-1234-abcd-1234567890ab\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.region\",\n        title: \"AWS Region\",\n        placeholder: \"XX-XXXX-X\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.user_pool_id\",\n        title: \"Amazon Cognito User Pool ID\",\n        placeholder: \"XX-XXXX-X_12ab34cd9\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.user_pool_web_client_id\",\n        title: \"Amazon Cognito Web Client ID\",\n        placeholder: \"26-char alphanumeric string\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.storage.aws_s3.bucket\",\n        title: \"Bucket AWS\",\n        placeholder: \"Name of the bucket\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.storage.aws_s3.region\",\n        title: \"Region of the bucket\",\n        placeholder: \"XX-XXXX-X\",\n        type: \"text\",\n        isRequired: true,\n      },\n    ],\n  },\n  s3iam: {\n    questions: [\n      {\n        name: \"auth.s3iam.access_key_id\",\n        title: \"Access Key ID\",\n        placeholder: \"\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.s3iam.secret_access_key\",\n        title: \"Secret Access Key\",\n        placeholder: \"\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.s3iam.region\",\n        title: \"Region\",\n        placeholder: \"us-east-1\",\n        type: \"text\",\n        isRequired: true,\n      },\n    ],\n  },\n  proxy: {\n    questions: [\n      {\n        name: \"auth.proxy.corsproxy\",\n        type: \"text\",\n        title: \"CORS Proxy\",\n        description:\n          \"Some requests for images or APIs (like AWS S3) are blocked by browsers for security reasons, this CORs proxy will be used to enable blocked functionality when not using the desktop application.\",\n      },\n    ],\n  },\n}\n\nexport default ({ open, onClose, onSelect, onFinish, onAuthConfigured }) => {\n  const c = useStyles()\n  const [authProvider, setAuthProvider] = useState(null)\n  const [dialogTitle, setDialogTitle] = useState(\"Add Authentication\")\n  const [errors, addError] = useErrors()\n  const { appConfig, setAppConfig, fromConfig, setInConfig } = useAppConfig()\n\n  const getDefaultsFromConfig = (form) => {\n    const questionIds = form.questions.map((q) => q.name)\n    const defaults = {}\n    for (const questionId of questionIds) {\n      const configValue = fromConfig(questionId)\n      if (configValue !== undefined) {\n        defaults[questionId] = configValue\n      }\n    }\n    return defaults\n  }\n\n  // TODO useAppConfig to load in existing configuration\n\n  const validateAuthProvider = async (answers) => {\n    if (answers.provider === \"cognito\") {\n      const config = {\n        Auth: {\n          identityPoolId: answers[\"auth.cognito.identity_pool_id\"],\n          region: answers[\"auth.cognito.region\"],\n          userPoolId: answers[\"auth.cognito.user_pool_id\"],\n          userPoolWebClientId: answers[\"auth.cognito.user_pool_web_client_id\"],\n          mandatorySignIn: true,\n          authenticationFlowType: \"USER_PASSWORD_AUTH\",\n        },\n        Storage: {\n          AWSS3: {\n            bucket: answers[\"auth.cognito.storage.aws_s3.bucket\"],\n            region: answers[\"auth.cognito.storage.aws_s3.region\"],\n          },\n        },\n      }\n\n      try {\n        Amplify.configure(config)\n      } catch (err) {\n        addError(\"Invalid Cognito config: \" + err.toString())\n      }\n    }\n    setAppConfig({\n      ...appConfig,\n      ...answers,\n      \"auth.provider\": answers.provider,\n    })\n    // TODO some kind of success message\n    onClose()\n    setAuthProvider(null)\n  }\n\n  return (\n    <>\n      <SimpleDialog\n        title={dialogTitle}\n        open={open}\n        onClose={() => {\n          onClose()\n        }}\n        onFinish={onFinish}\n      >\n        {isEmpty(authProvider) &&\n          authTemplates.map((template, i) => (\n            <Button\n              key={template.name}\n              onClick={() => {\n                setAuthProvider(template.provider)\n                setDialogTitle(`Add Authentication for ${template.name}`)\n              }}\n              className={c.bigButton}\n            >\n              <div>\n                <div>{template.name}</div>\n                <div>\n                  <template.Icon className={c.cognitoIcon} />\n                </div>\n              </div>\n            </Button>\n          ))}\n        {authProvider === \"cognito\" && (\n          <div className={c.howToSetupText}>\n            Check this wiki{\" \"}\n            <a href=\"https://github.com/UniversalDataTool/universal-data-tool/wiki/Cognito---Amplify-Authentication-Setup-Instructions\">\n              guide for setting up AWS Cognito with the Universal Data Tool\n            </a>\n            .\n          </div>\n        )}\n        {!isEmpty(authProvider) && forms[authProvider] && (\n          <Survey\n            variant=\"flat\"\n            form={forms[authProvider]}\n            onQuestionChange={(questionId, newValue) => {\n              setInConfig(questionId, newValue)\n            }}\n            onFinish={(answers) => {\n              answers[\"provider\"] = authProvider\n              validateAuthProvider(answers)\n            }}\n            defaultAnswers={{\n              ...getDefaultsFromConfig(forms[authProvider]),\n              \"auth.provider\": fromConfig(\"auth.provider\"),\n            }}\n          />\n        )}\n        <ErrorToasts errors={errors} />\n      </SimpleDialog>\n    </>\n  )\n}\n","export default (url) => {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/\n  const match = url.match(regExp)\n\n  const id = match && match[2].length === 11 ? match[2] : null\n\n  if (!id) return null\n\n  return `https://youtube.com/embed/${id}`\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Header from \"../Header\"\nimport Button from \"@material-ui/core/Button\"\nimport templates from \"./templates\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useDropzone } from \"react-dropzone\"\nimport CreateFromTemplateDialog from \"../CreateFromTemplateDialog\"\nimport AddAuthFromTemplateDialog from \"../AddAuthFromTemplateDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport packageInfo from \"../../../package.json\"\nimport useEventCallback from \"use-event-callback\"\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\nimport Box from \"@material-ui/core/Box\"\nimport Select from \"react-select\"\nimport { useTranslation } from \"react-i18next\"\nimport getEmbedYoutubeUrl from \"./get-embed-youtube-url.js\"\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: colors.grey[900],\n    height: \"100vh\",\n  },\n  headerButton: {\n    fontSize: 12,\n    backgroundColor: \"#fff\",\n  },\n  downloadIcon: {\n    marginTop: 2,\n    width: 18,\n    height: 18,\n    marginRight: 4,\n    marginLeft: -6,\n    color: colors.grey[700],\n  },\n  languageSelectionWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n  },\n  languageSelectionBox: {\n    display: \"flex\",\n    paddingTop: 24,\n    [theme.breakpoints.up(\"sm\")]: {\n      justifyContent: \"flex-end\",\n    },\n  },\n}))\n\nconst ContentContainer = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexGrow: 1,\n  color: \"#fff\",\n  overflowY: \"scroll\",\n  padding: 100,\n  [theme.breakpoints.down(\"sm\")]: {\n    padding: 50,\n  },\n}))\nconst Content = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"calc(100% - 32px)\",\n  marginLeft: 16,\n  maxWidth: 1000,\n}))\n\nconst Title = styled(\"div\")({\n  marginTop: 20,\n  fontSize: 36,\n  fontWeight: 600,\n  color: colors.grey[300],\n})\n\nconst languageSelectionFormStyle = {\n  control: (base, state) => ({\n    ...base,\n    border: \"1px solid #9e9e9e\",\n    background: \"transparent\",\n    color: \"#e0e0e0\",\n  }),\n  menuList: (base) => ({\n    ...base,\n    padding: 0,\n    margin: 0,\n    color: \"black\",\n  }),\n  singleValue: (base) => ({\n    ...base,\n    color: \"white\",\n  }),\n}\n\nconst Subtitle = styled(\"div\")({\n  fontSize: 18,\n  // fontWeight: \"bold\",\n  marginTop: 8,\n  color: colors.grey[500],\n})\nconst ActionList = styled(\"div\")({ marginTop: 48 })\nconst Action = styled(\"a\")({\n  display: \"block\",\n  color: colors.blue[500],\n  marginTop: 4,\n  cursor: \"pointer\",\n  textDecoration: \"none\",\n})\nconst ActionTitle = styled(\"div\")({\n  // fontWeight: \"bold\",\n  fontSize: 24,\n  marginBottom: 8,\n  color: colors.grey[500],\n})\nconst ActionText = styled(\"div\")({\n  color: colors.grey[300],\n  \"& a\": {\n    cursor: \"pointer\",\n    color: colors.blue[500],\n    textDecoration: \"none\",\n  },\n})\nconst Actionless = styled(\"div\")({\n  color: colors.grey[600],\n  paddingTop: 16,\n})\n\nconst BottomSpacer = styled(\"div\")({ height: 100 })\n\nconst languageOptions = [\n  { label: \"English\", value: \"en\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Chinese\", value: \"cn\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"Dutch\", value: \"nl\" },\n]\n\nexport default ({\n  onFileDrop,\n  onOpenTemplate,\n  showDownloadLink = true,\n  recentItems = [],\n  onOpenRecentItem,\n  onClickOpenSession,\n}) => {\n  const c = useStyles()\n  const posthog = usePosthog()\n\n  // internalization hook\n  const { t, i18n } = useTranslation()\n\n  //const isDesktop = useIsDesktop()\n  const [newVersionAvailable, changeNewVersionAvailable] = useState(false)\n  useEffect(() => {\n    // if (!isDesktop) return\n    async function checkNewVersion() {\n      const newPackage = await fetch(\n        \"https://raw.githubusercontent.com/UniversalDataTool/universal-data-tool/master/package.json\"\n      ).then((r) => r.json())\n      if (newPackage.version !== packageInfo.version) {\n        changeNewVersionAvailable(newPackage.version)\n      }\n    }\n    checkNewVersion()\n  }, [])\n\n  const [latestCommunityUpdate, setLatestCommunityUpdate] = useState(null)\n  useEffect(() => {\n    async function getLatestREADME() {\n      const readme = await fetch(\n        \"https://raw.githubusercontent.com/UniversalDataTool/universal-data-tool/master/README.md\"\n      ).then((r) => r.text())\n      const startCU = readme.search(\"COMMUNITY-UPDATE:START\")\n      const endCU = readme.search(\"COMMUNITY-UPDATE:END\")\n      const communityUpdates = readme\n        .slice(startCU, endCU)\n        .split(\"\\n\")\n        .slice(1, -1)\n      const latestYtLink = communityUpdates[0].match(/\\((.*)\\)/)[1]\n      setLatestCommunityUpdate({\n        name: communityUpdates[0].match(/\\[(.*)\\]/)[1],\n        ytLink: latestYtLink,\n        embedYTLink: getEmbedYoutubeUrl(latestYtLink),\n      })\n    }\n    getLatestREADME()\n  }, [])\n\n  const [\n    createFromTemplateDialogOpen,\n    changeCreateFromTemplateDialogOpen,\n  ] = useState(false)\n  const [addAuthFromDialogOpen, changeAddAuthFromDialogOpen] = useState(false)\n  const onDrop = useEventCallback((acceptedFiles) => {\n    onFileDrop(acceptedFiles[0])\n  })\n\n  const changeLanguage = (language) => {\n    i18n.changeLanguage(language)\n  }\n\n  let { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n  return (\n    <div className={c.container}>\n      <CreateFromTemplateDialog\n        open={createFromTemplateDialogOpen}\n        onSelect={(template) => {\n          posthog.capture(\"template_clicked\", {\n            clicked_template: template.name,\n          })\n          onOpenTemplate(template)\n        }}\n        onClose={() => changeCreateFromTemplateDialogOpen(false)}\n      />\n      <AddAuthFromTemplateDialog\n        open={addAuthFromDialogOpen}\n        onSelect={(template) => onOpenTemplate(template)}\n        onClose={() => changeAddAuthFromDialogOpen(false)}\n      />\n      <Header\n        additionalButtons={[\n          newVersionAvailable && (\n            <Button\n              variant=\"outlined\"\n              key=\"download-latest\"\n              className={c.headerButton}\n              href=\"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n            >\n              <DownloadIcon className={c.downloadIcon} />\n              {t(\"Download Version\")} v{newVersionAvailable}\n            </Button>\n          ),\n          !newVersionAvailable && showDownloadLink && (\n            <Button\n              variant=\"outlined\"\n              key=\"download\"\n              href=\"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n              className={c.headerButton}\n            >\n              <DownloadIcon className={c.downloadIcon} />\n              {t(\"download\")}\n            </Button>\n          ),\n        ].filter(Boolean)}\n      />\n      <ContentContainer>\n        <Content>\n          <Grid container>\n            <Grid xs={12} sm={6} item>\n              <Title>Universal Data Tool</Title>\n              <Subtitle>{t(\"universaldatatool-description\")}</Subtitle>\n            </Grid>\n            <Grid xs={12} sm={6} item>\n              <Box className={c.languageSelectionBox}>\n                <Box\n                  width=\"100%\"\n                  maxWidth={200}\n                  className={c.languageSelectionWrapper}\n                >\n                  <Select\n                    styles={languageSelectionFormStyle}\n                    defaultValue={languageOptions[0]}\n                    options={languageOptions}\n                    onChange={({ value }) => changeLanguage(value)}\n                  />\n                </Box>\n              </Box>\n            </Grid>\n            <Grid xs={12} sm={6} item>\n              <ActionList>\n                <ActionTitle>Start</ActionTitle>\n                <Action\n                  onClick={() => {\n                    posthog.capture(\"template_clicked\", {\n                      clicked_template: \"empty\",\n                    })\n                    onOpenTemplate(templates.find((t) => t.name === \"Empty\"))\n                  }}\n                >\n                  {t(\"new-file\")}\n                </Action>\n                <Action\n                  onClick={() => changeCreateFromTemplateDialogOpen(true)}\n                >\n                  {t(\"start-from-template\")}\n                </Action>\n                <Action {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  {t(\"open-file\")}\n                </Action>\n                {onClickOpenSession && (\n                  <Action onClick={onClickOpenSession}>\n                    {t(\"open-collaborative-session\")}\n                  </Action>\n                )}\n                <Action onClick={() => changeAddAuthFromDialogOpen(true)}>\n                  {t(\"add-authentication\")}\n                </Action>\n                <Action\n                  onClick={() => {\n                    window.location.href =\n                      \"https://universaldatatool.com/courses\"\n                  }}\n                >\n                  {t(\"create-training-course\")}\n                </Action>\n                {/* <Action>Open Folder</Action> */}\n              </ActionList>\n              <ActionList>\n                <ActionTitle>Recent</ActionTitle>\n                {recentItems.length === 0 ? (\n                  <Actionless>{t(\"no-recent-files\")}</Actionless>\n                ) : (\n                  recentItems.map((ri, i) => (\n                    <Action key={i} onClick={() => onOpenRecentItem(ri)}>\n                      {ri.fileName}\n                    </Action>\n                  ))\n                )}\n              </ActionList>\n              <ActionList>\n                <ActionTitle>Help</ActionTitle>\n                <Action href=\"https://github.com/UniversalDataTool/universal-data-tool/releases\">\n                  {t(\"downloading-and-installing-udt\")}\n                </Action>\n                <Action href=\"https://dev.to/seveibar/make-bounding-boxes-for-artificial-intelligence-with-udt-1kai\">\n                  {t(\"labeling-images\")}\n                </Action>\n                {/* <Action>Custom Data Entry</Action> */}\n                <Action href=\"https://github.com/UniversalDataTool/universal-data-tool\">\n                  Github Repository\n                </Action>\n                <Action href=\"https://www.youtube.com/channel/UCgFkrRN7CLt7_iTa2WDjf2g\">\n                  Youtube Channel\n                </Action>\n\n                {/* <Action href=\"#\">\n                  How to Collaborate in Real-Time with UDT\n                </Action> */}\n              </ActionList>\n            </Grid>\n            <Grid xs={12} sm={6} item>\n              <ActionList>\n                <ActionTitle>About</ActionTitle>\n                <ActionText>\n                  {t(\"start-page-about-first-paragraph\")}\n                  <br />\n                  <br />\n                  {t(\"start-page-about-second-paragraph\")}\n                  <br />\n                  <br />\n                  {t(\"the-udt-uses-an\")}{\" \"}\n                  <a href=\"https://github.com/UniversalDataTool/udt-format\">\n                    open-source data format (.udt.json / .udt.csv)\n                  </a>{\" \"}\n                  {t(\"start-page-about-third-paragraph\")}\n                  <br />\n                  <br />\n                </ActionText>\n              </ActionList>\n              <ActionList>\n                {latestCommunityUpdate && (\n                  <>\n                    <ActionTitle>{latestCommunityUpdate.name}</ActionTitle>\n                    <iframe\n                      title={latestCommunityUpdate.name}\n                      width=\"320\"\n                      height=\"178\"\n                      // src=\"https://www.youtube.com/embed/QW-s4XVK3Ok\"\n                      src={latestCommunityUpdate.embedYTLink}\n                      frameBorder=\"0\"\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen\n                    ></iframe>\n                  </>\n                )}\n                {/* <ActionText>\n                  <Action\n                    style={{ display: \"inline\" }}\n                    onClick={() => changeCreateFromTemplateDialogOpen(true)}\n                  >\n                    {t(\"open-a-template\")}\n                  </Action>{\" \"}\n                  {t(\"to-see-how-the-udt-could-work-for-your-data\")}\n                </ActionText> */}\n              </ActionList>\n            </Grid>\n            <Grid xs={12} sm={6} item>\n              <BottomSpacer />\n            </Grid>\n          </Grid>\n        </Content>\n      </ContentContainer>\n    </div>\n  )\n}\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport isEmpty from \"lodash/isEmpty\"\n\nconst useStyles = makeStyles({\n  textField: {\n    marginLeft: 8,\n  },\n})\n\nconst SAVE_WAIT = 2000\n\nexport default ({ value, onChange }) => {\n  const c = useStyles()\n  const [{ editing, newValue }, changeEditing] = useState({\n    editing: false,\n    newValue: value || \"\",\n  })\n\n  useEffect(() => {\n    if (!isEmpty(newValue) && newValue !== \"unnamed\") {\n      changeEditing({ editing, newValue: newValue })\n    } else {\n      changeEditing({ editing, newValue: value })\n    }\n  }, [newValue, editing, value])\n\n  useEffect(() => {\n    if (!editing) return\n    let listener = (e) => {\n      if (e.key === \"Enter\") {\n        onChange(newValue)\n        changeEditing({ editing: false })\n      }\n    }\n    window.addEventListener(\"keydown\", listener)\n    return () => {\n      window.removeEventListener(\"keydown\", listener)\n    }\n  }, [editing, newValue, onChange])\n\n  useEffect(() => {\n    if (!newValue) return\n    if (editing) {\n      let timeout = setTimeout(\n        () => {\n          onChange(newValue)\n          changeEditing({ editing: false })\n        },\n        value === newValue ? SAVE_WAIT * 5 : SAVE_WAIT\n      )\n\n      return () => clearTimeout(timeout)\n    } else {\n      return () => {}\n    }\n  }, [editing, newValue, value, onChange])\n\n  return (\n    <TextField\n      className={c.textField}\n      label=\"File Name\"\n      variant=\"outlined\"\n      size=\"small\"\n      InputProps={{\n        inputProps: { style: { color: \"#000\" } },\n      }}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          e.preventDefault()\n          e.stopPropagation()\n          e.target.blur()\n        }\n      }}\n      onKeyPress={(e) => {\n        e.stopPropagation()\n      }}\n      onChange={(e) => {\n        changeEditing({\n          editing: true,\n          newValue: e.target.value,\n        })\n      }}\n      value={newValue || \"\"}\n    />\n  )\n}\n","// @flow weak\n\nimport React, { memo, useCallback, useReducer, useEffect } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport { useLocalStorage } from \"react-use\"\nimport { styled } from \"@material-ui/core/styles\"\nimport range from \"lodash/range\"\nimport * as colors from \"@material-ui/core/colors\"\nimport classNames from \"classnames\"\nimport TablePagination from \"@material-ui/core/TablePagination\"\nimport Box from \"@material-ui/core/Box\"\nimport getBrushColorPalette from \"../../utils/get-brush-color-palette\"\n\nconst Container = styled(\"div\")({\n  flexWrap: \"wrap\",\n  height: \"100%\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\nconst EmptyState = styled(\"div\")({\n  fontSize: 24,\n  color: colors.grey[500],\n  padding: 30,\n  textAlign: \"center\",\n})\nconst SampleDiv = styled(\"div\")(({ color }) => ({\n  color: \"#fff\",\n  fontVariantNumeric: \"tabular-nums\",\n  margin: 4,\n  padding: 4,\n  backgroundColor: color[500],\n  display: \"inline-flex\",\n  fontSize: 14,\n  fontWeight: 500,\n  textAlign: \"center\",\n  justifyContent: \"center\",\n  minWidth: \"3em\",\n  borderRadius: 3,\n  cursor: \"pointer\",\n  userSelect: \"none\",\n  transition:\n    \"box-shadow 200ms ease, transform 200ms ease, background-color 200ms ease\",\n  \"&:hover\": {\n    backgroundColor: color[700],\n  },\n  // color: color.isFaded ? \"#000\" : \"#fff\",\n  \"&.selected\": {\n    backgroundColor: color[700],\n    boxShadow: `0px 0px 2px 1px ${color[\"A200\"]}`,\n    transform: \"scale(1.05,1.05)\",\n  },\n}))\n\nconst Sample = memo(\n  ({\n    index,\n    onClick,\n    completed,\n    selected,\n    onMouseDown,\n    onMouseUp,\n    onMouseEnter,\n    brush,\n  }) => {\n    return (\n      <SampleDiv\n        className={classNames({ completed, selected })}\n        onClick={() => onClick(index)}\n        onMouseDown={() => onMouseDown(index)}\n        onMouseUp={() => onMouseUp(index)}\n        onMouseEnter={() => onMouseEnter(index)}\n        color={getBrushColorPalette(brush)}\n      >\n        {index}\n      </SampleDiv>\n    )\n  },\n  function (p, n) {\n    return (\n      p.index === n.index &&\n      p.completed === n.completed &&\n      p.selected === n.selected &&\n      p.brush === n.brush\n    )\n  }\n)\n\nexport default ({\n  count,\n  completed = [],\n  samples,\n  onClick,\n  tablePaginationPadding = 0,\n}) => {\n  const [samplesPerPage, changeSamplesPerPage] = useLocalStorage(\n    \"samplesPerPage\",\n    100\n  )\n  const [sampleOffset, changeSampleOffset] = useLocalStorage(\"sampleOffset\", 0)\n\n  useEffect(() => {\n    if (sampleOffset > count) {\n      changeSampleOffset(0)\n    }\n  }, [changeSampleOffset, sampleOffset, count])\n\n  const [selectRange, changeSelectRange] = useReducer((state, newValue) => {\n    if (newValue === null) return null\n    if (typeof newValue === \"number\") {\n      if (!state) return null\n      return [Math.min(newValue, state[0]), Math.max(newValue + 1, state[1])]\n    }\n    return newValue\n  }, null)\n\n  const startSelectRange = useCallback(\n    (index) => changeSelectRange([index, index + 1]),\n    [changeSelectRange]\n  )\n  const moveSelectRange = useCallback((index) => changeSelectRange(index), [\n    changeSelectRange,\n  ])\n  const endSelectRange = useCallback(() => {}, [])\n  const checkAndNullifySelectRange = useCallback(\n    (e) => {\n      if (e.buttons !== 1) {\n        changeSelectRange(null)\n      }\n    },\n    [changeSelectRange]\n  )\n  const onClickMemo = useEventCallback(onClick)\n\n  return (\n    <Container\n      onMouseUp={checkAndNullifySelectRange}\n      onMouseEnter={checkAndNullifySelectRange}\n    >\n      {count === 0 && (\n        <EmptyState>\n          No samples, try using \"Import Toy Dataset\" in Samples > Import\n        </EmptyState>\n      )}\n      <Box flexGrow={1}>\n        {range(\n          sampleOffset,\n          Math.min(count, sampleOffset + samplesPerPage)\n        ).map((i) => (\n          <Sample\n            onClick={onClickMemo}\n            key={i}\n            index={i}\n            completed={completed[i]}\n            brush={completed[i] ? samples[i].brush || \"complete\" : \"incomplete\"}\n            selected={selectRange && i >= selectRange[0] && i < selectRange[1]}\n            onMouseDown={startSelectRange}\n            onMouseEnter={moveSelectRange}\n            onMouseUp={endSelectRange}\n          />\n        ))}\n        {sampleOffset + samplesPerPage < count && (\n          <>\n            {range(3).map((i) => (\n              <Sample\n                onClick={() => {\n                  changeSampleOffset(sampleOffset + samplesPerPage)\n                }}\n                key={sampleOffset + samplesPerPage + i}\n                selected={false}\n                brush={`ellipsis${i + 1}`}\n                index={sampleOffset + samplesPerPage + i}\n                completed={false}\n                onMouseEnter={() => {}}\n                onMouseDown={() => {}}\n                onMouseUp={() => {}}\n              />\n            ))}\n            <Box textAlign=\"center\" marginTop=\"16px\" color={colors.grey[700]}>\n              More Samples on Next Page\n            </Box>\n          </>\n        )}\n      </Box>\n      <Box paddingRight={tablePaginationPadding}>\n        <TablePagination\n          rowsPerPageOptions={[100, 250, 500, 1000, 2000, 10000]}\n          component=\"div\"\n          count={count}\n          rowsPerPage={samplesPerPage}\n          page={Math.floor(sampleOffset / samplesPerPage)}\n          labelRowsPerPage=\"Samples per Page:\"\n          onChangePage={(e, newPage) =>\n            changeSampleOffset(newPage * samplesPerPage)\n          }\n          onChangeRowsPerPage={(e) => {\n            changeSampleOffset(0)\n            changeSamplesPerPage(+e.target.value)\n          }}\n        />\n      </Box>\n    </Container>\n  )\n}\n","export default (s, opts = {}) => {\n  console.log(s)\n  let extension = s.replace(/\\?.*/g, \"\").split(\".\").slice(-1)[0]\n  if (s.includes(\"gstatic.com/images\")) {\n    extension = \"jpg\"\n  }\n  switch (extension.toLowerCase()) {\n    case \"png\":\n    case \"jpg\":\n    case \"gif\":\n    case \"jpeg\":\n    case \"bmp\": {\n      return { imageUrl: s }\n    }\n    case \"pdf\": {\n      return { pdfUrl: s }\n    }\n    case \"mp3\":\n    case \"wav\": {\n      return { audioUrl: s }\n    }\n    default: {\n      if (opts.returnNulls) return null\n      throw new Error(`extension not recognized: \"${extension}\" in \"${s}\"`)\n      // TODO if the user doesn't care, return null (this\n      // behavior could be enabled with textfield option)\n    }\n  }\n}\n","// @flow weak\nimport React, { useState } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Select from \"react-select\"\nimport * as colors from \"@material-ui/core/colors\"\nimport getSampleFromUrl from \"./get-sample-from-url\"\n\nconst SelectContainer = styled(\"div\")({\n  marginTop: 8,\n  marginBottom: 16,\n})\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\nconst ErrorText = styled(\"div\")({\n  color: colors.red[600],\n  padding: 16,\n})\n\nconst autoDetectOptions = [\n  {\n    label: \"Auto Detect File Type\",\n    value: \"auto_detect\",\n  },\n  {\n    label: \"Image URLs\",\n    value: \"images\",\n  },\n]\n\nexport default ({ open, onClose, onAddSamples }) => {\n  const [content, changeContent] = useState(\"\")\n  const [urlType, changeURLType] = useState(\"auto_detect\")\n  const [error, setError] = useState(\"\")\n  return (\n    <SimpleDialog\n      title=\"Paste Urls\"\n      open={open}\n      onClose={onClose}\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            try {\n              onAddSamples(\n                content\n                  .split(\"\\n\")\n                  .map((l) => l.trim())\n                  .filter(Boolean)\n                  .map((s) =>\n                    urlType === \"images\"\n                      ? { imageUrl: s }\n                      : getSampleFromUrl(s, { returnNulls: true })\n                  )\n                  .filter(Boolean)\n              )\n            } catch (e) {\n              setError(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      <SelectContainer>\n        <Select\n          options={autoDetectOptions}\n          defaultValue={autoDetectOptions[0]}\n          onChange={(opt) => {\n            changeURLType(opt.value)\n          }}\n        />\n      </SelectContainer>\n      {error && <ErrorText>{error}</ErrorText>}\n      <TextArea\n        onChange={(e, v) => changeContent(e.target.value)}\n        placeholder={\"Paste URLs here\\nOne URL per line\"}\n      />\n    </SimpleDialog>\n  )\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (sample) => {\n  var sampleName\n  if (!isEmpty(sample)) {\n    if (!isEmpty(sample.imageUrl)) {\n      sampleName = decodeURI(sample.imageUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.videoUrl)) {\n      sampleName = decodeURI(sample.videoUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.audioUrl)) {\n      sampleName = decodeURI(sample.audioUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.pdfUrl)) {\n      sampleName = decodeURI(sample.pdfUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n  }\n  return sampleName\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (UrlOfAFile) => {\n  var typeOfFile = \"File\"\n  var fileExtension = UrlOfAFile.match(\n    `\\\\/?([^\\\\/\\\\\\\\&\\\\?]*\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n  )\n  if (!isEmpty(fileExtension)) {\n    fileExtension = fileExtension[2].toLowerCase()\n  }\n  if (\n    fileExtension === \"jpg\" ||\n    fileExtension === \"jpeg\" ||\n    fileExtension === \"png\" ||\n    fileExtension === \"ico\" ||\n    fileExtension === \"jpe\" ||\n    fileExtension === \"gif\"\n  )\n    typeOfFile = \"Image\"\n  if (fileExtension === \"mp4\" || fileExtension === \"mkv\") typeOfFile = \"Video\"\n  if (fileExtension === \"mp3\") typeOfFile = \"Audio\"\n  if (fileExtension === \"pdf\") typeOfFile = \"PDF\"\n  if (fileExtension === \"txt\") typeOfFile = \"Texte\"\n  return typeOfFile\n}\n","import isEmpty from \"lodash/isEmpty\"\n\nexport default (objectOfRef, objectToCheck) => {\n  var resultSet = {\n    fileName: false,\n    content: {\n      interface: {\n        type: false,\n        labels: false,\n        regionTypesAllowed: false,\n      },\n      samples: false,\n    },\n    id: false,\n    mode: false,\n    any: false,\n  }\n  // Check if the object to check exist if not return false\n  if (isEmpty(objectToCheck)) return resultSet\n\n  // Check if the object of reference exist if not return true\n  if (isEmpty(objectOfRef)) {\n    resultSet.fileName = true\n    resultSet.content.interface.type = true\n    resultSet.content.interface.labels = true\n    resultSet.content.interface.regionTypesAllowed = true\n    resultSet.content.samples = true\n    resultSet.id = true\n    resultSet.mode = true\n    resultSet.any = true\n    return resultSet\n  }\n\n  if (objectOfRef !== objectToCheck) {\n    resultSet.any = true\n  } else {\n    return resultSet\n  }\n\n  // Check if the id doesn't exist or have change\n  if (!isEmpty(objectToCheck.id)) {\n    if (isEmpty(objectOfRef.id)) resultSet.id = true\n    else if (objectToCheck.id !== objectOfRef.id) resultSet.id = true\n  }\n\n  // Check if the content doesn't exist or have change\n  if (!isEmpty(objectToCheck.content)) {\n    if (isEmpty(objectOfRef.content)) {\n      resultSet.content.interface.type = true\n      resultSet.content.interface.labels = true\n      resultSet.content.interface.regionTypesAllowed = true\n      resultSet.content.samples = true\n    } else if (objectToCheck.content !== objectOfRef.content) {\n      //Check if the interface doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.interface)) {\n        if (isEmpty(objectOfRef.content.interface)) {\n          resultSet.content.interface.type = true\n          resultSet.content.interface.labels = true\n          resultSet.content.interface.regionTypesAllowed = true\n        } else if (\n          objectToCheck.content.interface !== objectOfRef.content.interface\n        ) {\n          //Check if the type doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.type)) {\n            if (isEmpty(objectOfRef.content.interface.type)) {\n              resultSet.content.interface.type = true\n            } else if (\n              objectToCheck.content.interface.type !==\n              objectOfRef.content.interface.type\n            ) {\n              resultSet.content.interface.type = true\n            }\n          }\n          //Check if the labels doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.labels)) {\n            if (isEmpty(objectOfRef.content.interface.labels)) {\n              resultSet.content.interface.labels = true\n            } else if (\n              objectToCheck.content.interface.labels !==\n              objectOfRef.content.interface.labels\n            ) {\n              resultSet.content.interface.labels = true\n            }\n          }\n          //Check if the regionsTypesAllowed doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.regionTypesAllowed)) {\n            if (isEmpty(objectOfRef.content.interface.regionTypesAllowed)) {\n              resultSet.content.interface.regionTypesAllowed = true\n            } else if (\n              objectToCheck.content.interface.regionTypesAllowed !==\n              objectOfRef.content.interface.regionTypesAllowed\n            ) {\n              resultSet.content.interface.regionTypesAllowed = true\n            }\n          }\n        }\n      }\n      //Check if the samples doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.samples)) {\n        if (isEmpty(objectOfRef.content.samples)) {\n          resultSet.content.samples = true\n        } else if (\n          objectToCheck.content.samples !== objectOfRef.content.samples\n        ) {\n          resultSet.content.samples = true\n        }\n      }\n    }\n  }\n\n  // Check if the mode doesn't exist or have change\n  if (!isEmpty(objectToCheck.mode)) {\n    if (isEmpty(objectOfRef.mode)) resultSet.mode = true\n    else if (objectToCheck.mode !== objectOfRef.mode) resultSet.mode = true\n  }\n\n  // Check if the fileName doesn't exist or have change\n  if (!isEmpty(objectToCheck.fileName)) {\n    if (isEmpty(objectOfRef.fileName)) resultSet.fileName = true\n    else if (objectToCheck.fileName !== objectOfRef.fileName)\n      resultSet.fileName = true\n  }\n  console.log({ resultSet })\n  //Default behavior return false\n  return resultSet\n}\n","// @flow weak\n\nimport getSampleNameFromURL from \"../get-sample-name-from-url\"\nimport RecognizeFileExtension from \"../RecognizeFileExtension\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { setIn } from \"seamless-immutable\"\nimport getFilesDifferencesImport from \"./get-files-differences.js\"\n\nexport const getFilesDifferences = getFilesDifferencesImport\n\nexport const getSampleName = (sample) => {\n  var sampleName\n  if (!isEmpty(sample.sampleName)) {\n    sampleName = sample.sampleName\n  } else {\n    sampleName = getSampleNameFromURL(sample)[1]\n  }\n  return sampleName\n}\n\nexport const getSampleUrl = (sample) => {\n  return (\n    sample.imageUrl ||\n    sample.videoUrl ||\n    sample.audioUrl ||\n    sample.pdfUrl ||\n    undefined\n  )\n}\n\nexport const constructSample = (sampleName, url, annotation) => {\n  var type = RecognizeFileExtension(url)\n  if (type === \"Image\") {\n    return {\n      annotation: annotation,\n      imageUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"Video\") {\n    return {\n      annotation: annotation,\n      videoUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"Audio\") {\n    return {\n      annotation: annotation,\n      audioUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"PDF\") {\n    return {\n      annotation: annotation,\n      pdfUrl: url,\n      sampleName: sampleName,\n    }\n  }\n}\nexport const createOneNewSample = constructSample\n\nexport const getSampleWithName = (dataset, sampleName) => {\n  if (!dataset || !dataset.samples || !sampleName) return null\n  const { samples } = dataset\n  for (var i = 0; i < samples.length; i++) {\n    if (!isEmpty(samples[i])) {\n      const nameToSearch = getSampleNameFromURL(samples[i])\n      if (typeof samples[i].sampleName !== \"undefined\") {\n        nameToSearch[1] = samples[i].sampleName\n      }\n      if (nameToSearch[1] === sampleName) {\n        return samples[i]\n      }\n    }\n  }\n  return null\n}\nexport const getSampleWithThisSampleName = getSampleWithName\n\nexport const addNamesToSamples = (dataset) => {\n  if (!dataset || !dataset.samples) return\n  for (var i = 0; i < dataset.samples.length; i++) {\n    if (isEmpty(dataset.samples[i])) continue\n    var oldsample = dataset.samples[i]\n    var sampleName\n    if (!isEmpty(oldsample.document)) {\n      // Deal with the exception of the text file (they don't have url)\n      sampleName = [\n        oldsample.document,\n        \"sample\" + i.toString() + \".txt\",\n        \"sample\",\n        \"txt\",\n      ]\n    } else {\n      sampleName = getSampleNameFromURL(oldsample)\n      sampleName = renameSampleFromUrl(dataset.samples, oldsample, sampleName)\n    }\n    oldsample = setIn(oldsample, [\"sampleName\"], sampleName[1])\n    dataset = setIn(dataset, [\"samples\", i], oldsample)\n  }\n  return dataset\n}\nexport const setSamplesName = addNamesToSamples\n\nexport const renameSampleFromUrl = (samples, sampleToChange, sampleName) => {\n  var boolName = true\n  var v = 1\n  while (boolName) {\n    var sampletocompare1 = getSampleWithThisSampleName(sampleName[1], samples)\n    if (\n      sampletocompare1 !== null &&\n      getSampleUrl(sampletocompare1) !== getSampleUrl(sampleToChange)\n    ) {\n      if (isEmpty(sampleName[2].match(\"(.*)\\\\([0-9]*\\\\)$\"))) {\n        sampleName[1] =\n          sampleName[2] + \"(\" + v.toString() + \").\" + sampleName[3]\n      } else {\n        sampleName[1] =\n          sampleName[2].match(\"(.*)\\\\([0-9]*\\\\)$\")[1] +\n          \"(\" +\n          v.toString() +\n          \")\" +\n          +\".\" +\n          sampleName[3]\n      }\n      v++\n    } else {\n      boolName = false\n    }\n  }\n  return sampleName\n}\n\nexport const eraseAnnotation = (samples) => {\n  var samplesWithoutAnnotation = []\n  for (let i = 0; i < samples.length; i++) {\n    let Newsample = samples[i]\n    if (!isEmpty(Newsample.annotation)) {\n      Newsample = setIn(Newsample, [\"annotation\"], null)\n    }\n    samplesWithoutAnnotation.push(Newsample)\n  }\n  return samplesWithoutAnnotation\n}\n\nexport const concatSample = (actualSamples, newSamples, annotationToKeep) => {\n  var Tabsamples = actualSamples\n  if (annotationToKeep === \"incoming\") {\n    Tabsamples = eraseAnnotation(actualSamples)\n  }\n\n  var Tabsamples2 = newSamples\n  if (annotationToKeep === \"current\") {\n    Tabsamples2 = eraseAnnotation(newSamples)\n  }\n  var concatSamples = Tabsamples.concat(Tabsamples2)\n  return concatSamples\n}\n\nexport const getFileDifferences = (objectOfRef, objectToCheck) => {\n  var resultSet = {\n    fileName: false,\n    content: {\n      interface: {\n        type: false,\n        labels: false,\n        regionTypesAllowed: false,\n      },\n      samples: false,\n    },\n    id: false,\n    mode: false,\n    any: false,\n  }\n  // Check if the object to check exist if not return false\n  if (isEmpty(objectToCheck)) return resultSet\n\n  // Check if the object of reference exist if not return true\n  if (isEmpty(objectOfRef)) {\n    resultSet.fileName = true\n    resultSet.content.interface.type = true\n    resultSet.content.interface.labels = true\n    resultSet.content.interface.regionTypesAllowed = true\n    resultSet.content.samples = true\n    resultSet.id = true\n    resultSet.mode = true\n    resultSet.any = true\n    return resultSet\n  }\n\n  if (objectOfRef !== objectToCheck) {\n    resultSet.any = true\n  } else {\n    return resultSet\n  }\n\n  // Check if the id doesn't exist or have change\n  if (!isEmpty(objectToCheck.id)) {\n    if (isEmpty(objectOfRef.id)) resultSet.id = true\n    else if (objectToCheck.id !== objectOfRef.id) resultSet.id = true\n  }\n\n  // Check if the content doesn't exist or have change\n  if (!isEmpty(objectToCheck.content)) {\n    if (isEmpty(objectOfRef.content)) {\n      resultSet.content.interface.type = true\n      resultSet.content.interface.labels = true\n      resultSet.content.interface.regionTypesAllowed = true\n      resultSet.content.samples = true\n    } else if (objectToCheck.content !== objectOfRef.content) {\n      //Check if the interface doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.interface)) {\n        if (isEmpty(objectOfRef.content.interface)) {\n          resultSet.content.interface.type = true\n          resultSet.content.interface.labels = true\n          resultSet.content.interface.regionTypesAllowed = true\n        } else if (\n          objectToCheck.content.interface !== objectOfRef.content.interface\n        ) {\n          //Check if the type doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.type)) {\n            if (isEmpty(objectOfRef.content.interface.type)) {\n              resultSet.content.interface.type = true\n            } else if (\n              objectToCheck.content.interface.type !==\n              objectOfRef.content.interface.type\n            ) {\n              resultSet.content.interface.type = true\n            }\n          }\n          //Check if the labels doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.labels)) {\n            if (isEmpty(objectOfRef.content.interface.labels)) {\n              resultSet.content.interface.labels = true\n            } else if (\n              objectToCheck.content.interface.labels !==\n              objectOfRef.content.interface.labels\n            ) {\n              resultSet.content.interface.labels = true\n            }\n          }\n          //Check if the regionsTypesAllowed doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.regionTypesAllowed)) {\n            if (isEmpty(objectOfRef.content.interface.regionTypesAllowed)) {\n              resultSet.content.interface.regionTypesAllowed = true\n            } else if (\n              objectToCheck.content.interface.regionTypesAllowed !==\n              objectOfRef.content.interface.regionTypesAllowed\n            ) {\n              resultSet.content.interface.regionTypesAllowed = true\n            }\n          }\n        }\n      }\n      //Check if the samples doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.samples)) {\n        if (isEmpty(objectOfRef.content.samples)) {\n          resultSet.content.samples = true\n        } else if (\n          objectToCheck.content.samples !== objectOfRef.content.samples\n        ) {\n          resultSet.content.samples = true\n        }\n      }\n    }\n  }\n\n  // Check if the mode doesn't exist or have change\n  if (!isEmpty(objectToCheck.mode)) {\n    if (isEmpty(objectOfRef.mode)) resultSet.mode = true\n    else if (objectToCheck.mode !== objectOfRef.mode) resultSet.mode = true\n  }\n\n  // Check if the fileName doesn't exist or have change\n  if (!isEmpty(objectToCheck.fileName)) {\n    if (isEmpty(objectOfRef.fileName)) resultSet.fileName = true\n    else if (objectToCheck.fileName !== objectOfRef.fileName)\n      resultSet.fileName = true\n  }\n  //Default behavior return false\n  return resultSet\n}\n\nexport const fileHasChanged = getFileDifferences\n","import isEmpty from \"lodash/isEmpty\"\nimport Amplify, { Storage } from \"aws-amplify\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nfunction CheckIfAnnotationExist(result, folderToFetch) {\n  return result.find(\n    (element) => element.key === `${folderToFetch}/annotations/annotations.json`\n  )\n}\n\nfunction GetSampleFromAnnotation(json, samples) {\n  if (isEmpty(json.content.samples)) return\n  var newSamples = []\n  for (var i = 0; i < json.content.samples.length; i++) {\n    var sampleName = datasetHelper.getSampleName(json.content.samples[i])\n    var annotation = json.content.samples[i].annotation\n    var sampleFound = datasetHelper.getSampleWithThisSampleName(\n      sampleName,\n      samples\n    )\n    var url\n    if (sampleFound === null) {\n      url = datasetHelper.getSampleUrl(samples)\n    } else {\n      url = datasetHelper.getSampleUrl(sampleFound)\n    }\n    newSamples.push(\n      datasetHelper.createOneNewSample(sampleName, url, annotation)\n    )\n  }\n  json.content.samples = newSamples\n}\n\nexport default async (result, samples, folderToFetch, authConfig) => {\n  Amplify.configure(authConfig)\n\n  var json = null\n  if (CheckIfAnnotationExist(result, folderToFetch)) {\n    await Storage.get(`${folderToFetch}/annotations/annotations.json`, {\n      expires: 24 * 60 * 60 * 2000,\n      level: \"private\",\n    })\n      .then(async (result) => {\n        await fetch(result).then(async (data) => {\n          return await data.json().then(async (result) => {\n            if (typeof result.content === \"undefined\") return\n            json = result\n            GetSampleFromAnnotation(json, samples)\n          })\n        })\n      })\n      .catch((err) => {\n        console.log(\"error getting link for s3 image\", err)\n        return null\n      })\n  }\n  return json\n}\n","import RecognizeFileExtension from \"../../utils/RecognizeFileExtension\"\nimport Amplify, { Storage } from \"aws-amplify\"\n\nasync function setUrl(result, configImport) {\n  if (configImport.loadProjectIsSelected) {\n    if (RecognizeFileExtension(result) === \"Image\") {\n      return { imageUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"Video\") {\n      return { videoUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"Audio\") {\n      return { audioUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"PDF\") {\n      return { pdfUrl: `${result}` }\n    }\n  } else {\n    if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Image\"\n    ) {\n      return { imageUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Video\"\n    ) {\n      return { videoUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Audio\"\n    ) {\n      return { audioUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"PDF\"\n    ) {\n      return { pdfUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Texte\"\n    ) {\n      var texte = await fetchTextInFile(result)\n      return { document: `${texte}` }\n    }\n  }\n}\nasync function fetchTextInFile(urlSource) {\n  var proxyUrl = \"https://cors-anywhere.herokuapp.com/\"\n  var response\n  var url\n  url = proxyUrl + urlSource\n  response = await fetch(url, {\n    method: \"GET\",\n  }).catch((error) => {\n    console.log(\"Looks like there was a problem: \\n\", error)\n  })\n  const texte = await response.text()\n  return texte\n}\nexport default async (result, folderToFetch, configImport, authConfig) => {\n  Amplify.configure(authConfig)\n  var samples = []\n  for (let i = 0; i < result.length; i++) {\n    if (result[i].key.match(`(${folderToFetch}/data).*(\\\\.).*`)) {\n      await Storage.get(result[i].key, {\n        expires: 24 * 60 * 60,\n        level: \"private\",\n      })\n        .then(async (result) => {\n          samples.push(await setUrl(result, configImport))\n        })\n        .catch((err) => {\n          console.log(\"error getting link for s3 image\", err)\n          return null\n        })\n    }\n  }\n  return samples\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (typeAuthorize, file) => {\n  function interfaceFileType(type) {\n    if (\n      type === \"image_classification\" ||\n      type === \"image_segmentation\" ||\n      type === \"composite\"\n    )\n      return \"Image\"\n    if (type === \"video_segmentation\") return \"Video\"\n    if (type === \"audio_transcription\") return \"Audio\"\n    if (type === \"data_entry\") return \"PDF\"\n    if (type === \"text_entity_recognition\" || type === \"text_classification\")\n      return \"Texte\"\n    if (isEmpty(type)) return \"Empty\"\n    return \"File\"\n  }\n\n  function typesamplesSample(samples) {\n    if (isEmpty(samples) || isEmpty(samples[0])) return \"Empty\"\n    if (!isEmpty(samples[0].imageUrl)) return \"Image\"\n    if (!isEmpty(samples[0].videoUrl)) return \"Video\"\n    if (!isEmpty(samples[0].audioUrl)) return \"Audio\"\n    if (!isEmpty(samples[0].pdfUrl)) return \"PDF\"\n    if (!isEmpty(samples[0].document)) return \"Texte\"\n    return \"File\"\n  }\n  var result = [null, null]\n  if (isEmpty(file)) return false\n  result[0] = interfaceFileType(file.content.interface.type)\n  result[1] = typesamplesSample(file.content.samples)\n  if (typeAuthorize.includes(result[0]) && typeAuthorize.includes(result[1]))\n    return true\n  return false\n}\n","import { setIn } from \"seamless-immutable\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nimport isEmpty from \"lodash/isEmpty\"\nexport default (file, json, configImport) => {\n  var contentOldFile = file.content\n  contentOldFile = setIn(\n    contentOldFile,\n    [\"samples\"],\n    datasetHelper.concatSample(\n      file.content.samples,\n      json.content.samples,\n      configImport.annotationToKeep\n    )\n  )\n\n  contentOldFile = setIn(contentOldFile, [\"interface\"], json.content.interface)\n  file = setIn(file, [\"content\"], contentOldFile)\n  if (isEmpty(file.fileName) || file.fileName === \"unnamed\")\n    file = setIn(file, [\"fileName\"], json.fileName)\n  return file\n}\n","// @flow weak\nimport React, { useState, useEffect, useRef, useCallback } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport DataTable from \"react-data-table-component\"\nimport Radio from \"@material-ui/core/Radio\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport { Storage } from \"aws-amplify\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { useLocalStorage } from \"react-use\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport StorageIcon from \"@material-ui/icons/Storage\"\nimport Button from \"@material-ui/core/Button\"\nimport GetAnnotationFromAFolderAWS from \"./get-annotation-from-aws\"\nimport GetImageFromAFolderAWS from \"./get-images-from-aws\"\nimport setButtonNameAddSample from \"./set-button-add-sample-name\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nimport setTypeOfFileToLoadAndDisable from \"./set-type-of-file-to-load-and-disable\"\nimport initConfigImport from \"./init-config-import\"\nimport setAnnotationFromAws from \"./set-annotation-from-aws\"\nimport useAuth from \"../../utils/auth-handlers/use-auth.js\"\n\nconst selectedStyle = { color: \"DodgerBlue\" }\nconst tableStyle = {\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  width: \"100%\",\n}\nconst expandedDataColumns = [\n  { name: \"Data\", selector: \"data\", sortable: true },\n  { name: \"Last Modified\", selector: \"lastModified\", sortable: true },\n]\n\nconst expandedAnnotationsColumns = [\n  { name: \"Annotations\", selector: \"annotation\" },\n  { name: \"Last Modified\", selector: \"lastModified\", sortable: true },\n]\n\nconst columns = [{ name: \"Projects\", selector: \"folder\", sortable: true }]\n\nconst customStyles = {\n  headCells: {\n    style: {\n      paddingLeft: \"10px\",\n      \"font-weight\": \"bold\",\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: \"25px\",\n    },\n  },\n}\n\nconst ExpandedRow = ({ data }) => {\n  const { rowData, rowAnnotations } = data\n  return (\n    <>\n      <DataTable\n        style={{\n          boxSizing: \"border-box\",\n          paddingLeft: \"50px\",\n          paddingRight: \"10px\",\n        }}\n        dense\n        striped\n        noHeader\n        columns={expandedAnnotationsColumns}\n        data={rowAnnotations}\n        noDataComponent='Make sure the project has \"annotations\" folder'\n        pagination={rowData.length > 10}\n        paginationPerPage={10}\n        paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n        customStyles={customStyles}\n      />\n      <DataTable\n        style={{\n          boxSizing: \"border-box\",\n          paddingLeft: \"50px\",\n          paddingRight: \"10px\",\n        }}\n        dense\n        striped\n        noHeader\n        columns={expandedDataColumns}\n        data={rowData}\n        noDataComponent={'Make sure the project has \"data\" folder'}\n        pagination={rowData.length > 10}\n        paginationPerPage={10}\n        paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n        customStyles={customStyles}\n      />\n    </>\n  )\n}\n\nexport default ({ file, open, onClose, onAddSamples, onChangeFile }) => {\n  const { authProvider, user, authConfig } = useAuth()\n  const [textButtonAdd, changetextButtonAdd] = useState(\"Add Samples\")\n  const [s3Content, changeS3Content] = useState(null)\n  const [dataForTable, changeDataForTable] = useState(null)\n  const [folderToFetch, setFolderToFetch] = useState(\"\")\n\n  const [configImport, setConfigImport] = useLocalStorage(\n    \"configImport\",\n    initConfigImport(file)\n  )\n  const lastObjectRef = useRef({})\n  const hasProjectStarted = useCallback(() => {\n    if (authProvider !== \"cognito\") return\n    if (\n      isEmpty(file) ||\n      isEmpty(file.content) ||\n      (isEmpty(file.content.interface) && isEmpty(file.content.samples))\n    )\n      return false\n    return true\n  }, [file, authProvider])\n\n  useEffect(() => {\n    if (authProvider !== \"cognito\") return\n    if (file === lastObjectRef.current) return\n    var configToSet = configImport\n    var changes = datasetHelper.fileHasChanged(lastObjectRef.current, file)\n    if (changes.content.interface.type || changes.content.samples) {\n      if (lastObjectRef.current !== {})\n        configToSet = setTypeOfFileToLoadAndDisable(configToSet, file)\n    }\n    setConfigImport({\n      ...configToSet,\n      projectStarted: hasProjectStarted(),\n      loadProjectIsSelected: hasProjectStarted()\n        ? false\n        : setConfigImport.loadProjectIsSelected,\n    })\n    lastObjectRef.current = file\n  }, [file, configImport, setConfigImport, hasProjectStarted, authProvider])\n\n  const handleAddSample = async () => {\n    var samples = await GetImageFromAFolderAWS(\n      s3Content,\n      folderToFetch,\n      configImport,\n      authConfig\n    )\n    var json = null\n    if (configImport.loadProjectIsSelected) {\n      json = await GetAnnotationFromAFolderAWS(\n        s3Content,\n        samples,\n        folderToFetch,\n        authConfig\n      )\n    }\n\n    if (\n      isEmpty(json) ||\n      isEmpty(json.content) ||\n      isEmpty(json.content.samples) ||\n      isEmpty(json.fileName)\n    ) {\n      onAddSamples(samples)\n    } else {\n      file = setAnnotationFromAws(file, json, configImport)\n      onChangeFile(file, true)\n      onAddSamples([])\n    }\n  }\n\n  const handleRowSelected = (whatsChanging) => {\n    if (!isEmpty(whatsChanging.selectedRows[0])) {\n      setFolderToFetch(whatsChanging.selectedRows[0].folder)\n      changeDataForTable((prevState) =>\n        prevState.map((row) => {\n          if (whatsChanging.selectedRows[0].id === row.id) {\n            row.isSelected = true\n          } else {\n            row.isSelected = false\n          }\n          return row\n        })\n      )\n    } else {\n      setFolderToFetch(null)\n      changeDataForTable((prevState) =>\n        prevState.map((row) => {\n          row.isSelected = false\n          return row\n        })\n      )\n    }\n  }\n  function changeLoadProjectIsSelected() {\n    setConfigImport({\n      ...configImport,\n      loadProjectIsSelected: !configImport.loadProjectIsSelected,\n    })\n  }\n\n  useEffect(() => {\n    var textToSet = setButtonNameAddSample(\n      configImport.loadProjectIsSelected,\n      configImport.typeOfFileToLoad,\n      dataForTable\n    )\n    changetextButtonAdd(textToSet)\n  }, [\n    configImport.loadProjectIsSelected,\n    configImport.typeOfFileToLoad,\n    dataForTable,\n  ])\n\n  useEffect(() => {\n    if (isEmpty(user)) {\n      changeS3Content(null)\n    } else if (!isEmpty(authConfig)) {\n      Storage.list(\"\", { level: \"private\" })\n        .then((result) => {\n          changeS3Content(result)\n          let _dataForTable = result\n            .filter((obj) => {\n              return obj.key.endsWith(\"/\") & (obj.key.split(\"/\").length === 2)\n            })\n            .map((obj, index) => {\n              const folder = obj.key.split(\"/\")[0]\n              const rowDataContent = result\n                .filter((obj) => {\n                  return (\n                    obj.key.startsWith(`${folder}/data/`) &\n                    !obj.key.endsWith(\"/\")\n                  )\n                })\n                .map((obj) => {\n                  return {\n                    data: obj.key.split(\"/data/\")[1],\n                    lastModified: obj.lastModified.toDateString(),\n                  }\n                })\n              const rowAnnotationsContent = result\n                .filter((obj) => {\n                  return (\n                    obj.key.startsWith(`${folder}/annotations/`) &\n                    !obj.key.endsWith(\"/\")\n                  )\n                })\n                .map((obj) => {\n                  return {\n                    annotation: obj.key.split(\"/annotations/\")[1],\n                    lastModified: obj.lastModified.toDateString(),\n                  }\n                })\n              return {\n                id: `${index}`,\n                folder: folder,\n                rowData: rowDataContent,\n                rowAnnotations: rowAnnotationsContent,\n                isSelected: true,\n              }\n            })\n          changeDataForTable(_dataForTable)\n        })\n        .catch((err) => console.log(err))\n    }\n  }, [user, authConfig])\n  return (\n    <SimpleDialog\n      title=\"Select Project\"\n      open={open}\n      onClose={onClose}\n      actions={[\n        {\n          text: textButtonAdd,\n          onClick: () => {\n            handleAddSample()\n          },\n          disabled: configImport.contentDialogBoxIsSetting,\n        },\n      ]}\n    >\n      <table style={tableStyle}>\n        <tbody>\n          <tr>\n            <th>\n              {configImport.loadProjectIsSelected ? (\n                <Button\n                  style={selectedStyle}\n                  onClick={changeLoadProjectIsSelected}\n                  disabled\n                >\n                  Load Project\n                </Button>\n              ) : (\n                <Button\n                  onClick={changeLoadProjectIsSelected}\n                  disabled={configImport.projectStarted}\n                >\n                  Load Project\n                </Button>\n              )}\n              {configImport.loadProjectIsSelected ? (\n                <Button onClick={changeLoadProjectIsSelected}>\n                  Load Samples\n                </Button>\n              ) : (\n                <Button\n                  style={selectedStyle}\n                  onClick={changeLoadProjectIsSelected}\n                  disabled\n                >\n                  Load Samples\n                </Button>\n              )}\n              <IconButton\n                onClick={() => {\n                  setConfigImport({\n                    ...configImport,\n                    contentDialogBoxIsSetting: !configImport.contentDialogBoxIsSetting,\n                  })\n                }}\n              >\n                {configImport.contentDialogBoxIsSetting ? (\n                  <StorageIcon></StorageIcon>\n                ) : (\n                  <SettingsIcon></SettingsIcon>\n                )}\n              </IconButton>\n            </th>\n          </tr>\n\n          {!configImport.contentDialogBoxIsSetting ? (\n            !isEmpty(dataForTable) && (\n              <tr>\n                <th>\n                  <DataTable\n                    expandableRows\n                    expandableRowsComponent={<ExpandedRow />}\n                    selectableRows\n                    selectableRowsHighlight\n                    selectableRowsNoSelectAll\n                    selectableRowsComponent={Radio}\n                    dense\n                    noHeader\n                    noTableHead\n                    columns={columns}\n                    onSelectedRowsChange={handleRowSelected}\n                    selectableRowSelected={(row) => row.isSelected}\n                    data={dataForTable}\n                    pagination={dataForTable.length > 10}\n                    paginationPerPage={10}\n                    paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n                  />\n                </th>\n              </tr>\n            )\n          ) : (\n            <tr>\n              <th>\n                {configImport.loadProjectIsSelected ? (\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                      Annotation processing\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"option1\"\n                      onChange={(event) => {\n                        setConfigImport({\n                          ...configImport,\n                          annotationToKeep: event.target.value,\n                        })\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"both\"\n                        control={<Radio />}\n                        label=\"Keep both annotations\"\n                        checked={configImport.annotationToKeep === \"both\"}\n                      />\n                      <FormControlLabel\n                        value=\"incoming\"\n                        control={<Radio />}\n                        label=\"Keep incoming annotations\"\n                        checked={configImport.annotationToKeep === \"incoming\"}\n                      />\n                      <FormControlLabel\n                        value=\"current\"\n                        control={<Radio />}\n                        label=\"Keep current annotations\"\n                        checked={configImport.annotationToKeep === \"current\"}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                ) : (\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Choose file type</FormLabel>\n                    <RadioGroup\n                      aria-label=\"option2\"\n                      onChange={(event) => {\n                        setConfigImport({\n                          ...configImport,\n                          typeOfFileToLoad: event.target.value,\n                        })\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"Image\"\n                        control={<Radio />}\n                        label=\"Load image file\"\n                        disabled={configImport.typeOfFileToDisable.Image}\n                        checked={configImport.typeOfFileToLoad === \"Image\"}\n                      />\n                      <FormControlLabel\n                        value=\"Video\"\n                        control={<Radio />}\n                        label=\"Load video file\"\n                        disabled={configImport.typeOfFileToDisable.Video}\n                        checked={configImport.typeOfFileToLoad === \"Video\"}\n                      />\n                      <FormControlLabel\n                        value=\"Audio\"\n                        control={<Radio />}\n                        label=\"Load audio file\"\n                        disabled={configImport.typeOfFileToDisable.Audio}\n                        checked={configImport.typeOfFileToLoad === \"Audio\"}\n                      />\n                      <FormControlLabel\n                        value=\"PDF\"\n                        control={<Radio />}\n                        label=\"Load PDF file\"\n                        disabled={configImport.typeOfFileToDisable.PDF}\n                        checked={configImport.typeOfFileToLoad === \"PDF\"}\n                      />\n                      <FormControlLabel\n                        value=\"Texte\"\n                        control={<Radio />}\n                        label=\"Load texte file\"\n                        disabled={configImport.typeOfFileToDisable.Texte}\n                        checked={configImport.typeOfFileToLoad === \"Texte\"}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                )}\n              </th>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </SimpleDialog>\n  )\n}\n","import checkInterfaceAndsamples from \"./check-interface-and-sample-type\"\nexport default (file) => {\n  return {\n    annotationToKeep: \"both\",\n    typeOfFileToLoad: checkInterfaceAndsamples([\"Image\", \"Empty\"], file)\n      ? \"Image\"\n      : checkInterfaceAndsamples([\"Video\", \"Empty\"], file)\n      ? \"Video\"\n      : checkInterfaceAndsamples([\"Audio\", \"Empty\"], file)\n      ? \"Audio\"\n      : checkInterfaceAndsamples([\"PDF\", \"Empty\"], file)\n      ? \"PDF\"\n      : checkInterfaceAndsamples([\"Texte\", \"Empty\"], file)\n      ? \"Texte\"\n      : \"None\",\n    typeOfFileToDisable: {\n      Image: checkInterfaceAndsamples([\"Image\", \"Empty\"], file) ? false : true,\n      Video: checkInterfaceAndsamples([\"Video\", \"Empty\"], file) ? false : true,\n      Audio: checkInterfaceAndsamples([\"Audio\", \"Empty\"], file) ? false : true,\n      PDF: checkInterfaceAndsamples([\"PDF\", \"Empty\"], file) ? false : true,\n      Texte: checkInterfaceAndsamples([\"Texte\", \"Empty\"], file) ? false : true,\n    },\n    loadProjectIsSelected: true,\n    contentDialogBoxIsSetting: false,\n    projectStarted: false,\n  }\n}\n","import isEmpty from \"lodash/isEmpty\"\nimport checkInterfaceAndsamples from \"./check-interface-and-sample-type\"\nexport default (configImport, file) => {\n  return {\n    ...configImport,\n    typeOfFileToLoad:\n      !isEmpty(configImport) &&\n      !isEmpty(configImport.typeOfFileToLoad) &&\n      checkInterfaceAndsamples([configImport.typeOfFileToLoad, \"Empty\"], file)\n        ? configImport.typeOfFileToLoad\n        : checkInterfaceAndsamples([\"Image\", \"Empty\"], file)\n        ? \"Image\"\n        : checkInterfaceAndsamples([\"Video\", \"Empty\"], file)\n        ? \"Video\"\n        : checkInterfaceAndsamples([\"Audio\", \"Empty\"], file)\n        ? \"Audio\"\n        : checkInterfaceAndsamples([\"PDF\", \"Empty\"], file)\n        ? \"PDF\"\n        : checkInterfaceAndsamples([\"Texte\", \"Empty\"], file)\n        ? \"Texte\"\n        : \"None\",\n    typeOfFileToDisable: {\n      Image: checkInterfaceAndsamples([\"Image\", \"Empty\"], file) ? false : true,\n      Video: checkInterfaceAndsamples([\"Video\", \"Empty\"], file) ? false : true,\n      Audio: checkInterfaceAndsamples([\"Audio\", \"Empty\"], file) ? false : true,\n      PDF: checkInterfaceAndsamples([\"PDF\", \"Empty\"], file) ? false : true,\n      Texte: checkInterfaceAndsamples([\"Texte\", \"Empty\"], file) ? false : true,\n    },\n  }\n}\n","import RecognizeFileExtension from \"../../utils/RecognizeFileExtension\"\nimport isEmpty from \"lodash/isEmpty\"\nexport default (loadProjectIsSelected, typeOfFileToLoad, dataForTable) => {\n  var numberOfSamples = 0\n  var textToSet = \"\"\n  var folderName\n  if (!isEmpty(dataForTable)) {\n    for (var i = 0; i < dataForTable.length; i++) {\n      if (dataForTable[i].isSelected) {\n        folderName = dataForTable[i].folder\n        if (!isEmpty(dataForTable[i].rowData)) {\n          for (var y = 0; y < dataForTable[i].rowData.length; y++) {\n            if (\n              RecognizeFileExtension(dataForTable[i].rowData[y].data) ===\n              typeOfFileToLoad\n            ) {\n              numberOfSamples++\n            }\n          }\n        }\n      }\n    }\n    if (loadProjectIsSelected) {\n      textToSet = \"Load \" + folderName\n    } else {\n      textToSet = \"Add \" + numberOfSamples + \" \" + typeOfFileToLoad\n    }\n  }\n  return textToSet\n}\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nexport default (props) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 50 50\">\n      <g id=\"Working\">\n        <path\n          style={props.color}\n          d=\"M21.17,42.88H13.76a1,1,0,0,1-1-1v-7.5a1,1,0,0,1,1-1h7.41a1,1,0,0,1,1,1v7.5A1,1,0,0,1,21.17,42.88Zm-6.41-2h5.41v-5.5H14.76Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M31,39.17a5.24,5.24,0,1,1,5.22-5.24A5.23,5.23,0,0,1,31,39.17Zm0-8.48a3.24,3.24,0,1,0,3.22,3.24A3.23,3.23,0,0,0,31,30.69Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M20.22,29.75H10.85a1,1,0,0,1-.87-.51,1,1,0,0,1,0-1l4.69-7.82a1,1,0,0,1,1.71,0l4.69,7.82a1,1,0,0,1,0,1A1,1,0,0,1,20.22,29.75Zm-7.61-2h5.85l-2.92-4.87Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,48.5c-6.39,0-16.5-1.45-16.63-5.34L2.51,9.55a1,1,0,0,1,2-.39c.5,1.93,8.05,4.63,19.2,4.63s18.69-2.7,19.19-4.63a1,1,0,0,1,2,.39L40.29,43.16c0,1.32-1.22,2.45-3.51,3.36a22.87,22.87,0,0,1-3.12.94A46,46,0,0,1,23.67,48.5ZM4.9,12.27,9,43s0,.09,0,.13c0,1.18,5.69,3.42,14.63,3.42a43.75,43.75,0,0,0,9.54-1A21,21,0,0,0,36,44.66c1.85-.73,2.26-1.39,2.26-1.58V43l4.14-30.68c-3.86,2.3-11.64,3.52-18.77,3.52S8.75,14.57,4.9,12.27Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,15.79c-9.47,0-20.1-2.15-21.14-6.12,0-.05,0-.09,0-.13l0-.41a.62.62,0,0,1,0-.13c0-4.42,11.18-7.5,21.22-7.5S44.88,4.58,44.88,9v.13l-.06.41a.69.69,0,0,1,0,.13C43.76,13.64,33.13,15.79,23.67,15.79ZM4.48,9.21c.62,1.93,8.14,4.58,19.19,4.58s18.56-2.65,19.18-4.58l0-.27C42.75,7,34.86,3.5,23.67,3.5S4.59,7,4.45,8.94Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M44.93,29.62c-4.76,0-15.18-4.71-21.7-7.91l.88-1.8c9,4.42,19.6,8.52,21.41,7.75-.14-.29-.81-1.19-4-2.92l-.16-.1,1-1.74.15.09c3.21,1.77,4.74,3.13,5,4.41a1.82,1.82,0,0,1-.4,1.52A2.77,2.77,0,0,1,44.93,29.62Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,23a2.17,2.17,0,1,1,2.17-2.17A2.18,2.18,0,0,1,23.67,23Zm0-2.34a.17.17,0,0,0-.18.17c0,.19.35.19.35,0A.17.17,0,0,0,23.67,20.64Z\"\n        />\n      </g>\n    </SvgIcon>\n  )\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport BucketIcon from \"../ImportPage/S3Icon\"\nimport DirectoryIcon from \"@material-ui/icons/FolderOpen\"\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\"\nimport BackIcon from \"@material-ui/icons/KeyboardArrowUp\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nconst Container = styled(Box)({})\nconst Items = styled(Box)({ height: 300, width: 400, overflowY: \"scroll\" })\nconst Path = styled(Box)({\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n})\nconst Item = styled(Button)({ width: \"100%\" })\n\nexport const S3BucketSelector = ({\n  currentPath,\n  options,\n  canCreateNew,\n  onChangePath,\n  showFiles = true,\n}) => {\n  return (\n    <Container>\n      <Path display=\"flex\" alignItems=\"center\">\n        <IconButton\n          disabled={!currentPath}\n          onClick={() => {\n            const newPath = currentPath.split(\"/\").slice(0, -2).join(\"/\") + \"/\"\n            if (newPath === \"s3://\") {\n              onChangePath(\"\")\n            } else {\n              onChangePath(newPath)\n            }\n          }}\n        >\n          <BackIcon />\n        </IconButton>\n        <Box>{currentPath}</Box>\n      </Path>\n      <Items>\n        {options\n          .filter((option) => (option.type === \"file\" ? showFiles : true))\n          .map((option, i) => (\n            <Item\n              key={i}\n              onClick={() => {\n                if (option.type === \"file\") {\n                  onChangePath(currentPath + option.name)\n                } else {\n                  if (!currentPath) {\n                    onChangePath(`s3://${option.name}/`)\n                  } else {\n                    onChangePath(`${currentPath}${option.name}`)\n                  }\n                }\n              }}\n            >\n              {option.type === \"bucket\" ? (\n                <BucketIcon className=\"icon\" />\n              ) : option.type === \"directory\" ? (\n                <DirectoryIcon className=\"icon\" />\n              ) : (\n                <FileIcon className=\"icon\" />\n              )}\n              <Box\n                flexGrow={1}\n                className=\"text\"\n                textAlign=\"left\"\n                paddingLeft={1}\n              >\n                {option.name}\n              </Box>\n            </Item>\n          ))}\n        {currentPath !== \"\" && canCreateNew && (\n          <Item\n            key=\"create-new\"\n            onClick={() => {\n              // TODO switch to MUI dialog\n              const newDirectory = window.prompt(\n                \"Enter the name of new directory\"\n              )\n              if (newDirectory) {\n                onChangePath(currentPath + newDirectory + \"/\")\n              }\n            }}\n          >\n            <DirectoryIcon className=\"icon\" />\n            <Box flexGrow={1} className=\"text\" textAlign=\"left\" paddingLeft={1}>\n              Create New\n            </Box>\n          </Item>\n        )}\n      </Items>\n    </Container>\n  )\n}\n\nexport default S3BucketSelector\n","// @flow\n\nexport default () => {\n  if (window.require) {\n    return Boolean(window.require(\"electron\"))\n  }\n  return false\n}\n","import { useMemo } from \"react\"\nimport { useAppConfig } from \"../../components/AppConfig\"\nimport xmlParser from \"fast-xml-parser\"\nimport useIsDesktop from \"../use-is-desktop\"\nimport { AwsClient } from \"aws4fetch\"\n\nfunction parseS3URI(s3Path) {\n  const bucket = s3Path.match(/s3:\\/\\/([^/]+)/)[1]\n  const path = s3Path.replace(/s3:\\/\\/[^/]+\\//, \"\")\n  return { bucket, path }\n}\n\nexport default () => {\n  const { appConfig } = useAppConfig()\n  const isDesktop = useIsDesktop()\n  let {\n    \"auth.s3iam.access_key_id\": accessKeyId,\n    \"auth.s3iam.secret_access_key\": secretAccessKey,\n    \"auth.s3iam.region\": region,\n    \"auth.proxy.corsproxy\": corsProxy,\n  } = appConfig\n  if (isDesktop) {\n    corsProxy = \"{URL}\"\n  }\n  // TODO if electron don't use CORS proxy\n\n  const awsClient = useMemo(\n    () =>\n      accessKeyId\n        ? new AwsClient({ accessKeyId, secretAccessKey, region, service: \"s3\" })\n        : null,\n    // eslint-disable-next-line\n    []\n  )\n\n  const fetchS3 = async (url, opts = {}) => {\n    const request = await awsClient.sign(url, opts)\n    const corsProxyRequest = new Request(\n      corsProxy.replace(\"{URL}\", encodeURIComponent(request.url)),\n      {\n        headers: request.headers,\n        method: request.method,\n        body: opts.body,\n      }\n    )\n    const response = await fetch(corsProxyRequest).then((r) => r.text())\n    return xmlParser.parse(response)\n  }\n\n  if (!accessKeyId) return {}\n\n  return useMemo(\n    () => ({\n      parseS3URI,\n      listBuckets: () => fetchS3(\"https://s3.amazonaws.com\"),\n      listBucketItemsAt: (s3Path, opts = {}) => {\n        const { bucket, path } = parseS3URI(s3Path)\n        return fetchS3(\n          `https://s3.${region}.amazonaws.com/${bucket}?list-type=2&delimiter=/&prefix=${path}`,\n          {\n            headers: { Host: bucket },\n          }\n        )\n      },\n      putBucketItem: async (s3Path, file) => {\n        const { bucket, path } = parseS3URI(s3Path)\n        const res = await fetchS3(\n          `https://s3.${region}.amazonaws.com/${bucket}/${path}`,\n          {\n            method: \"PUT\",\n            headers: {\n              Host: `s3.amazonaws.com/${bucket}`,\n              \"Content-Type\": file.type,\n              \"x-amz-acl\": \"public-read\",\n            },\n            body: file,\n          }\n        )\n        if (res.Error) {\n          throw new Error(`${res.Error.Code}: ${res.Error.Message}`)\n        }\n        return res\n      },\n    }),\n    // eslint-disable-next-line\n    [awsClient]\n  )\n}\n","import JAC from \"jac-format\"\n\nconst alternativeSpellings = {\n  imageUrl: [\n    \"image_url\",\n    \"image_urls\",\n    \"image\",\n    \"image_src\",\n    \"img_url\",\n    \"img\",\n    \"img_src\",\n  ],\n  document: [\"text\"],\n}\nconst badSpellingMap = {}\nfor (const [correct, badSpellings] of Object.entries(alternativeSpellings)) {\n  for (const badSpelling of badSpellings) {\n    badSpellingMap[badSpelling] = correct\n  }\n}\n\nconst convertTaskDatumMistakes = (sample) => {\n  for (const key in sample) {\n    const normalizedKey = key.toLowerCase().replace(/ /g, \"_\")\n    const correction = badSpellingMap[normalizedKey]\n    if (correction) {\n      sample[correction] = sample[key]\n      delete sample[key]\n    }\n  }\n  return sample\n}\n\nexport default (csv) => {\n  const json = JAC.fromCSV(csv, { derivePath: () => \"samples.*\" })\n  if (!json.samples) throw new Error(\"No samples\")\n  return {\n    interface: json.interface,\n    taskOutput: json.samples.map((sample) => sample.output),\n    samples: json.samples.map(convertTaskDatumMistakes).map((sample) => {\n      delete sample.output\n      return sample\n    }),\n  }\n}\n","import React, { useState, useEffect } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport S3PathSelector from \"../S3PathSelector\"\nimport getSampleFromUrl from \"../PasteUrlsDialog/get-sample-from-url.js\"\n// import { useAppConfig } from \"../AppConfig\"\nimport useIAMS3API from \"../../utils/auth-handlers/use-iam-s3-api\"\n\nexport const ImportFromS3Dialog = ({ open, onClose, onAddSamples }) => {\n  const { listBuckets, listBucketItemsAt } = useIAMS3API()\n  const [s3Path, setS3Path] = useState(\"\")\n  const [{ options, optionsLoading }, setOptions] = useState({\n    optionsLoading: true,\n  })\n  useEffect(() => {\n    if (!open) return\n    if (!listBuckets) return\n    async function loadS3Path() {\n      if (s3Path === \"\") {\n        setOptions({\n          optionsLoading: false,\n          options: (\n            await listBuckets()\n          ).ListAllMyBucketsResult.Buckets.Bucket.map((b) => ({\n            name: b.Name,\n            type: \"bucket\",\n          })),\n        })\n      } else {\n        setOptions({\n          optionsLoading: false,\n          options: (\n            (await listBucketItemsAt(s3Path)).ListBucketResult.CommonPrefixes ||\n            []\n          ).map((a) => ({\n            name: a.Prefix.split(\"/\").slice(-2).join(\"/\"),\n            type: \"directory\",\n          })),\n        })\n      }\n    }\n    loadS3Path()\n    // eslint-disable-next-line\n  }, [s3Path, listBuckets, listBucketItemsAt, open])\n  if (!open) return null\n  return (\n    <SimpleDialog\n      onClose={onClose}\n      open={open}\n      title=\"Import from S3\"\n      actions={[\n        {\n          onClick: async () => {\n            const bucket = s3Path.match(/s3:\\/\\/([^/]+)/)[1]\n\n            // TODO support more than 1000 file import by using\n            // continuation-token on S3\n            const items = (\n              await listBucketItemsAt(s3Path, { files: true })\n            ).ListBucketResult.Contents.filter(\n              (item) => !item.Key.endsWith(\"/\")\n            )\n              .map((item) => `https://s3.amazonaws.com/${bucket}/${item.Key}`)\n              .map((url) => getSampleFromUrl(url, { returnNulls: true }))\n              .filter(Boolean)\n            onAddSamples(items)\n          },\n          disabled: !s3Path,\n          text: \"Import All Files in Directory\",\n        },\n      ]}\n    >\n      {optionsLoading ? (\n        <Box height={300} width={400} paddingTop={4} textAlign=\"center\">\n          <CircularProgress size={100} />\n        </Box>\n      ) : (\n        <S3PathSelector\n          currentPath={s3Path}\n          options={options || []}\n          onChangePath={(newS3Path) => {\n            setS3Path(newS3Path)\n            setOptions({ optionsLoading: true })\n          }}\n        />\n      )}\n    </SimpleDialog>\n  )\n}\n\nexport default ImportFromS3Dialog\n","import React, { useCallback, useState } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Box from \"@material-ui/core/Box\"\nimport { useDropzone } from \"react-dropzone\"\n\nconst Container = styled(Box)({\n  width: 400,\n  height: 200,\n  padding: 20,\n  border: `2px dotted ${colors.grey[400]}`,\n  textAlign: \"center\",\n  fontSize: 24,\n})\n\nconst FileCounter = styled(Box)({\n  fontSize: 24,\n  color: colors.grey[700],\n  fontWeight: \"bold\",\n})\n\n/*\n  This component allows you to upload multiple files, then reads the files in\n  serial. It's perfect for an uploading process where you don't want to upload one\n  file at a time. It gives a progress bar indicating upload progres.\n*/\n\nexport const MultiFileDrop = ({ loadFile, onComplete }) => {\n  const [totalUploaded, setTotalUploaded] = useState(0)\n  const [errors, setErrors] = useState([])\n  const [{ totalFiles, filesSelected }, setUploadStartState] = useState({\n    filesSelected: false,\n  })\n  const onDrop = useCallback(async (acceptedFiles) => {\n    setUploadStartState({\n      totalFiles: acceptedFiles.length,\n      filesSelected: true,\n    })\n    const errors = []\n    for (const [index, file] of acceptedFiles.entries()) {\n      await loadFile(file).catch((err) => {\n        errors.push(err.toString())\n        setErrors(errors)\n      })\n      setTotalUploaded(index + 1)\n    }\n    onComplete()\n    // eslint-disable-next-line\n  }, [])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  if (!filesSelected) {\n    return (\n      <Container {...getRootProps()}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        )}\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <FileCounter>\n        {totalUploaded} / {totalFiles} Files Processed\n      </FileCounter>\n      {/* TODO progress bar */}\n      <Box\n        maxHeight={100}\n        overflowY=\"auto\"\n        textAlign=\"left\"\n        color=\"red\"\n        fontSize={12}\n      >\n        {errors.map((err, i) => (\n          <div key={i}>{err}</div>\n        ))}\n      </Box>\n    </Container>\n  )\n}\n\nexport default MultiFileDrop\n","import React, { useState, useEffect, useRef } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport S3PathSelector from \"../S3PathSelector\"\nimport getSampleFromUrl from \"../PasteUrlsDialog/get-sample-from-url.js\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport BackIcon from \"@material-ui/icons/KeyboardArrowLeft\"\n// import { useAppConfig } from \"../AppConfig\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport useIAMS3API from \"../../utils/auth-handlers/use-iam-s3-api\"\nimport MultiFileDrop from \"../MultiFileDrop\"\nimport Stepper from \"@material-ui/core/Stepper\"\nimport Step from \"@material-ui/core/Step\"\nimport StepLabel from \"@material-ui/core/StepLabel\"\n\nconst SelectedPath = styled(\"div\")({\n  fontSize: 14,\n  color: colors.grey[700],\n  fontWeight: \"bold\",\n})\n\nexport const UploadToS3Dialog = ({ open, onClose, onAddSamples }) => {\n  const {\n    listBuckets,\n    listBucketItemsAt,\n    putBucketItem,\n    parseS3URI,\n  } = useIAMS3API()\n  const [complete, setComplete] = useState(false)\n  const uploadedPaths = useRef([])\n  const [s3Path, setS3Path] = useState(\"\")\n  const [activeStep, setActiveStep] = useState(0)\n  const [{ options, optionsLoading }, setOptions] = useState({\n    optionsLoading: true,\n  })\n  useEffect(() => {\n    if (!listBuckets) return\n    if (!open) return\n    async function loadS3Path() {\n      if (s3Path === \"\") {\n        setOptions({\n          optionsLoading: false,\n          options: (\n            await listBuckets()\n          ).ListAllMyBucketsResult.Buckets.Bucket.map((b) => ({\n            name: b.Name,\n            type: \"bucket\",\n          })),\n        })\n      } else {\n        setOptions({\n          optionsLoading: false,\n          options: (\n            (await listBucketItemsAt(s3Path)).ListBucketResult.CommonPrefixes ||\n            []\n          ).map((a) => ({\n            name: a.Prefix.split(\"/\").slice(-2).join(\"/\"),\n            type: \"directory\",\n          })),\n        })\n      }\n    }\n    loadS3Path()\n    // eslint-disable-next-line\n  }, [open, s3Path, listBuckets, listBucketItemsAt])\n  if (!open) return null\n  return (\n    <SimpleDialog\n      onClose={onClose}\n      open={open}\n      title=\"Upload to S3\"\n      actions={[\n        activeStep === 0 && {\n          onClick: () => setActiveStep(1),\n          disabled: !s3Path,\n          text: \"Upload to this directory\",\n        },\n        activeStep === 1 && {\n          disabled: !complete,\n          onClick: () => {\n            const samples = uploadedPaths.current\n              .map((url) => getSampleFromUrl(url, { returnNulls: true }))\n              .filter(Boolean)\n            onAddSamples(samples)\n          },\n          text: \"Add Samples\",\n        },\n      ].filter(Boolean)}\n    >\n      <Stepper activeStep={activeStep}>\n        <Step>\n          <StepLabel>Directory to Upload To</StepLabel>\n        </Step>\n        <Step>\n          <StepLabel>Upload Files</StepLabel>\n        </Step>\n      </Stepper>\n      {activeStep === 0 && (\n        <>\n          {optionsLoading ? (\n            <Box height={300} width={400} paddingTop={4} textAlign=\"center\">\n              <CircularProgress size={100} />\n            </Box>\n          ) : (\n            <S3PathSelector\n              currentPath={s3Path}\n              canCreateNew\n              options={options || []}\n              onChangePath={(newS3Path) => {\n                setS3Path(newS3Path)\n                setOptions({ optionsLoading: true })\n              }}\n            />\n          )}\n        </>\n      )}\n      {activeStep === 1 && (\n        <>\n          <Box display=\"flex\" alignItems=\"center\">\n            <IconButton onClick={() => setActiveStep(0)}>\n              <BackIcon />\n            </IconButton>\n            <SelectedPath>Uploading to: {s3Path}</SelectedPath>\n          </Box>\n          <Box>\n            <MultiFileDrop\n              loadFile={async (file) => {\n                const filePath = s3Path + file.name\n                await putBucketItem(filePath, file)\n                const { bucket, path } = parseS3URI(filePath)\n                uploadedPaths.current.push(\n                  `https://s3.amazonaws.com/${bucket}/${path}`\n                )\n              }}\n              onComplete={() => {\n                setComplete(true)\n              }}\n            />\n          </Box>\n        </>\n      )}\n    </SimpleDialog>\n  )\n}\n\nexport default UploadToS3Dialog\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useEventCallback from \"use-event-callback\"\nimport { useDropzone } from \"react-dropzone\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\n\nconst UploadHover = styled(\"div\")({\n  fontSize: 24,\n  color: colors.grey[600],\n  textAlign: \"center\",\n  padding: 48,\n})\n\nconst emptyFunc = () => null\n\nexport default ({ content, onChangeContent, placeholder }) => {\n  const onDrop = useEventCallback((acceptedFiles) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const fileContent = e.target.result\n      onChangeContent(fileContent)\n    }\n    reader.readAsText(acceptedFiles[0])\n  })\n\n  const [lastClickTime, changeLastClickTime] = useState(0)\n  const onClick = useEventCallback((e) => {\n    if (Date.now() - lastClickTime < 400) {\n      getRootProps().onClick(e)\n    }\n    changeLastClickTime(Date.now())\n  })\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div {...getRootProps()} onClick={emptyFunc}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <UploadHover>Drop the text or csv file here.</UploadHover>\n      ) : (\n        <TextArea\n          value={content}\n          onChange={(e, v) => onChangeContent(e.target.value)}\n          onClick={onClick}\n          placeholder={placeholder}\n        />\n      )}\n    </div>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport TextAreaWithUpload from \"../TextAreaWithUpload\"\n\nconst ImportTextSnippetsDialog = ({ open, onClose, onAddSamples }) => {\n  const [content, changeContent] = useState(\"\")\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Import Text Snippets\"\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            onAddSamples(\n              content\n                .split(\"\\n\")\n                .map((l) => l.trim())\n                .filter(Boolean)\n                .map((s) => ({ document: s }))\n            )\n          },\n        },\n      ]}\n    >\n      <TextAreaWithUpload\n        content={content}\n        onChangeContent={changeContent}\n        placeholder={\n          \"Paste Snippets here\\nOne snippet per line.\\n\\nYou can also drag a text or csv file here (double click to open file dialog)\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n\nexport default ImportTextSnippetsDialog\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Button from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { useTranslation } from \"react-i18next\"\n\nconst ExplainText = styled(\"div\")({\n  marginTop: 8,\n  marginBottom: 8,\n})\nconst GoogleDriveScreenshot = styled(\"img\")({\n  width: \"100%\",\n  boxSizing: \"border-box\",\n})\n\n// Example for Google OAuth\n// https://developers.google.com/drive/api/v3/picker\n\nconst credentials = {\n  web: {\n    client_id:\n      process.env.REACT_APP_GOOGLE_DRIVE_CLIENT_ID ||\n      \"294393711342-h5aqqt3pvn8othepvsmi16iakdhi7m6j.apps.googleusercontent.com\",\n    app_id: process.env.REACT_APP_GOOGLE_DRIVE_APP_ID || \"294393711342\",\n    developer_key:\n      process.env.REACT_APP_GOOGLE_DRIVE_DEVELOPER_KEY ||\n      \"AIzaSyCoNoDnfzDBSXpt84Q75LU9UMTzvyLkRhg\",\n  },\n}\n\nconst scope = \"https://www.googleapis.com/auth/drive.readonly\"\n\nexport default ({ open, onClose, onAddSamples }) => {\n  const { t } = useTranslation()\n  const [googleScriptLoaded, setGoogleScriptLoaded] = useState(false)\n  const [pickerApiLoaded, setPickerApiLoaded] = useState(false)\n  const [oauthToken, setOAuthToken] = useState(null)\n  const [userSelectedItemsFromDrive, setUserSelectedItemsFromDrive] = useState(\n    []\n  )\n  const [isPickerOpen, setIsPickerOpen] = useState(false)\n\n  useEffect(() => {\n    const scriptElement = document.createElement(\"script\")\n    scriptElement.src = \"https://apis.google.com/js/api.js\"\n    scriptElement.async = true\n\n    scriptElement.onload = () => {\n      setGoogleScriptLoaded(true)\n    }\n\n    document.body.appendChild(scriptElement)\n    return () => {\n      scriptElement.remove()\n    }\n  }, [])\n\n  const googlePickerActionCallback = useCallback(\n    (data) => {\n      if (data.action === window.google.picker.Action.PICKED) {\n        setUserSelectedItemsFromDrive(\n          data.docs.map((googleDriveDocument) => ({\n            url: googleDriveDocument.url,\n            mimeType: googleDriveDocument.mimeType,\n            name: googleDriveDocument.name,\n            id: googleDriveDocument.id,\n          }))\n        )\n\n        setIsPickerOpen(false)\n      } else if (data.action === \"cancel\") {\n        onClose()\n      }\n    },\n    [onClose]\n  )\n\n  const createPicker = useCallback(() => {\n    if (pickerApiLoaded && oauthToken) {\n      const view = new window.google.picker.DocsView(\n        window.google.picker.ViewId.Docs,\n        window.google.picker.ViewId.FOLDERS\n      )\n        .setIncludeFolders(true)\n        .setSelectFolderEnabled(true)\n\n      const picker = new window.google.picker.PickerBuilder()\n        .enableFeature(window.google.picker.Feature.NAV_HIDDEN)\n        .enableFeature(window.google.picker.Feature.MINE_ONLY)\n        .enableFeature(window.google.picker.Feature.MULTISELECT_ENABLED)\n        .setAppId(credentials.web.app_id)\n        .setOAuthToken(oauthToken)\n        .addView(view)\n        .addView(window.google.picker.ViewId.DOCS)\n        .setDeveloperKey(credentials.web.developer_key)\n        .setCallback(googlePickerActionCallback)\n        .build()\n      picker.setVisible(true)\n      setIsPickerOpen(true)\n    }\n  }, [googlePickerActionCallback, oauthToken, pickerApiLoaded])\n\n  useEffect(() => {\n    createPicker()\n  }, [pickerApiLoaded, oauthToken, createPicker])\n\n  const handleAuthenticationResponse = useCallback(\n    (authenticationResponse) => {\n      if (authenticationResponse && !authenticationResponse.error) {\n        setOAuthToken(authenticationResponse.access_token)\n        createPicker()\n      }\n    },\n    [createPicker]\n  )\n\n  const onAuthApiLoad = useCallback(() => {\n    window.gapi.auth.authorize(\n      {\n        client_id: credentials.web.client_id,\n        scope: scope,\n        immediate: false,\n      },\n      handleAuthenticationResponse\n    )\n  }, [handleAuthenticationResponse])\n\n  const onPickerApiLoad = useCallback(() => {\n    setPickerApiLoaded(true)\n    createPicker()\n  }, [createPicker])\n\n  const onLoadPicker = useCallback(() => {\n    if (googleScriptLoaded === true) {\n      window.gapi.load(\"auth\", { callback: onAuthApiLoad })\n      window.gapi.load(\"picker\", { callback: onPickerApiLoad })\n    }\n  }, [googleScriptLoaded, onAuthApiLoad, onPickerApiLoad])\n\n  const onAddSamplesClicked = () => {\n    const samples = []\n    for (const item of userSelectedItemsFromDrive) {\n      if (item.mimeType.includes(\"image/\")) {\n        samples.push({ imageUrl: `https://drive.google.com/uc?id=${item.id}` })\n      } else if (item.mimeType.includes(\"video/\")) {\n        samples.push({ videoUrl: `https://drive.google.com/uc?id=${item.id}` })\n      }\n    }\n\n    onAddSamples(samples)\n  }\n\n  useEffect(() => {\n    if (open) {\n      onLoadPicker()\n    }\n  }, [open, googleScriptLoaded, onLoadPicker])\n\n  return (\n    <SimpleDialog\n      open={open && !isPickerOpen}\n      onClose={onClose}\n      title=\"Import from Google Drive\"\n      actions={[\n        userSelectedItemsFromDrive &&\n          userSelectedItemsFromDrive.length > 0 && {\n            text: `Add ${userSelectedItemsFromDrive.length} Samples`,\n            onClick: onAddSamplesClicked,\n          },\n      ].filter(Boolean)}\n    >\n      <Button variant=\"outlined\" onClick={onLoadPicker}>\n        {t(\"reopen-google-drive-picker\")}\n      </Button>\n      <ExplainText>\n        {t(\"import-from-google-drive-explanation-text\")}.{\" \"}\n        <b>{t(\"import-from-google-drive-explanation-bold-text\")}!</b>\n      </ExplainText>\n      <GoogleDriveScreenshot\n        src={\n          \"https://s3.amazonaws.com/asset.workaround.online/google-share-screenshot.png\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport TextAreaWithUpload from \"../TextAreaWithUpload\"\nimport * as colors from \"@material-ui/core/colors\"\nimport fromUDTCSV from \"../../utils/from-udt-csv.js\"\n\nconst InfoText = styled(\"div\")({\n  fontFamily: \"Inter\",\n  marginBottom: 20,\n  \"& a\": {\n    color: colors.blue[500],\n  },\n})\n\nconst Error = styled(\"div\")({\n  color: colors.red[500],\n  whiteSpace: \"pre-wrap\",\n  marginBottom: 20,\n})\n\nconst ImportUDTFileDialog = ({ open, onClose, onAddSamples }) => {\n  const [error, changeError] = useState(null)\n  const [content, setContent] = useState(\"\")\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Import JSON/CSV Samples\"\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            changeError(null)\n            let samples, taskOutput\n            try {\n              ;[samples, taskOutput] = JSON.parse(content).samples\n            } catch (e1) {\n              try {\n                const udt = fromUDTCSV(content)\n                ;({ samples, taskOutput } = udt)\n              } catch (e2) {\n                console.log({\n                  message: \"CSV/JSON Error Stacks\",\n                  jsonError: e1.stack,\n                  csvError: e2.stack,\n                })\n                changeError(\n                  `JSON did not parse. CSV did not parse.\\n\\nJSON Error: ${e1.toString()}\\nCSV Error: ${e2.toString()}`\n                )\n                return\n              }\n            }\n            if (!samples || samples.length === 0) {\n              changeError(\"No task data found\")\n              return\n            }\n            onAddSamples(samples, taskOutput)\n          },\n        },\n      ]}\n    >\n      <InfoText>\n        See the{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format\">\n          UDT JSON format\n        </a>{\" \"}\n        or the{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format\">\n          UDT CSV format\n        </a>{\" \"}\n        for formatting details. Or take a look at a{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format/blob/master/SAMPLE.udt.json\">\n          sample JSON\n        </a>{\" \"}\n        or{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format/blob/master/SAMPLE.udt.csv\">\n          sample CSV\n        </a>{\" \"}\n        file.\n      </InfoText>\n      <Error>{error}</Error>\n      <TextAreaWithUpload\n        content={content}\n        onChangeContent={setContent}\n        placeholder={\n          \"Paste CSV/JSON here. The file should be in the UDT JSON/CSV format.\\n\\nYou can also drag a json or csv file here (double click to open file dialog)\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n\nexport default ImportUDTFileDialog\n","// @flow weak\n\nimport React from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport { useTranslation } from \"react-i18next\"\n\nconst datasets = [\n  { name: \"Elon Musk Tweets\", type: \"text\", size: 2800 },\n  { name: \"Cats\", type: \"image\", size: 360 },\n  { name: \"VR Hand Pinching\", type: \"image\", size: 20517 },\n  { name: \"AI Generated Faces\", type: \"image\", size: 1999 },\n  { name: \"Text to Speech Audio\", type: \"audio\", size: 200 },\n]\n\nasync function getSamples(dataset) {\n  const datasetName =\n    dataset.name.toLowerCase().replace(/ /g, \"_\") + \".udt.json\"\n\n  const datasetUrl = `https://s3.amazonaws.com/datasets.workaround.online/${datasetName}`\n\n  return await fetch(datasetUrl)\n    .then((r) => r.json())\n    .then((r) => r.samples || r.taskData)\n}\n\nconst StyledButton = styled(Button)({})\n\nconst ImportToyDatasetDialog = ({ onClose, onAddSamples, open }) => {\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog onClose={onClose} open={open} title=\"Import Toy Dataset\">\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t(\"name\")}</TableCell>\n              <TableCell>{t(\"type\")}</TableCell>\n              <TableCell>{t(\"size\")}</TableCell>\n              <TableCell>{t(\"actions\")}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {datasets.map((dataset) => (\n              <TableRow key={dataset.name}>\n                <TableCell>{dataset.name}</TableCell>\n                <TableCell>{dataset.type}</TableCell>\n                <TableCell>{dataset.size}</TableCell>\n                <TableCell>\n                  <StyledButton\n                    data-import-toy-dataset-name={dataset.name}\n                    onClick={async () => {\n                      onAddSamples(await getSamples(dataset))\n                    }}\n                    variant=\"outlined\"\n                  >\n                    {t(\"import\")}\n                  </StyledButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </SimpleDialog>\n  )\n}\n\nexport default ImportToyDatasetDialog\n","const idify = (s) =>\n  s\n    .toLowerCase()\n    .replace(/[^a-z0-9]/g, \"_\")\n    .replace(/_+/g, \"_\")\n\nexport default ({\n  youtubeUrl,\n  title: videoTitle,\n  remote,\n  videoQuality,\n  downloadPath,\n  onProgress,\n  onComplete,\n  onChangeOverallProgress,\n}) => {\n  //let starttime = Date.now()\n\n  const ytdl = remote.require(\"ytdl-core\")\n  const path = remote.require(\"path\")\n\n  const videoName = videoQuality.includes(\"audio\")\n    ? `${idify(videoTitle) + \".mp3\"}`\n    : `${idify(videoTitle) + \".mp4\"}`\n\n  const fullVideoPath = path.join(downloadPath, videoName)\n  const writableVideoFile = remote\n    .require(\"fs\")\n    .createWriteStream(fullVideoPath)\n\n  const videoFormat = videoName.endsWith(\".mp3\") ? \"audio/mp3\" : \"video/mp4\"\n\n  const youtubeVideoWithOptions = ytdl(youtubeUrl, {\n    format: videoFormat,\n    quality: videoQuality !== null ? videoQuality : \"highest\",\n  })\n\n  youtubeVideoWithOptions.pipe(writableVideoFile)\n\n  /*youtubeVideoWithOptions.once(\"response\", () => {\n    starttime = Date.now()\n  })*/\n\n  youtubeVideoWithOptions.on(\"progress\", (chunkLength, downloaded, total) => {\n    const percent = downloaded / total\n    // const downloadedMinutes = (Date.now() - starttime) / 1000 / 60\n\n    // const downloadedPercentage = (percent * 100).toFixed(2)\n    // const downloadedSize = (downloaded / 1024 / 1024).toFixed(2)\n    // const downloadedMBs = (\n    //   downloaded /\n    //   1024 /\n    //   1024\n    // ).toFixed(2)\n    // const totalSize = (total / 1024 / 1024).toFixed(2)\n    // const informationText = `${downloadedPercentage}% downloaded (${downloadedMBs}MB of ${totalSize}MB)\\nestimated time left: ${(downloadedMinutes / percent -downloadedMinutes).toFixed(2)}minutes`\n\n    onProgress({\n      progress: percent * 100,\n    })\n\n    onChangeOverallProgress(percent * 100)\n  })\n\n  youtubeVideoWithOptions.on(\"end\", () => onComplete(fullVideoPath))\n\n  return {\n    cancel: () => {\n      youtubeVideoWithOptions.destroy()\n    },\n  }\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  height: 36,\n  width: \"100%\",\n  boxSizing: \"border-box\",\n  position: \"relative\",\n  marginTop: 8,\n  marginBottom: 8,\n  backgroundColor: colors.blue[50],\n})\nconst Text = styled(\"div\")({\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  paddingTop: 4,\n  fontSize: 18,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n})\nconst Bar = styled(\"div\")({\n  position: \"absolute\",\n  left: 0,\n  bottom: 0,\n  top: 0,\n  backgroundColor: colors.blue[300],\n})\n\nexport default ({ progress }) => {\n  return (\n    <Container>\n      <Bar style={{ right: 100 - progress + \"%\" }} />\n      <Text>{Math.floor(progress)}%</Text>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ProgressBar from \"../ProgressBar\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\n\nconst ProgressContainer = styled(\"div\")({\n  width: \"100%\",\n  height: \"100%\",\n})\n\nconst TotalPercentageWrapper = styled(\"div\")({\n  flexDirection: \"row\",\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n})\n\nconst Progress = ({ unitProgress, overallProgress, completedVideoTitles }) => {\n  return (\n    <ProgressContainer>\n      <ProgressBar progress={overallProgress} />\n      <ProgressBar progress={unitProgress.progress} />\n\n      <h3>Downloading: {unitProgress.title}</h3>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <TotalPercentageWrapper>\n            <h3>Downloaded Video Titles</h3>\n          </TotalPercentageWrapper>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <ul>\n            {completedVideoTitles && completedVideoTitles.length > 0\n              ? completedVideoTitles\n              : null}\n          </ul>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </ProgressContainer>\n  )\n}\n\nexport default Progress\n","const getYoutubeVideoInformation = async (\n  remote,\n  splittedURLsArray,\n  progressCallback = () => null\n) => {\n  const ytdl = remote.require(\"ytdl-core\")\n  const checkedVideos = []\n  if (splittedURLsArray.length > 0) {\n    for (let i = 0; i < splittedURLsArray.length; i++) {\n      const url = splittedURLsArray[i]\n      const video = await new Promise((resolve, reject) => {\n        ytdl.getBasicInfo(url, (err, info) => {\n          if (info && !err) {\n            resolve({\n              url,\n              title: info.title,\n            })\n          } else {\n            const errorText = `Error with video at \"${url}\"\\n\\n${err.toString()}`\n            reject(new Error(errorText))\n          }\n        })\n      })\n      checkedVideos.push(video)\n      progressCallback({\n        progress: (i / (splittedURLsArray.length - 1)) * 100,\n        text: \"Inspecting Video Information...\",\n      })\n    }\n  }\n  return checkedVideos\n}\n\nexport default getYoutubeVideoInformation\n","const splitURLsFromTextArea = (stringURLs) => {\n  const urlsHasHTTPS = []\n  const splittedURLsByNewLines = stringURLs.split(\"\\n\")\n  for (const url of splittedURLsByNewLines) {\n    if (url.includes(\"https://\")) {\n      urlsHasHTTPS.push(url)\n    }\n  }\n  return urlsHasHTTPS\n}\n\nexport default splitURLsFromTextArea\n","import React, { useState, useRef } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport Select from \"react-select\"\nimport downloadYoutubeVideo from \"./download-youtube-video\"\nimport Progress from \"./progress\"\nimport getYoutubeVideoInformation from \"./get-youtube-video-information\"\nimport splitURLsFromTextArea from \"./split-urls-from-text-area\"\nimport { useTranslation } from \"react-i18next\"\n\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\n\nconst SelectVideoQualityHeader = styled(\"h3\")({\n  lineHeight: 0,\n  textAlign: \"center\",\n})\n\nconst SelectVideoQuality = styled(\"div\")({\n  width: \"100%\",\n  marginBottom: 8,\n  paddingBottom: 4,\n})\n\nconst ErrorText = styled(\"pre\")({\n  whiteSpace: \"pre-wrap\",\n  color: \"#f00\",\n})\n\nconst LoadingText = styled(\"h2\")({\n  width: \"100%\",\n  height: \"100%\",\n  margin: \"auto auto\",\n  textAlign: \"center\",\n})\n\nconst CompletedVideoTitle = styled(\"h3\")({\n  textDecoration: \"line-through\",\n  lineHeight: 0,\n})\n\nconst qualityOptions = [\n  { value: \"136\", label: \"720p\" },\n  { value: \"135\", label: \"480p\" },\n  { value: \"lowestvideo\", label: \"Lowest Video Only\" },\n  // TODO these did not seem to work in a local test (missing video)\n  // { value: \"lowest\", label: \"lowest\" },\n  // { value: \"highest\", label: \"Highest\" },\n  { value: \"highestvideo\", label: \"Highest Video Only\" },\n  { value: \"lowestaudio\", label: \"Lowest Audio Only\" },\n  { value: \"highestaudio\", label: \"Highest Audio Only\" },\n]\n\nconst ImportFromYoutubeUrls = ({ open, onClose, onAddSamples }) => {\n  const { remote } = useElectron() || {}\n  const { t } = useTranslation()\n\n  const [urlsFromTextArea, setUrlsFromTextArea] = useState([])\n  const [videoQuality, setVideoQuality] = useState(qualityOptions[0].value)\n  const [error, setError] = useState(null)\n\n  const [unitProgress, setUnitProgress] = useState({ progress: 0 })\n  const [overallProgress, setOverallProgress] = useState(0)\n  const [isDownloading, setIsDownloading] = useState(false)\n  const [completedVideoTitles, setCompletedVideoTitles] = useState(null)\n\n  const cancelRef = useRef()\n\n  const setDefaultState = async () => {\n    setUnitProgress({ progress: 0, title: \"\" })\n    setOverallProgress(0)\n    setIsDownloading(false)\n  }\n\n  const closeDialog = async () => {\n    await setDefaultState()\n    onClose()\n  }\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={closeDialog}\n      title=\"Import from Youtube URLs\"\n      actions={[\n        {\n          text: \"Cancel Downloads\",\n          disabled: !isDownloading,\n          onClick: () => {\n            cancelRef.current()\n            setIsDownloading(false)\n          },\n        },\n        {\n          text: \"Download Youtube URLs\",\n          onClick: async () => {\n            setIsDownloading(true)\n            const { canceled, filePaths } = await remote.dialog.showOpenDialog({\n              title: \"Directory to download files to\",\n              buttonLabel: \"Download Files Here\",\n              properties: [\n                \"createDirectory\",\n                \"openDirectory\",\n                \"promptToCreate\",\n              ],\n            })\n\n            if (canceled || !filePaths) return setIsDownloading(false)\n\n            const downloadPath = filePaths[0]\n\n            const youtubeVideoInfos = await getYoutubeVideoInformation(\n              remote,\n              urlsFromTextArea,\n              ({ progress, text }) => {\n                setUnitProgress({ progress })\n              }\n            ).catch((errorMessage) => {\n              console.error(errorMessage.stack)\n              setError(errorMessage.toString())\n              return null\n            })\n            if (!youtubeVideoInfos) return setIsDownloading(false)\n\n            const completedVideoPaths = []\n            const completedVideoTitlesArray = []\n\n            const youtubeVideosCount = youtubeVideoInfos.length\n\n            for (let i = 0; i < youtubeVideosCount; i++) {\n              const youtubeVideoInfo = youtubeVideoInfos[i]\n              const videoPath = await new Promise((resolve, reject) => {\n                const { cancel } = downloadYoutubeVideo({\n                  remote,\n                  downloadPath,\n                  youtubeUrl: youtubeVideoInfo.url,\n                  title: youtubeVideoInfo.title,\n                  videoQuality,\n                  onChangeOverallProgress: (currentProgress) =>\n                    setOverallProgress(\n                      ((completedVideoTitlesArray.length * 100 +\n                        currentProgress) /\n                        (youtubeVideosCount * 100)) *\n                        100\n                    ),\n                  onProgress: ({ progress, text }) =>\n                    setUnitProgress({\n                      progress,\n                      title: youtubeVideoInfo.title,\n                      progressText: text,\n                    }),\n                  onComplete: (filePath) => resolve(filePath),\n                })\n                cancelRef.current = cancel\n              })\n\n              completedVideoTitlesArray.push(\n                <li key={i + youtubeVideoInfo.title}>\n                  <CompletedVideoTitle>\n                    {youtubeVideoInfo.title}\n                  </CompletedVideoTitle>\n                </li>\n              )\n              setCompletedVideoTitles(completedVideoTitlesArray)\n\n              completedVideoPaths.push(videoPath)\n            }\n\n            onAddSamples(\n              completedVideoPaths.map((videoPath) => ({\n                videoUrl: `file://${videoPath}`,\n              }))\n            )\n\n            setIsDownloading(false)\n          },\n          disabled: isDownloading,\n        },\n      ]}\n    >\n      {error && <ErrorText>{error}</ErrorText>}\n      {isDownloading &&\n      ((unitProgress && unitProgress.progress && unitProgress.progress > 0) ||\n        (completedVideoTitles &&\n          Array.isArray(completedVideoTitles) === true &&\n          completedVideoTitles.length > 0)) ? (\n        <Progress\n          unitProgress={unitProgress}\n          completedVideoTitles={completedVideoTitles}\n          overallProgress={overallProgress}\n        />\n      ) : isDownloading === true ? (\n        <LoadingText>Information is Loading</LoadingText>\n      ) : null}\n      {!isDownloading && (\n        <React.Fragment>\n          <SelectVideoQuality>\n            <SelectVideoQualityHeader>\n              {t(\"select-video-quality\")}\n            </SelectVideoQualityHeader>\n            <Select\n              defaultValue={qualityOptions[0]}\n              options={qualityOptions}\n              onChange={({ value }) => setVideoQuality(value)}\n            />\n          </SelectVideoQuality>\n          <TextArea\n            onChange={(e, v) => {\n              setUrlsFromTextArea(splitURLsFromTextArea(e.target.value))\n            }}\n            placeholder={\"Paste Youtube URLs here\\nOne URL per line\"}\n          />\n        </React.Fragment>\n      )}\n    </SimpleDialog>\n  )\n}\n\nexport default ImportFromYoutubeUrls\n","// @flow weak\n\nconst convertToSamplesObject = (fp) => {\n  const ext = fp.split(\".\").slice(-1)[0].toLowerCase()\n  if ([\"png\", \"jpg\", \"jpeg\"].includes(ext)) {\n    return { imageUrl: `file://${fp}` }\n  }\n  if ([\"pdf\"].includes(ext)) {\n    return { pdfUrl: `file://${fp}` }\n  }\n  if ([\"mp4\", \"webm\", \"mkv\"].includes(ext)) {\n    return { videoUrl: `file://${fp}` }\n  }\n  return null\n}\n\nasync function promptAndGetSamplesLocalDirectory({ electron }) {\n  const {\n    canceled,\n    filePaths: dirPaths,\n  } = await electron.remote.dialog.showOpenDialog({\n    title: \"Select Directory to Import Files\",\n    properties: [\"openDirectory\"],\n  })\n  if (canceled) return\n  const dirPath = dirPaths[0]\n  const fs = electron.remote.require(\"fs\")\n  const path = electron.remote.require(\"path\")\n  return (await fs.promises.readdir(dirPath))\n    .filter((fn) => fn.includes(\".\"))\n    .map((fileName) => path.join(dirPath, fileName))\n    .map(convertToSamplesObject)\n    .filter(Boolean)\n}\n\nexport default promptAndGetSamplesLocalDirectory\n","// @flow weak\n\nimport React, { useState, createContext } from \"react\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport AssignmentReturnedIcon from \"@material-ui/icons/AssignmentReturned\"\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\"\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\"\nimport DescriptionIcon from \"@material-ui/icons/Description\"\nimport PetsIcon from \"@material-ui/icons/Pets\"\nimport * as colors from \"@material-ui/core/colors\"\nimport PasteUrlsDialog from \"../PasteUrlsDialog\"\nimport ImportFromCognitoS3Dialog from \"../ImportFromCognitoS3Dialog\"\nimport ImportFromS3Dialog from \"../ImportFromS3Dialog\"\nimport UploadToS3Dialog from \"../UploadToS3Dialog\"\nimport ImportTextSnippetsDialog from \"../ImportTextSnippetsDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport classnames from \"classnames\"\nimport S3Icon from \"./S3Icon\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { setIn } from \"seamless-immutable\"\nimport useEventCallback from \"use-event-callback\"\nimport ImportFromGoogleDriveDialog from \"../ImportFromGoogleDriveDialog\"\nimport ImportUDTFileDialog from \"../ImportUDTFileDialog\"\nimport ImportToyDataset from \"../ImportToyDatasetDialog\"\nimport ImportFromYoutubeUrls from \"../ImportFromYoutubeUrls\"\nimport { FaGoogleDrive, FaYoutube } from \"react-icons/fa\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport promptAndGetSamplesFromLocalDirectory from \"./prompt-and-get-samples-from-local-directory.js\"\nimport { useTranslation } from \"react-i18next\"\nimport useAuth from \"../../utils/auth-handlers/use-auth.js\"\nimport { useAppConfig } from \"../AppConfig\"\n\nconst ButtonBase = styled(MuiButton)({\n  width: 240,\n  height: 140,\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  \"&.disabled\": {\n    backgroundColor: colors.grey[200],\n  },\n  margin: 8,\n  \"& .icon\": {\n    width: 48,\n    height: 48,\n    color: colors.grey[600],\n    \"&.disabled\": {\n      color: colors.grey[400],\n    },\n  },\n})\n\nconst DesktopOnlyText = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  \"&.disabled\": {\n    color: colors.grey[500],\n  },\n})\n\nconst SelectDialogContext = createContext()\n\nconst Button = ({\n  Icon,\n  desktopOnly,\n  isDesktop,\n  children,\n  dialog,\n  authConfiguredOnly,\n  signedInOnly,\n  disabledReason,\n  user,\n  onlySupportType,\n  type,\n}) => {\n  const posthog = usePosthog()\n\n  const { isLoggedIn, authConfig } = useAuth()\n\n  const isDisabled = () => {\n    if (disabledReason) {\n      return { disabled: true, disabledText: disabledReason }\n    } else if (desktopOnly) {\n      return { disabled: !isDesktop, disabledText: \"DESKTOP ONLY\" }\n    } else if (onlySupportType && !onlySupportType.includes(type)) {\n      return { disabled: true, disabledText: `DOESN'T SUPPORT THIS INTERFACE` }\n    } else if (authConfiguredOnly && !isLoggedIn) {\n      if (signedInOnly) {\n        return { disabled: isEmpty(user), disabledText: \"MUST BE SIGNED IN\" }\n      } else {\n        return {\n          disabled: isEmpty(authConfig),\n          disabledText: \"AUTH MUST BE CONFIGURED\",\n        }\n      }\n    } else {\n      return { disabled: false, disabledText: \"\" }\n    }\n  }\n\n  const { disabled, disabledText } = isDisabled()\n\n  return (\n    <SelectDialogContext.Consumer>\n      {({ onChangeDialog }) => {\n        return (\n          <ButtonBase\n            onClick={() => {\n              posthog.capture(\"import_button_clicked\", {\n                import_button: dialog,\n              })\n              onChangeDialog(dialog)\n            }}\n            className={classnames({ disabled })}\n            variant=\"outlined\"\n            disabled={disabled}\n          >\n            <div>\n              <Icon className={classnames(\"icon\", { disabled })} />\n              <div>{children}</div>\n              {disabled && (\n                <DesktopOnlyText className={classnames({ disabled })}>\n                  {disabledText}\n                </DesktopOnlyText>\n              )}\n            </div>\n          </ButtonBase>\n        )\n      }}\n    </SelectDialogContext.Consumer>\n  )\n}\n\nexport default ({\n  // TODO remove file, onChangeFile\n  file,\n  onChangeFile,\n\n  dataset,\n  onChangeDataset,\n  isDesktop,\n  authConfig,\n  user,\n}) => {\n  const { t } = useTranslation()\n  const [selectedDialog, changeDialog] = useState()\n  const electron = useElectron()\n  const { fromConfig } = useAppConfig()\n  const onChangeDialog = async (dialog) => {\n    switch (dialog) {\n      case \"upload-directory\": {\n        if (!electron) return\n        const localSamples = await promptAndGetSamplesFromLocalDirectory({\n          electron,\n        })\n\n        if (typeof localSamples === \"undefined\") {\n          return\n        }\n\n        onChangeDataset(\n          setIn(\n            dataset,\n            [\"samples\"],\n            (dataset.samples || []).concat(localSamples)\n          ),\n          true\n        )\n        return\n      }\n      default: {\n        return changeDialog(dialog)\n      }\n    }\n  }\n\n  const closeDialog = () => changeDialog(null)\n\n  const onAddSamples = useEventCallback(async (samplesToAdd) => {\n    onChangeDataset(\n      setIn(dataset, [\"samples\"], (dataset.samples || []).concat(samplesToAdd))\n    )\n    closeDialog()\n  })\n\n  const onAddSamplesAsToyDataset = useEventCallback(async (samplesToAdd) => {\n    onChangeDataset(\n      setIn(\n        dataset,\n        [\"samples\"],\n        (dataset.samples || []).concat(samplesToAdd)\n      ).setIn([\"usedToyDataset\"], true)\n    )\n    closeDialog()\n  })\n\n  return (\n    <SelectDialogContext.Provider value={{ onChangeDialog }}>\n      <div>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"paste-image-urls\"\n          Icon={AssignmentReturnedIcon}\n          authConfig={authConfig}\n          signedInOnly={false}\n          user={user}\n        >\n          {t(\"paste-urls\")}\n        </Button>\n        <Button\n          desktopOnly\n          isDesktop={isDesktop}\n          dialog=\"upload-directory\"\n          Icon={CreateNewFolderIcon}\n          authConfig={authConfig}\n          signedInOnly={false}\n          user={user}\n        >\n          {t(\"files-from-directory\")}\n        </Button>\n        <Button\n          dialog=\"import-text-snippets\"\n          Icon={TextFieldsIcon}\n          onlySupportType={[\n            \"text_entity_recognition\",\n            \"text_classification\",\n            \"text_entity_relations\",\n          ]}\n          type={dataset.interface.type}\n        >\n          {t(\"import-text-snippets\")}\n        </Button>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"import-toy-dataset\"\n          Icon={PetsIcon}\n        >\n          {t(\"import-toy-dataset\")}\n        </Button>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"youtube-urls\"\n          Icon={FaYoutube}\n          desktopOnly\n        >\n          {t(\"import-from\")} Youtube URLs\n        </Button>\n        <Button\n          Icon={S3Icon}\n          dialog=\"import-from-s3\"\n          disabledReason={\n            fromConfig(\"auth.s3iam.access_key_id\") ? null : \"NEED AWS IAM AUTH\"\n          }\n        >\n          {t(\"import-from-s3\")}\n        </Button>\n        <Button\n          Icon={S3Icon}\n          dialog=\"upload-to-s3\"\n          disabledReason={\n            fromConfig(\"auth.s3iam.access_key_id\") ? null : \"NEED AWS IAM AUTH\"\n          }\n        >\n          {t(\"upload-to-s3\")}\n        </Button>\n        {file && (\n          <Button\n            isDesktop={isDesktop}\n            dialog=\"import-from-cognito-s3\"\n            Icon={S3Icon}\n            authConfiguredOnly={true}\n            signedInOnly={true}\n            user={user}\n          >\n            {t(\"import-from-cognito-s3\")}\n          </Button>\n        )}\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"google-drive-file-picker\"\n          Icon={FaGoogleDrive}\n          onAddSamples={onAddSamples}\n        >\n          {t(\"import-from\")} Google Drive\n        </Button>\n        <Button dialog=\"import-csv-json\" Icon={DescriptionIcon}>\n          {t(\"import-from\")} CSV / JSON\n        </Button>\n        <ImportTextSnippetsDialog\n          open={selectedDialog === \"import-text-snippets\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <PasteUrlsDialog\n          open={selectedDialog === \"paste-image-urls\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <ImportFromS3Dialog\n          open={selectedDialog === \"import-from-s3\"}\n          onChangeFile={onChangeFile}\n          onClose={closeDialog}\n          user={user}\n          onAddSamples={onAddSamples}\n        />\n        <UploadToS3Dialog\n          open={selectedDialog === \"upload-to-s3\"}\n          onChangeFile={onChangeFile}\n          onClose={closeDialog}\n          user={user}\n          onAddSamples={onAddSamples}\n        />\n        {file && (\n          <ImportFromCognitoS3Dialog\n            file={file}\n            open={selectedDialog === \"import-from-cognito-s3\"}\n            onChangeFile={onChangeFile}\n            onClose={closeDialog}\n            user={user}\n            onAddSamples={onAddSamples}\n          />\n        )}\n        <ImportFromGoogleDriveDialog\n          open={selectedDialog === \"google-drive-file-picker\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <ImportToyDataset\n          open={selectedDialog === \"import-toy-dataset\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamplesAsToyDataset}\n        />\n        <ImportFromYoutubeUrls\n          open={selectedDialog === \"youtube-urls\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <ImportUDTFileDialog\n          open={selectedDialog === \"import-csv-json\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n      </div>\n    </SelectDialogContext.Provider>\n  )\n}\n","// @flow weak\n\nimport React from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Box from \"@material-ui/core/Box\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport immutable from \"seamless-immutable\"\nimport { useTranslation } from \"react-i18next\"\n\nconst Code = styled(\"pre\")({\n  fontSize: 8,\n})\n\nconst StyledExpansionPanel = styled(ExpansionPanel)({\n  backgroundColor: colors.grey[100],\n  border: `1px solid ${colors.grey[500]}`,\n  marginTop: 16,\n  marginBottom: 16,\n})\n\nconst StyledExpansionPanelSummary = styled(ExpansionPanelSummary)({\n  fontWeight: \"bold\",\n})\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Transform Video Keyframes\"\n      actions={[\n        {\n          text: \"Transform Video Keyframes\",\n          disabled: !dataset.samples,\n          onClick: () => {\n            const samples = dataset.samples.flatMap((item, index) => {\n              if (!item.videoUrl) return { data: item, output: item.annotation }\n              if (item.videoUrl && !item.videoFrameAt) {\n                if (!item.annotation) return []\n                if (!item.annotation.keyframes) return []\n                const { keyframes } = item[index].annotation\n                return Object.keys(keyframes).map((kf) => ({\n                  videoUrl: item.videoUrl,\n                  videoFrameAt: parseInt(kf),\n                  annotation: keyframes[kf].regions || [],\n                }))\n              }\n            })\n\n            onChangeDataset(\n              immutable(dataset)\n                .setIn(\n                  [\"samples\"],\n                  samples.map((s) => s.data)\n                )\n                .setIn([\"interface\", \"type\"], \"image_segmentation\")\n            )\n          },\n        },\n      ]}\n    >\n      {t(\"transform-video-keyframes-dialog-explanation-text\")}\n      {!dataset.samples && (\n        <b>\n          <br />\n          <br />\n          {t(\"transform-video-keyframes-dialog-explanation-warning\")}\n        </b>\n      )}\n      <StyledExpansionPanel>\n        <StyledExpansionPanelSummary>Details</StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Box display=\"flex\">\n            <Box>\n              <Code>\n                {`{\n  \"interface\": { \"type\": \"video_segmentation\" },\n  samples: [\n    {\n      videoUrl: \"https://example.com/video1.mp4\"\n    }\n  ],\n  taskOutput: [\n    {\n      keyframes: {\n        \"0\": { /* labels */ },\n        \"1000\": { /* labels */ },\n        \"2000\": { /* labels */ }\n      }\n    }\n  ]\n}`}\n              </Code>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n              <ArrowForwardIcon\n                style={{ color: colors.grey[500], width: 48, height: 48 }}\n              />\n            </Box>\n            <Box>\n              <Code>\n                {`{\n  \"interface\": { \"type\": \"image_segmentation\" },\n  samples: [\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 0\n    },\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 1000\n    },\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 2000\n    }\n  ],\n  taskOutput: [\n    { /* labels */ },\n    { /* labels */ },\n    { /* labels */ }\n  ]\n}`}\n              </Code>\n            </Box>\n          </Box>\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useElectron from \"../../utils/use-electron\"\nimport ProgressBar from \"../ProgressBar\"\nimport md5 from \"js-md5\"\nimport path from \"path\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nfunction downloadFile(urlToDownload, directoryPath, remote) {\n  const fileName = `sample_${md5(urlToDownload).slice(0, 6)}__${urlToDownload\n    .split(\"/\")\n    .slice(-1)[0]\n    .replace(/[^a-zA-Z0-9_\\-.]/g, \"\")}`\n  const downloadPath = path.join(directoryPath, fileName)\n  if (remote.require(\"fs\").existsSync(downloadPath)) return downloadPath\n  return new Promise((resolve, reject) => {\n    remote.require(\"download-file\")(\n      urlToDownload,\n      {\n        directory: directoryPath,\n        filename: fileName,\n      },\n      (err) => {\n        if (err) return reject(err)\n        return resolve(downloadPath)\n      }\n    )\n  })\n}\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { remote } = useElectron() || {}\n  const [progress, changeProgress] = useState(null)\n  const [errors, changeErrors] = useState(\"\")\n\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Download URLs\"\n      actions={[\n        {\n          text: \"Download URLs\",\n          disabled: progress !== null,\n          onClick: async () => {\n            changeProgress(0)\n            const {\n              cancelled,\n              filePaths: [directoryPath] = [null],\n            } = await remote.dialog.showOpenDialog({\n              title: \"Directory to download files to\",\n              buttonLabel: \"Download Files Here\",\n              properties: [\n                \"createDirectory\",\n                \"openDirectory\",\n                \"promptToCreate\",\n              ],\n            })\n            if (cancelled || !directoryPath) {\n              changeProgress(null)\n              return\n            }\n\n            const newSamples = [...dataset.samples]\n            let errors = \"\"\n\n            // Iterate over each task datum and download the url, then convert\n            // the path to a filesystem path\n            for (let i = 0; i < dataset.samples.length; i++) {\n              const td = dataset.samples[i]\n              let urlKey\n              if (td.imageUrl) urlKey = \"imageUrl\"\n              if (td.videoUrl) urlKey = \"videoUrl\"\n              if (!urlKey || !td[urlKey].startsWith(\"http\")) continue\n              const urlToDownload = td[urlKey]\n              try {\n                const pathToFile = await downloadFile(\n                  urlToDownload,\n                  directoryPath,\n                  remote\n                )\n                newSamples[i] = {\n                  ...td,\n                  [urlKey]: `file://${pathToFile}`,\n                }\n              } catch (e) {\n                errors += `Skipping sample, error downloading samples[${i}] (${urlToDownload}): ${e.toString()} \\n`\n              }\n              changeProgress((i / dataset.samples.length) * 100)\n            }\n\n            onChangeDataset(setIn(dataset, [\"samples\"], newSamples))\n\n            changeErrors(errors)\n            changeProgress(100)\n          },\n        },\n      ]}\n    >\n      {t(\"download-urls-dialog\")}\n      <ProgressBar progress={progress || 0} />\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useElectron from \"../../utils/use-electron\"\nimport ProgressBar from \"../ProgressBar\"\nimport { setIn, without } from \"seamless-immutable\"\nimport { useTranslation } from \"react-i18next\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nconst getFfmpegTimeCode = (ms) => {\n  const cs = Math.floor(ms / 10) % 100\n  const ss = Math.floor(ms / 1000) % 60\n  const mn = Math.floor(ms / 1000 / 60) % 60\n  const hr = Math.floor(ms / 1000 / 60 / 60)\n  return [hr, \":\", mn, \":\", ss, \".\", cs]\n    .map((n) => (typeof n === \"number\" ? n.toString().padStart(2, \"0\") : n))\n    .join(\"\")\n}\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { remote } = useElectron() || {}\n  const [progress, changeProgress] = useState(null)\n  const [errors, changeErrors] = useState(\"\")\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Video Frames to Images\"\n      actions={[\n        {\n          text: \"Convert Video Frames to Images\",\n          disabled: progress !== null,\n          onClick: async () => {\n            changeProgress(0)\n            let errors = \"\"\n            const pathToFfmpeg = remote.require(\"ffmpeg-static\")\n            if (!pathToFfmpeg) {\n              changeErrors(\n                \"There was an issue using ffmpeg. Please create an issue on the github repository.\"\n              )\n            }\n\n            const shell = remote.require(\"any-shell-escape\")\n            const { exec } = remote.require(\"child_process\")\n            const newsamples = [...dataset.samples]\n            let transformsPerformed = 0\n\n            for (let i = 0; i < dataset.samples.length; i++) {\n              const td = dataset.samples[i]\n              if (td.videoUrl && td.videoFrameAt !== undefined) {\n                if (td.videoUrl.startsWith(\"http\")) {\n                  errors += `Sample ${i} has a url to a video, videos must be downloaded before extracting frames.`\n                  continue\n                }\n                transformsPerformed++\n\n                const videoPath = td.videoUrl.replace(/^file:\\/\\//, \"\")\n                const imageOutputPath =\n                  videoPath + \"__frameat__\" + td.videoFrameAt + \".jpg\"\n                const ffmpegCommand = shell([\n                  pathToFfmpeg,\n                  \"-y\",\n                  \"-ss\",\n                  getFfmpegTimeCode(td.videoFrameAt),\n                  \"-i\",\n                  videoPath,\n                  \"-frames:v\",\n                  1,\n                  imageOutputPath,\n                ])\n                await new Promise((resolve, reject) => {\n                  exec(ffmpegCommand, { timeout: 5000 }, (err) => {\n                    if (err) return reject(err)\n                    resolve()\n                  })\n                })\n                newsamples[i] = {\n                  ...without(\n                    without(dataset.samples[i], \"videoUrl\"),\n                    \"videoFrameAt\"\n                  ),\n                  imageUrl: `file://${imageOutputPath}`,\n                }\n              }\n              changeProgress((i / dataset.samples.length) * 100)\n            }\n\n            if (transformsPerformed === 0) {\n              errors +=\n                \"No transforms were performed, do all of your video samples have frames specified? You may need to convert the keyframes to samples.\"\n            }\n\n            onChangeDataset(setIn(dataset, [\"samples\"], newsamples))\n\n            changeErrors(errors)\n            changeProgress(100)\n          },\n        },\n      ]}\n    >\n      {t(\"transform-video-frames-to-images-dialog-explanation-text\")}\n      <ProgressBar progress={progress || 0} />\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","const uploadFileToTransferSh = async ({ fileName, fileURL, remote }) => {\n  window.remote = remote // TODO remove\n  const remoteURL = `https://files.universaldatatool.com/${fileName}` ///${hashedFileName}\n\n  const axios = remote.require(\"axios\")\n  const exactFilePath = fileURL.split(\"file://\")[1]\n\n  const fsFileBuffer = remote.require(\"fs\").readFileSync(exactFilePath)\n\n  const uploadedFileURL = await axios\n    .put(remoteURL, fsFileBuffer)\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data\n      }\n    })\n\n  return uploadedFileURL.replace(\n    \"universaldatatool.com/\",\n    \"universaldatatool.com/get/\"\n  )\n}\n\nexport default uploadFileToTransferSh\n","const splitFileNameFromFileURL = (fileURL) => {\n  if (fileURL.startsWith(\"file://\")) {\n    const splittedFullFileName = fileURL.split(\"/\")\n    const fullFileName = splittedFullFileName[splittedFullFileName.length - 1]\n    return fullFileName\n  }\n}\n\nexport default splitFileNameFromFileURL\n","const getFileURLKey = (item) => {\n  if (item.imageUrl) return \"imageUrl\"\n  if (item.videoUrl) return \"videoUrl\"\n  if (item.audioUrl) return \"audioUrl\"\n  return null\n}\n\nexport default getFileURLKey\n","import uploadFileToTransferSh from \"./upload-file-to-transfersh\"\nimport splitFileNameFromFileURL from \"./split-file-name-from-file-url\"\nimport getFileURLKey from \"./get-file-url-key\"\nimport { setIn } from \"seamless-immutable\"\n\n// TODO move to utils directory\nconst idify = (s) =>\n  s\n    .toLowerCase()\n    .replace(/[^a-z0-9]/g, \"_\")\n    .replace(/_+/g, \"_\")\n\nconst transformFileURLsToWebURLs = async ({\n  dataset,\n  onChangeDataset,\n  setProgress,\n  remote,\n}) => {\n  const newsamples = []\n\n  const progressUnit = 100 / dataset.samples.length\n  for (\n    let samplesIndex = 0;\n    samplesIndex < dataset.samples.length;\n    samplesIndex++\n  ) {\n    const samplesItem = dataset.samples[samplesIndex]\n\n    const fileURLKey = getFileURLKey(samplesItem)\n\n    if (!fileURLKey) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    const fileURL = samplesItem[fileURLKey]\n\n    if (!fileURL.startsWith(\"file://\")) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    const halfProgressOfUnit = progressUnit * samplesIndex\n    setProgress(halfProgressOfUnit)\n\n    const fileName = idify(splitFileNameFromFileURL(fileURL))\n\n    const webURLOfUploadedFile = await uploadFileToTransferSh({\n      fileName,\n      fileURL,\n      remote,\n    }).catch((e) => console.warn(e))\n\n    if (!webURLOfUploadedFile) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    newsamples.push({\n      ...samplesItem,\n      [fileURLKey]: webURLOfUploadedFile,\n    })\n  }\n  setProgress(100)\n  onChangeDataset(setIn(dataset, [\"samples\"], newsamples))\n}\n\nexport default transformFileURLsToWebURLs\n","import React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport transformFileURLsToWebURLs from \"./functions/transform-file-urls-to-web-urls\"\nimport ProgressBar from \"../ProgressBar\"\nimport useElectron from \"../../utils/use-electron\"\nimport { useTranslation } from \"react-i18next\"\n\nconst TransformLocalFilesToWebURLs = ({\n  open,\n  onClose,\n  dataset,\n  onChangeDataset,\n}) => {\n  const { t } = useTranslation()\n\n  const [progress, setProgress] = useState(0)\n  const { remote } = useElectron() || {}\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Local Files to Web URLs\"\n      actions={[\n        {\n          text: \"Convert Local Files to Web URLs\",\n          onClick: async () =>\n            await transformFileURLsToWebURLs({\n              dataset,\n              onChangeDataset,\n              setProgress,\n              remote,\n            }),\n        },\n      ]}\n    >\n      {t(\"transform-local-files-to-web-urls-explanation\")}\n      <ProgressBar progress={progress} />\n    </SimpleDialog>\n  )\n}\n\nexport default TransformLocalFilesToWebURLs\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { setIn } from \"seamless-immutable\"\nimport Box from \"@material-ui/core/Box\"\nimport range from \"lodash/range\"\nimport TextField from \"@material-ui/core/TextField\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const [errors, setErrors] = useState(\"\")\n  const [rows, setRows] = useState(\"2\")\n  const [columns, setColumns] = useState(\"2\")\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Image Samples into Segments\"\n      actions={[\n        {\n          text: \"Convert Image Samples into Segments\",\n          onClick: async () => {\n            const [nRows, nCols] = [parseInt(rows), parseInt(columns)]\n\n            try {\n              onChangeDataset(\n                setIn(\n                  dataset,\n                  [\"samples\"],\n                  range(nRows).flatMap((y) =>\n                    range(nCols).flatMap((x) =>\n                      dataset.samples.map((s) => {\n                        return setIn(s, [\"allowedArea\"], {\n                          x: x / nCols,\n                          y: y / nRows,\n                          width: 1 / nCols,\n                          height: 1 / nRows,\n                        })\n                      })\n                    )\n                  )\n                )\n              )\n              onClose()\n            } catch (e) {\n              setErrors(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      This transformation will multiply the number of image samples you have,\n      splitting each individual image into segments. The image is not processed\n      and clipped, but rather an \"allowedArea\" property is placed on the sample\n      which limits the labeling to a section of the image. This is useful when\n      trying to reduce the amount of work per image sample.\n      <Box padding={4}>\n        <TextField\n          label=\"Rows\"\n          value={rows}\n          onChange={(e) => setRows(e.target.value)}\n        />\n        <TextField\n          label=\"Columns\"\n          value={columns}\n          onChange={(e) => setColumns(e.target.value)}\n        />\n      </Box>\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { setIn } from \"seamless-immutable\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const [errors, setErrors] = useState(\"\")\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Segments to Image Samples\"\n      actions={[\n        {\n          text: \"Convert Segments to Image Samples\",\n          onClick: async () => {\n            try {\n              const imageUrls = Array.from(\n                new Set(dataset.samples.map((s) => s.imageUrl))\n              )\n              const newSamples = []\n              for (const imageUrl of imageUrls) {\n                const pieces = dataset.samples.filter(\n                  (s) => s.imageUrl === imageUrl\n                )\n                newSamples.push({\n                  imageUrl,\n                  annotation: pieces\n                    .flatMap((p) => p.annotation)\n                    .filter(Boolean),\n                })\n              }\n              onChangeDataset(setIn(dataset, [\"samples\"], newSamples))\n              onClose()\n            } catch (e) {\n              setErrors(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      This transformation will take image samples that have been split into\n      segments (each with an allowedArea), and combine them into one image\n      sample again. This is typically executed after a splitting operation when\n      the samples are to be recombined.\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState, createContext } from \"react\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ImageIcon from \"@material-ui/icons/Image\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport * as colors from \"@material-ui/core/colors\"\nimport useIsDesktop from \"../../utils/use-is-desktop\"\nimport classnames from \"classnames\"\nimport OndemandVideoIcon from \"@material-ui/icons/OndemandVideo\"\nimport TransformVideoKeyframesDialog from \"../TransformVideoKeyframesDialog\"\nimport DownloadURLsDialog from \"../DownloadURLsDialog\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport CollectionsIcon from \"@material-ui/icons/Collections\"\nimport TransformVideoFramesToImagesDialog from \"../TransformVideoFramesToImagesDialog\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport TransformLocalFilesToWebURLs from \"../TransformLocalFilesToWebURLs\"\nimport TransformImageSamplesIntoSegmentsDialog from \"../TransformImageSamplesIntoSegmentsDialog\"\nimport TransformSegmentsIntoImageSamplesDialog from \"../TransformSegmentsIntoImageSamplesDialog\"\n\nimport ComputerIcon from \"@material-ui/icons/Computer\"\nimport LanguageIcon from \"@material-ui/icons/Language\"\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\"\nimport GridOnIcon from \"@material-ui/icons/GridOn\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ButtonBase = styled(MuiButton)({\n  width: 240,\n  height: 140,\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  \"&.disabled\": {\n    backgroundColor: colors.grey[200],\n  },\n  margin: 8,\n  \"& .icon\": {\n    width: 36,\n    height: 36,\n    color: colors.grey[600],\n    \"&.disabled\": {\n      color: colors.grey[400],\n    },\n  },\n})\n\nconst DesktopOnlyText = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  \"&.disabled\": {\n    color: colors.grey[500],\n  },\n})\n\nconst SelectDialogContext = createContext()\n\nconst Button = ({ Icon1, Icon2, desktopOnly, children, dialog, disabled }) => {\n  const isDesktop = useIsDesktop()\n  const posthog = usePosthog()\n  const { t } = useTranslation()\n\n  disabled =\n    disabled === undefined ? (desktopOnly ? !isDesktop : false) : disabled\n  return (\n    <SelectDialogContext.Consumer>\n      {({ onChangeDialog }) => {\n        return (\n          <ButtonBase\n            onClick={() => {\n              onChangeDialog(dialog)\n              posthog.capture(\"transform_button_clicked\", {\n                transform_button: dialog,\n              })\n            }}\n            className={classnames({ disabled })}\n            variant=\"outlined\"\n            disabled={disabled}\n          >\n            <div>\n              {Icon1 && Icon2 ? (\n                <>\n                  <Icon1 className={classnames(\"icon\", { disabled })} />\n                  <ArrowForwardIcon\n                    className={classnames(\"icon\", { disabled })}\n                  />\n                  <Icon2 className={classnames(\"icon\", { disabled })} />\n                </>\n              ) : (\n                <Icon1 className={classnames(\"icon\", { disabled })} />\n              )}\n              <div>{children}</div>\n              {desktopOnly && (\n                <DesktopOnlyText className={classnames({ disabled })}>\n                  {t(\"desktop-only\").toUpperCase()}\n                </DesktopOnlyText>\n              )}\n            </div>\n          </ButtonBase>\n        )\n      }}\n    </SelectDialogContext.Consumer>\n  )\n}\n\nexport default ({ dataset, onChangeDataset }) => {\n  const { t } = useTranslation()\n  const [selectedDialog, changeDialog] = useState()\n  const onChangeDialog = async (dialog) => {\n    switch (dialog) {\n      case \"convert-keyframes-to-samples\": {\n        break\n      }\n      default: {\n        return changeDialog(dialog)\n      }\n    }\n  }\n  const closeDialog = () => changeDialog(null)\n  return (\n    <SelectDialogContext.Provider value={{ onChangeDialog }}>\n      <div>\n        <Button\n          disabled={dataset.interface.type !== \"video_segmentation\"}\n          dialog=\"convert-keyframes-to-samples\"\n          Icon1={OndemandVideoIcon}\n          Icon2={CollectionsIcon}\n        >\n          {t(\"convert-video-keyframes-to-samples\")}\n        </Button>\n        <Button\n          desktopOnly\n          dialog=\"convert-local-files-to-web-urls\"\n          Icon1={ComputerIcon}\n          Icon2={LanguageIcon}\n        >\n          {t(\"transform-local-files-to-web-urls\")}\n        </Button>\n        <Button desktopOnly dialog=\"download-urls\" Icon1={GetAppIcon}>\n          {t(\"download\")} URLs\n        </Button>\n        <Button\n          desktopOnly\n          dialog=\"convert-video-frames-to-images\"\n          Icon1={OndemandVideoIcon}\n          Icon2={ImageIcon}\n        >\n          {t(\"convert-video-frames-to-images\")}\n        </Button>\n        <Button\n          dialog=\"split-image-samples-into-segments\"\n          Icon1={CheckBoxOutlineBlankIcon}\n          Icon2={GridOnIcon}\n        >\n          Split Image Samples into Segments\n        </Button>\n        <Button\n          dialog=\"combine-segments-into-image-samples\"\n          Icon1={GridOnIcon}\n          Icon2={CheckBoxOutlineBlankIcon}\n        >\n          Combine Segments into Image Samples\n        </Button>\n        <TransformVideoKeyframesDialog\n          open={selectedDialog === \"convert-keyframes-to-samples\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          onChangeDataset={(...args) => {\n            onChangeDataset(...args)\n            closeDialog()\n          }}\n        />\n        <DownloadURLsDialog\n          open={selectedDialog === \"download-urls\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          desktopOnly\n          onChangeDataset={onChangeDataset}\n        ></DownloadURLsDialog>\n        <TransformLocalFilesToWebURLs\n          dataset={dataset}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n          desktopOnly\n          open={selectedDialog === \"convert-local-files-to-web-urls\"}\n        ></TransformLocalFilesToWebURLs>\n        <TransformVideoFramesToImagesDialog\n          open={selectedDialog === \"convert-video-frames-to-images\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          desktopOnly\n          onChangeDataset={onChangeDataset}\n        ></TransformVideoFramesToImagesDialog>\n        <TransformImageSamplesIntoSegmentsDialog\n          dataset={dataset}\n          open={selectedDialog === \"split-image-samples-into-segments\"}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n        ></TransformImageSamplesIntoSegmentsDialog>\n        <TransformSegmentsIntoImageSamplesDialog\n          dataset={dataset}\n          open={selectedDialog === \"combine-segments-into-image-samples\"}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n        ></TransformSegmentsIntoImageSamplesDialog>\n      </div>\n    </SelectDialogContext.Provider>\n  )\n}\n","// @flow weak\n\nimport React, { useMemo, useState } from \"react\"\nimport DataTable from \"react-data-table-component\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport SampleGrid from \"../SampleGrid\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport AppsIcon from \"@material-ui/icons/Apps\"\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\"\nimport TableChartIcon from \"@material-ui/icons/TableChart\"\nimport Box from \"@material-ui/core/Box\"\nimport ImportIcon from \"@material-ui/icons/Publish\"\nimport ImportPage from \"../ImportPage\"\nimport TransformPage from \"../TransformPage\"\nimport useIsDesktop from \"../../utils/use-is-desktop.js\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  padding: 16,\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  boxSizing: \"border-box\",\n})\n\nconst SampleCounter = styled(\"div\")({\n  fontSize: 14,\n  color: colors.grey[600],\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  flexGrow: 1,\n})\n\nconst ExpandedRowContainer = styled(\"div\")({\n  padding: 8,\n  border: \"#888 solid 1px\",\n  borderTop: \"none\",\n  borderRadius: 4,\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  boxShadow: \"inset 0 3px 3px rgba(0,0,0,0.2)\",\n})\nconst ExpandedRowTitle = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n})\nconst ExpandedRowCode = styled(\"pre\")({ whiteSpace: \"pre-wrap\", fontSize: 11 })\n\nconst ExpandedRow = ({ data }) => {\n  const { annotation, ...input } = data\n\n  return (\n    <ExpandedRowContainer>\n      <Grid spacing={2} container>\n        <Grid item xs={6}>\n          <ExpandedRowTitle>samples[{data.index}]:</ExpandedRowTitle>\n          <ExpandedRowCode>{JSON.stringify(input, null, \"  \")}</ExpandedRowCode>\n        </Grid>\n        <Grid item xs={6}>\n          <ExpandedRowTitle>samples[{data.index}].annotation:</ExpandedRowTitle>\n          <ExpandedRowCode>\n            {JSON.stringify(annotation, null, \"  \")}\n          </ExpandedRowCode>\n        </Grid>\n      </Grid>\n    </ExpandedRowContainer>\n  )\n}\n\nexport const SamplesView = ({\n  file,\n  dataset,\n  openSampleInputEditor,\n  openSampleLabelEditor,\n  deleteSample,\n  onChangeDataset,\n  onChangeFile,\n  authConfig,\n  user,\n}) => {\n  const isDesktop = useIsDesktop()\n  const [currentTab, changeTabState] = useState(\n    (dataset.samples || []).length === 0\n      ? \"import\"\n      : window.localStorage.lastSampleTab || \"grid\"\n  )\n  const changeTab = (tab) => {\n    changeTabState(tab)\n    window.localStorage.lastSampleTab = tab\n  }\n  const columns = useMemo(() => {\n    if (!dataset.samples) return []\n    const columns = [\n      {\n        name: \"Index\",\n        selector: \"index\",\n        sortable: true,\n      },\n    ]\n    const knownKeys = new Set()\n    for (const td of dataset.samples) {\n      for (const key in td) {\n        if (!knownKeys.has(key)) {\n          columns.push({\n            name: key,\n            selector: key,\n            cell: (row) =>\n              typeof row[key] !== \"object\"\n                ? row[key]\n                : JSON.stringify(row[key]).slice(0, 30) + \"...\",\n          })\n          knownKeys.add(key)\n        }\n      }\n    }\n    columns.push({\n      name: \"Edit\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised onClick={() => openSampleInputEditor(row.index)}>\n          <EditIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    columns.push({\n      name: \"Label\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised onClick={() => openSampleLabelEditor(row.index)}>\n          <BorderColorIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    columns.push({\n      name: \"Delete\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised primary onClick={() => deleteSample(row.index)}>\n          <DeleteIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    return columns\n  }, [\n    dataset.samples,\n    deleteSample,\n    openSampleInputEditor,\n    openSampleLabelEditor,\n  ])\n\n  const data = useMemo(() => {\n    if (!dataset.samples) return []\n    return dataset.samples.map((td, i) => ({\n      ...td,\n      index: i,\n    }))\n  }, [dataset.samples])\n  return (\n    <Container>\n      <Box display=\"flex\">\n        <Tabs value={currentTab} onChange={(e, newTab) => changeTab(newTab)}>\n          <Tab icon={<ImportIcon />} label=\"Import\" value=\"import\" />\n          <Tab icon={<SlideshowIcon />} label=\"Transform\" value=\"transform\" />\n          <Tab icon={<AppsIcon />} label=\"Grid\" value=\"grid\" />\n          <Tab icon={<TableChartIcon />} label=\"Table\" value=\"table\" />\n        </Tabs>\n        <SampleCounter>\n          {(dataset.samples || []).length} Samples\n          <br />\n          {(dataset.samples || []).filter((s) => s.annotation).length} Labels\n        </SampleCounter>\n      </Box>\n      <Box paddingTop={2} />\n      <Box flexGrow={1}>\n        {currentTab === \"import\" && (\n          <ImportPage\n            file={file}\n            isDesktop={isDesktop}\n            onChangeFile={(file) => onChangeFile(file)}\n            onImportPageShouldExit={() => changeTab(\"grid\")}\n            onChangeDataset={(newOHA) => onChangeDataset(newOHA)}\n            dataset={dataset}\n            authConfig={authConfig}\n            user={user}\n          />\n        )}\n        {currentTab === \"transform\" && (\n          <TransformPage\n            isDesktop={isDesktop}\n            dataset={dataset}\n            onChangeDataset={(dataset, shouldViewChange) => {\n              onChangeDataset(dataset)\n              if (shouldViewChange) {\n                changeTab(\"grid\")\n              }\n            }}\n          />\n        )}\n        {currentTab === \"grid\" && (\n          <SampleGrid\n            tablePaginationPadding={6}\n            count={(dataset.samples || []).length}\n            samples={dataset.samples || []}\n            completed={(dataset.samples || []).map((s) =>\n              Boolean(s.annotation)\n            )}\n            onClick={(sampleIndex) => {\n              openSampleLabelEditor(sampleIndex)\n            }}\n          />\n        )}\n        {currentTab === \"table\" && (\n          <DataTable\n            title=\"Samples\"\n            expandableRowsComponent={<ExpandedRow />}\n            expandableRows\n            dense\n            columns={columns}\n            data={data}\n            pagination\n            paginationPerPage={10}\n            paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n          />\n        )}\n      </Box>\n    </Container>\n  )\n}\nexport default SamplesView\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn, asMutable } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"regionTypesAllowed\",\n      title: \"Region Types Allowed\",\n      description: \"What types of regions can be drawn on the image.\",\n      type: \"multiple-dropdown\",\n      choices: [\"bounding-box\", \"polygon\", \"point\"],\n    },\n    {\n      name: \"multipleRegions\",\n      title: \"Can multiple regions be created?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"multipleRegionLabels\",\n      title: \"Multiple Region Labels Allowed?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Available Labels\",\n      description:\n        \"If you're labeling regions on an image, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () =>\n      asMutable(\n        {\n          multipleRegions: Boolean(\n            iface.multipleRegions || iface.multipleRegions === undefined\n          ),\n          multipleRegionLabels: Boolean(iface.multipleRegionLabels),\n          regionTypesAllowed: iface.regionTypesAllowed,\n          labels:\n            (iface.labels || []).map((a) =>\n              typeof a === \"string\" ? { id: a, description: a } : a\n            ) || [],\n        },\n        { deep: true }\n      ),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\n\nconst maxClusterPresets = {\n  low: 1000,\n  medium: 8000,\n  high: 64000,\n}\nconst maxClusterPresetsRev = Object.entries(maxClusterPresets).reduce(\n  (acc, curr) => {\n    acc[curr[1]] = curr[0]\n    return acc\n  },\n  {}\n)\n\nconst form = {\n  questions: [\n    {\n      name: \"labels\",\n      title: \"Available Labels\",\n      description:\n        \"If you're labeling regions on an image, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n    {\n      name: \"description\",\n      title: \"Sidebar Description\",\n      description: \"Any instructions or notes in markdown.\",\n      type: \"text\",\n    },\n    {\n      name: \"autosegMode\",\n      type: \"dropdown\",\n      title: \"Automatic Segmentation Engine\",\n      choices: [\"simple\", \"autoseg\"],\n    },\n    {\n      name: \"autosegPreset\",\n      type: \"dropdown\",\n      visibleIf: \"{autosegMode}='autoseg'\",\n      title: \"Super Pixel Quality\",\n      choices: [\"low\", \"medium\", \"high\", \"custom\"],\n    },\n    {\n      name: \"autosegMaxClusters\",\n      type: \"slider\",\n      visibleIf: \"{autosegPreset}='custom'\",\n      title: \"Total Super Pixels\",\n      min: 10,\n      max: 100000,\n      step: 10,\n      defaultValue: 1000,\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      description: iface.description,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n      autosegMode: iface.autoSegmentationEngine?.mode,\n      autosegPreset:\n        maxClusterPresetsRev[\n          iface.autoSegmentationEngine?.maxClusters || 1000\n        ] || \"custom\",\n      autosegMaxClusters: iface.autoSegmentationEngine?.maxClusters || 1000,\n    }),\n    [iface]\n  )\n  return (\n    <>\n      <Survey\n        noActions\n        variant=\"flat\"\n        defaultAnswers={defaultAnswers}\n        onQuestionChange={(questionId, newValue, answers) => {\n          onChange({\n            ...iface,\n            description: answers.description,\n            labels: answers.labels,\n            autoSegmentationEngine: {\n              mode: answers.autosegMode,\n              maxClusters:\n                answers.autosegPreset === \"custom\"\n                  ? answers.autosegMaxClusters\n                  : maxClusterPresets[answers.autosegPreset],\n            },\n          })\n        }}\n        form={form}\n      />\n    </>\n  )\n}\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"multiple\",\n      title: \"Allow multiple classifications per image?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description: \"Classifications or tags to be labeled.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      multiple: iface.multiple ? iface.multiple : false,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n    }),\n    [iface.labels, iface.multiple]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"multiple\",\n      title: \"Allow Multiple Classifications\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description: \"Classifications or tags to be labeled.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        { cellType: \"text\", name: \"displayName\", title: \"Display Name\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      multiple: false,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, displayName: a, description: a } : a\n        ) || [],\n    }),\n    [iface.labels]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","import React from \"react\"\nimport Survey from \"material-survey/components/Survey\"\n\n// https://gist.github.com/DimazzzZ/4e2a5a6c8c6f67900091#gistcomment-2021620\nconst languages = [\n  { value: \"ab\", text: \"Abkhazian\" },\n  { value: \"aa\", text: \"Afar\" },\n  { value: \"af\", text: \"Afrikaans\" },\n  { value: \"ak\", text: \"Akan\" },\n  { value: \"sq\", text: \"Albanian\" },\n  { value: \"am\", text: \"Amharic\" },\n  { value: \"ar\", text: \"Arabic\" },\n  { value: \"an\", text: \"Aragonese\" },\n  { value: \"hy\", text: \"Armenian\" },\n  { value: \"as\", text: \"Assamese\" },\n  { value: \"av\", text: \"Avaric\" },\n  { value: \"ae\", text: \"Avestan\" },\n  { value: \"ay\", text: \"Aymara\" },\n  { value: \"az\", text: \"Azerbaijani\" },\n  { value: \"bm\", text: \"Bambara\" },\n  { value: \"ba\", text: \"Bashkir\" },\n  { value: \"eu\", text: \"Basque\" },\n  { value: \"be\", text: \"Belarusian\" },\n  { value: \"bn\", text: \"Bengali\" },\n  { value: \"bh\", text: \"Bihari languages\" },\n  { value: \"bi\", text: \"Bislama\" },\n  { value: \"bs\", text: \"Bosnian\" },\n  { value: \"br\", text: \"Breton\" },\n  { value: \"bg\", text: \"Bulgarian\" },\n  { value: \"my\", text: \"Burmese\" },\n  { value: \"ca\", text: \"Catalan, Valencian\" },\n  { value: \"km\", text: \"Central Khmer\" },\n  { value: \"ch\", text: \"Chamorro\" },\n  { value: \"ce\", text: \"Chechen\" },\n  { value: \"ny\", text: \"Chichewa, Chewa, Nyanja\" },\n  { value: \"zh\", text: \"Chinese\" },\n  { value: \"cu\", text: \"Church Slavonic, Old Bulgarian, Old Church Slavonic\" },\n  { value: \"cv\", text: \"Chuvash\" },\n  { value: \"kw\", text: \"Cornish\" },\n  { value: \"co\", text: \"Corsican\" },\n  { value: \"cr\", text: \"Cree\" },\n  { value: \"hr\", text: \"Croatian\" },\n  { value: \"cs\", text: \"Czech\" },\n  { value: \"da\", text: \"Danish\" },\n  { value: \"dv\", text: \"Divehi, Dhivehi, Maldivian\" },\n  { value: \"nl\", text: \"Dutch, Flemish\" },\n  { value: \"dz\", text: \"Dzongkha\" },\n  { value: \"en\", text: \"English\" },\n  { value: \"eo\", text: \"Esperanto\" },\n  { value: \"et\", text: \"Estonian\" },\n  { value: \"ee\", text: \"Ewe\" },\n  { value: \"fo\", text: \"Faroese\" },\n  { value: \"fj\", text: \"Fijian\" },\n  { value: \"fi\", text: \"Finnish\" },\n  { value: \"fr\", text: \"French\" },\n  { value: \"ff\", text: \"Fulah\" },\n  { value: \"gd\", text: \"Gaelic, Scottish Gaelic\" },\n  { value: \"gl\", text: \"Galician\" },\n  { value: \"lg\", text: \"Ganda\" },\n  { value: \"ka\", text: \"Georgian\" },\n  { value: \"de\", text: \"German\" },\n  { value: \"ki\", text: \"Gikuyu, Kikuyu\" },\n  { value: \"el\", text: \"Greek (Modern)\" },\n  { value: \"kl\", text: \"Greenlandic, Kalaallisut\" },\n  { value: \"gn\", text: \"Guarani\" },\n  { value: \"gu\", text: \"Gujarati\" },\n  { value: \"ht\", text: \"Haitian, Haitian Creole\" },\n  { value: \"ha\", text: \"Hausa\" },\n  { value: \"he\", text: \"Hebrew\" },\n  { value: \"hz\", text: \"Herero\" },\n  { value: \"hi\", text: \"Hindi\" },\n  { value: \"ho\", text: \"Hiri Motu\" },\n  { value: \"hu\", text: \"Hungarian\" },\n  { value: \"is\", text: \"Icelandic\" },\n  { value: \"io\", text: \"Ido\" },\n  { value: \"ig\", text: \"Igbo\" },\n  { value: \"id\", text: \"Indonesian\" },\n  {\n    value: \"ia\",\n    text: \"Interlingua (International Auxiliary Language Association)\",\n  },\n  { value: \"ie\", text: \"Interlingue\" },\n  { value: \"iu\", text: \"Inuktitut\" },\n  { value: \"ik\", text: \"Inupiaq\" },\n  { value: \"ga\", text: \"Irish\" },\n  { value: \"it\", text: \"Italian\" },\n  { value: \"ja\", text: \"Japanese\" },\n  { value: \"jv\", text: \"Javanese\" },\n  { value: \"kn\", text: \"Kannada\" },\n  { value: \"kr\", text: \"Kanuri\" },\n  { value: \"ks\", text: \"Kashmiri\" },\n  { value: \"kk\", text: \"Kazakh\" },\n  { value: \"rw\", text: \"Kinyarwanda\" },\n  { value: \"kv\", text: \"Komi\" },\n  { value: \"kg\", text: \"Kongo\" },\n  { value: \"ko\", text: \"Korean\" },\n  { value: \"kj\", text: \"Kwanyama, Kuanyama\" },\n  { value: \"ku\", text: \"Kurdish\" },\n  { value: \"ky\", text: \"Kyrgyz\" },\n  { value: \"lo\", text: \"Lao\" },\n  { value: \"la\", text: \"Latin\" },\n  { value: \"lv\", text: \"Latvian\" },\n  { value: \"lb\", text: \"Letzeburgesch, Luxembourgish\" },\n  { value: \"li\", text: \"Limburgish, Limburgan, Limburger\" },\n  { value: \"ln\", text: \"Lingala\" },\n  { value: \"lt\", text: \"Lithuanian\" },\n  { value: \"lu\", text: \"Luba-Katanga\" },\n  { value: \"mk\", text: \"Macedonian\" },\n  { value: \"mg\", text: \"Malagasy\" },\n  { value: \"ms\", text: \"Malay\" },\n  { value: \"ml\", text: \"Malayalam\" },\n  { value: \"mt\", text: \"Maltese\" },\n  { value: \"gv\", text: \"Manx\" },\n  { value: \"mi\", text: \"Maori\" },\n  { value: \"mr\", text: \"Marathi\" },\n  { value: \"mh\", text: \"Marshallese\" },\n  { value: \"ro\", text: \"Moldovan, Moldavian, Romanian\" },\n  { value: \"mn\", text: \"Mongolian\" },\n  { value: \"na\", text: \"Nauru\" },\n  { value: \"nv\", text: \"Navajo, Navaho\" },\n  { value: \"nd\", text: \"Northern Ndebele\" },\n  { value: \"ng\", text: \"Ndonga\" },\n  { value: \"ne\", text: \"Nepali\" },\n  { value: \"se\", text: \"Northern Sami\" },\n  { value: \"no\", text: \"Norwegian\" },\n  { value: \"nb\", text: \"Norwegian Bokmål\" },\n  { value: \"nn\", text: \"Norwegian Nynorsk\" },\n  { value: \"ii\", text: \"Nuosu, Sichuan Yi\" },\n  { value: \"oc\", text: \"Occitan (post 1500)\" },\n  { value: \"oj\", text: \"Ojibwa\" },\n  { value: \"or\", text: \"Oriya\" },\n  { value: \"om\", text: \"Oromo\" },\n  { value: \"os\", text: \"Ossetian, Ossetic\" },\n  { value: \"pi\", text: \"Pali\" },\n  { value: \"pa\", text: \"Panjabi, Punjabi\" },\n  { value: \"ps\", text: \"Pashto, Pushto\" },\n  { value: \"fa\", text: \"Persian\" },\n  { value: \"pl\", text: \"Polish\" },\n  { value: \"pt\", text: \"Portuguese\" },\n  { value: \"qu\", text: \"Quechua\" },\n  { value: \"rm\", text: \"Romansh\" },\n  { value: \"rn\", text: \"Rundi\" },\n  { value: \"ru\", text: \"Russian\" },\n  { value: \"sm\", text: \"Samoan\" },\n  { value: \"sg\", text: \"Sango\" },\n  { value: \"sa\", text: \"Sanskrit\" },\n  { value: \"sc\", text: \"Sardinian\" },\n  { value: \"sr\", text: \"Serbian\" },\n  { value: \"sn\", text: \"Shona\" },\n  { value: \"sd\", text: \"Sindhi\" },\n  { value: \"si\", text: \"Sinhala, Sinhalese\" },\n  { value: \"sk\", text: \"Slovak\" },\n  { value: \"sl\", text: \"Slovenian\" },\n  { value: \"so\", text: \"Somali\" },\n  { value: \"st\", text: \"Sotho, Southern\" },\n  { value: \"nr\", text: \"South Ndebele\" },\n  { value: \"es\", text: \"Spanish, Castilian\" },\n  { value: \"su\", text: \"Sundanese\" },\n  { value: \"sw\", text: \"Swahili\" },\n  { value: \"ss\", text: \"Swati\" },\n  { value: \"sv\", text: \"Swedish\" },\n  { value: \"tl\", text: \"Tagalog\" },\n  { value: \"ty\", text: \"Tahitian\" },\n  { value: \"tg\", text: \"Tajik\" },\n  { value: \"ta\", text: \"Tamil\" },\n  { value: \"tt\", text: \"Tatar\" },\n  { value: \"te\", text: \"Telugu\" },\n  { value: \"th\", text: \"Thai\" },\n  { value: \"bo\", text: \"Tibetan\" },\n  { value: \"ti\", text: \"Tigrinya\" },\n  { value: \"to\", text: \"Tonga (Tonga Islands)\" },\n  { value: \"ts\", text: \"Tsonga\" },\n  { value: \"tn\", text: \"Tswana\" },\n  { value: \"tr\", text: \"Turkish\" },\n  { value: \"tk\", text: \"Turkmen\" },\n  { value: \"tw\", text: \"Twi\" },\n  { value: \"ug\", text: \"Uighur, Uyghur\" },\n  { value: \"uk\", text: \"Ukrainian\" },\n  { value: \"ur\", text: \"Urdu\" },\n  { value: \"uz\", text: \"Uzbek\" },\n  { value: \"ve\", text: \"Venda\" },\n  { value: \"vi\", text: \"Vietnamese\" },\n  { value: \"vo\", text: \"Volap_k\" },\n  { value: \"wa\", text: \"Walloon\" },\n  { value: \"cy\", text: \"Welsh\" },\n  { value: \"fy\", text: \"Western Frisian\" },\n  { value: \"wo\", text: \"Wolof\" },\n  { value: \"xh\", text: \"Xhosa\" },\n  { value: \"yi\", text: \"Yiddish\" },\n  { value: \"yo\", text: \"Yoruba\" },\n  { value: \"za\", text: \"Zhuang, Chuang\" },\n  { value: \"zu\", text: \"Zulu\" },\n]\n\nconst form = {\n  questions: [\n    {\n      name: \"transcriptionType\",\n      title: \"Transcription Type\",\n      type: \"dropdown\",\n      choices: [\"simple\", \"proper\"],\n    },\n    {\n      name: \"phraseBank\",\n      title: \"Phrase Bank\",\n      description: \"URL of single-column CSV or TXT file with allowed phrases\",\n      type: \"text\",\n    },\n    {\n      name: \"onlyUseWordsInPhraseBank\",\n      title: \"Only Use Words In Phrase Bank\",\n      type: \"boolean\",\n    },\n    {\n      name: \"language\",\n      title: \"Language\",\n      type: \"dropdown\",\n      // https://gist.github.com/DimazzzZ/4e2a5a6c8c6f67900091#gistcomment-2858621\n      choices: languages,\n    },\n    {\n      name: \"description\",\n      title: \"Description\",\n      type: \"multiline-text\",\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      onQuestionChange={(questionId, newValue, answers) => {\n        if (newValue.value) {\n          onChange({ ...iface, [questionId]: newValue.value })\n        } else {\n          onChange({ ...iface, [questionId]: newValue })\n        }\n      }}\n      form={form}\n    />\n  )\n}\n","import React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    // TODO uncomment when description can be seen in the interface somewhere\n    // {\n    //   name: \"description\",\n    //   title: \"Description\",\n    //   type: \"multiline-text\",\n    // },\n    // TODO enable when we support overlap\n    // {\n    //   name: \"overlapAllowed\",\n    //   title: \"Overlap Allowed\",\n    //   type: \"boolean\",\n    // },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      type: \"matrixdynamic\",\n      hasOther: true,\n      columns: [\n        {\n          cellType: \"text\",\n          name: \"id\",\n          title: \"ID\",\n        },\n        {\n          cellType: \"text\",\n          name: \"displayName\",\n          title: \"Display Name\",\n        },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      description: iface.description,\n      overlapAllowed: Boolean(\n        iface.overlapAllowed || iface.overlapAllowed === undefined\n      ),\n      labels: (iface.labels || []).map((column) =>\n        typeof column === \"string\"\n          ? {\n              id: column,\n              displayName: column,\n              description: column,\n            }\n          : column\n      ),\n    }),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n      defaultAnswers={defaultAnswers}\n    />\n  )\n}\n","import React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"entityLabels\",\n      title: \"Entity Labels\",\n      type: \"matrixdynamic\",\n      columns: [\n        {\n          cellType: \"text\",\n          name: \"id\",\n          title: \"ID\",\n        },\n        {\n          cellType: \"text\",\n          name: \"displayName\",\n          title: \"Display Name\",\n        },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description\",\n        },\n      ],\n    },\n    {\n      name: \"relationLabels\",\n      title: \"Relation Labels\",\n      type: \"matrixdynamic\",\n      columns: [\n        {\n          cellType: \"text\",\n          name: \"id\",\n          title: \"ID\",\n        },\n        {\n          cellType: \"text\",\n          name: \"displayName\",\n          title: \"Display Name\",\n        },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      entityLabels: (iface.entityLabels || []).map((column) =>\n        typeof column === \"string\"\n          ? {\n              id: column,\n              displayName: column,\n              description: column,\n            }\n          : column\n      ),\n      relationLabels: (iface.relationLabels || []).map((column) =>\n        typeof column === \"string\"\n          ? {\n              id: column,\n              displayName: column,\n              description: column,\n            }\n          : column\n      ),\n    }),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n      defaultAnswers={defaultAnswers}\n    />\n  )\n}\n","// @flow\n\nimport React, { useRef, useState } from \"react\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Survey from \"material-survey/components/Survey\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ButtonsContainer = styled(\"div\")({\n  textAlign: \"right\",\n})\nconst NoQuestions = styled(\"div\")({\n  fontSize: 18,\n  color: colors.grey[500],\n  fontWeight: \"bold\",\n  textAlign: \"center\",\n  padding: 16,\n})\n\nconst Question = styled(\"div\")({\n  position: \"relative\",\n  padding: 16,\n  margin: 16,\n  borderLeft: `4px solid ${colors.blue[400]}`,\n  // backgroundColor: colors.grey[50],\n  borderRadius: 4,\n  paddingRight: 64,\n  \"& .quitButton\": {\n    position: \"absolute\",\n    right: 4,\n    top: 4,\n  },\n  \"& > *\": {\n    margin: 8,\n  },\n})\nconst PreviewHeader = styled(\"div\")({\n  fontSize: 12,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  textTransform: \"uppercase\",\n  margin: 16,\n  marginBottom: 32,\n})\n\nconst StyledButton = styled(Button)({\n  position: \"relative\",\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n  },\n})\n\nexport default ({ iface, onChange }) => {\n  const anchorEl = useRef()\n  const [menuOpen, changeMenuOpen] = useState(false)\n  const { questions = [] } = iface.surveyjs || {}\n\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      {questions.length === 0 ? (\n        <NoQuestions>No Inputs, Click Add Input Below</NoQuestions>\n      ) : (\n        questions.map((q, i) => (\n          <Question key={i}>\n            <div style={{ display: \"flex\" }}>\n              <TextField\n                variant=\"outlined\"\n                label=\"Name / Identifier\"\n                value={q.name || \"\"}\n                onChange={(e) => {\n                  onChange(\n                    setIn(\n                      iface,\n                      [\"surveyjs\", \"questions\", i, \"name\"],\n                      e.target.value\n                    )\n                  )\n                }}\n              />\n              <TextField\n                style={{ marginLeft: 8, flexGrow: 1 }}\n                variant=\"outlined\"\n                label=\"Title / Instruction\"\n                value={q.title || \"\"}\n                onChange={(e) => {\n                  onChange(\n                    setIn(\n                      iface,\n                      [\"surveyjs\", \"questions\", i, \"title\"],\n                      e.target.value\n                    )\n                  )\n                }}\n              />\n            </div>\n            <Grid container>\n              <Grid item xs={6}>\n                {q.choices && (\n                  <TextField\n                    style={{\n                      marginTop: 8,\n                      paddingRight: 8,\n                      boxSizing: \"border-box\",\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"Choices (One per Line)\"\n                    defaultValue={q.choices.join(\"\\n\") || \"\"}\n                    onChange={(e) => {\n                      onChange(\n                        setIn(\n                          iface,\n                          [\"surveyjs\", \"questions\", i, \"choices\"],\n                          e.target.value.split(\"\\n\")\n                        )\n                      )\n                    }}\n                    multiline\n                    rows={6}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <PreviewHeader>Preview</PreviewHeader>\n                <Survey\n                  noActions\n                  variant=\"flat\"\n                  key={q}\n                  form={{ questions: [q] }}\n                />\n              </Grid>\n            </Grid>\n            <IconButton\n              className=\"quitButton\"\n              onClick={() => {\n                onChange(\n                  setIn(\n                    iface,\n                    [\"surveyjs\", \"questions\"],\n                    [...questions.slice(0, i), ...questions.slice(i + 1)]\n                  )\n                )\n              }}\n            >\n              <CancelIcon />\n            </IconButton>\n          </Question>\n        ))\n      )}\n      <ButtonsContainer>\n        <StyledButton onClick={(e) => changeMenuOpen(true)} ref={anchorEl}>\n          <AddCircleIcon className=\"icon\" />\n          {t(\"add-input\")}\n        </StyledButton>\n      </ButtonsContainer>\n      <Menu\n        anchorEl={anchorEl && anchorEl.current}\n        open={menuOpen}\n        onClose={() => changeMenuOpen(false)}\n      >\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                ((iface.surveyjs || {}).questions || []).concat([\n                  {\n                    name: \"input\" + questions.length,\n                    type: \"text\",\n                    title: \"New Text Input\",\n                  },\n                ])\n              )\n            )\n          }}\n        >\n          {t(\"text-input\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.surveyjs.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"radiogroup\",\n                  title: \"New Exclusive Choice Input\",\n                  choices: [\"Yes\", \"Maybe\", \"No\"],\n                })\n              )\n            )\n          }}\n        >\n          {t(\"exclusive-choice\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.surveyjs.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"checkbox\",\n                  title: \"New Checkbox Input\",\n                  choices: [\"A\", \"B\", \"C\"],\n                })\n              )\n            )\n          }}\n        >\n          Checkboxes\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                iface.surveyjs.questions.concat({\n                  name: \"input\" + questions.length,\n                  type: \"boolean\",\n                  title: \"New Boolean Input\",\n                })\n              )\n            )\n          }}\n        >\n          Boolean\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"dropdown\",\n                  title: \"New Dropdown Input\",\n                  choices: [\"A\", \"B\", \"C\"],\n                })\n              )\n            )\n          }}\n        >\n          {t(\"drop-down-autocomplete\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                iface.surveyjs.questions.concat([\n                  {\n                    name: \"input\" + questions.length,\n                    type: \"multiple-dropdown\",\n                    title: \"New Multiple Dropdown Input\",\n                    choices: [\"A\", \"B\", \"C\"],\n                  },\n                ])\n              )\n            )\n          }}\n        >\n          {t(\"multiple-item-dropdown-autocomplete\")}\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n","import React from \"react\"\nimport ConfigureInterface from \"../ConfigureInterface\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Fields = styled(\"div\")({})\nconst StyledExpansionPanel = styled(ExpansionPanel)({\n  marginTop: 16,\n  border: \"2px solid #000\",\n})\nconst StyledButton = styled(Button)({\n  width: \"100%\",\n  margin: 16,\n  marginLeft: 0,\n})\n\nexport default ({ iface, onChange }) => {\n  const { t } = useTranslation()\n\n  return (\n    <React.Fragment>\n      <Fields>\n        {(iface.fields || []).map((f, fieldIndex) => (\n          <StyledExpansionPanel key={fieldIndex}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              {f.fieldName}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Box display=\"flex\" flexDirection=\"column\">\n                <TextField\n                  label=\"Field Name\"\n                  value={f.fieldName}\n                  onChange={(e) => {\n                    onChange(\n                      setIn(\n                        [\"fields\", fieldIndex, \"fieldName\"],\n                        e.target.value,\n                        iface\n                      )\n                    )\n                  }}\n                />\n                <ConfigureInterface\n                  isNested\n                  dataset={{ interface: f.interface }}\n                  onChange={(newFieldInterface) => {\n                    onChange({\n                      ...iface,\n                      fields: iface.fields.map((field) =>\n                        field.fieldName === f.fieldName\n                          ? { ...f, interface: newFieldInterface }\n                          : field\n                      ),\n                    })\n                  }}\n                />\n                <Button\n                  onClick={() => {\n                    onChange({\n                      ...iface,\n                      fields: iface.fields.filter(\n                        ({ fieldName }) => fieldName !== f.fieldName\n                      ),\n                    })\n                  }}\n                >\n                  {t(\"remove-field\")}\n                </Button>\n              </Box>\n            </ExpansionPanelDetails>\n          </StyledExpansionPanel>\n        ))}\n        <StyledButton\n          onClick={() => {\n            onChange(\n              setIn(\n                iface,\n                [\"fields\"],\n                (iface.fields || []).concat({\n                  fieldOrder: (iface.fields || []).length,\n                  fieldName: \"New Field\",\n                  interface: {\n                    type: \"empty\",\n                  },\n                })\n              )\n            )\n          }}\n        >\n          {t(\"add-new-field\")}\n        </StyledButton>\n      </Fields>\n    </React.Fragment>\n  )\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ExplanationTextHeader = styled(\"div\")({\n  textAlign: \"center\",\n  paddingTop: 30,\n  paddingBottom: 50,\n  userSelect: \"none\",\n})\n\nconst ExplanationText = styled(\"h3\")({\n  fontWeight: \"bold\",\n  color: colors.grey[500],\n})\n\nconst GithubLink = styled(\"a\")({\n  color: colors.blue[500],\n})\n\nconst Configure3D = () => {\n  const { t } = useTranslation()\n\n  return (\n    <ExplanationTextHeader>\n      <ExplanationText>\n        {t(\"configure-3d-explanation-text-part-1\")}{\" \"}\n        <GithubLink\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/UniversalDataTool/universal-data-tool/issues/20\"\n        >\n          this\n        </GithubLink>{\" \"}\n        {t(\"github-issue\")}.\n      </ExplanationText>\n    </ExplanationTextHeader>\n  )\n}\n\nexport default Configure3D\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"regionTypesAllowed\",\n      title: \"Region Types Allowed\",\n      description: \"What types of regions can be drawn on the image.\",\n      type: \"multiple-dropdown\",\n      choices: [\"bounding-box\", \"polygon\", \"point\"],\n    },\n    {\n      name: \"multipleRegions\",\n      title: \"Can multiple regions be created?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"multipleRegionLabels\",\n      title: \"Multiple Region Labels Allowed?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description:\n        \"If you're labeling regions on an video frames, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      multipleRegions: Boolean(\n        iface.multipleRegions || iface.multipleRegions === undefined\n      ),\n      multipleRegionLabels: Boolean(iface.multipleRegionLabels),\n      regionTypesAllowed: iface.regionTypesAllowed,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n    }),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","import React from \"react\"\n\nexport default ({ iface, onChange }) => {\n  return (\n    <div>\n      We'd like to put a little interface to edit poses or landmarks here, but\n      we need help! Check out this{\" \"}\n      <a href=\"https://github.com/UniversalDataTool/universal-data-tool/issues/307\">\n        Github Issue\n      </a>{\" \"}\n      to learn more! For now just turn to the JSON tab to edit the landmarks\n      manually!\n    </div>\n  )\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport ConfigureImageSegmentation from \"../ConfigureImageSegmentation\"\nimport ConfigureImagePixelSegmentation from \"../ConfigureImagePixelSegmentation\"\nimport ConfigureImageClassification from \"../ConfigureImageClassification\"\nimport ConfigureTextClassification from \"../ConfigureTextClassification\"\nimport ConfigureAudioTranscription from \"../ConfigureAudioTranscription\"\nimport ConfigureTextEntityRecognition from \"../ConfigureTextEntityRecognition\"\nimport ConfigureTextEntityRelations from \"../ConfigureTextEntityRelations\"\nimport ConfigureDataEntry from \"../ConfigureDataEntry\"\nimport ConfigureComposite from \"../ConfigureComposite\"\nimport Configure3D from \"../Configure3D\"\nimport ConfigureVideoSegmentation from \"../ConfigureVideoSegmentation\"\nimport ConfigureImageLandmarkAnnotation from \"../ConfigureImageLandmarkAnnotation\"\n\nconst Container = styled(\"div\")({\n  padding: 24,\n})\n\nconst NoOptions = styled(\"div\")({\n  fontSize: 18,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  color: colors.grey[500],\n  paddingTop: 30,\n  paddingBottom: 50,\n})\n\nexport const ConfigureInterface = ({\n  dataset,\n  onChange,\n  onClickEditJSON,\n  isNested = false,\n}) => {\n  const iface = dataset.interface\n\n  return (\n    <Container>\n      {!iface.type && <NoOptions>Select a Type</NoOptions>}\n      {iface.type === \"image_segmentation\" && (\n        <ConfigureImageSegmentation iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"image_pixel_segmentation\" && (\n        <ConfigureImagePixelSegmentation iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"image_classification\" && (\n        <ConfigureImageClassification iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"composite\" && (\n        <ConfigureComposite iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"data_entry\" && (\n        <ConfigureDataEntry iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"audio_transcription\" && (\n        <ConfigureAudioTranscription iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"text_entity_recognition\" && (\n        <ConfigureTextEntityRecognition iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"text_entity_relations\" && (\n        <ConfigureTextEntityRelations iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"text_classification\" && (\n        <ConfigureTextClassification iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"video_segmentation\" && (\n        <ConfigureVideoSegmentation iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"3d_bounding_box\" && (\n        <Configure3D iface={iface} onChange={onChange} />\n      )}\n      {iface.type === \"image_landmark_annotation\" && (\n        <ConfigureImageLandmarkAnnotation iface={iface} onChange={onChange} />\n      )}\n    </Container>\n  )\n}\n\nexport default ConfigureInterface\n","import React, { useState, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport Button from \"@material-ui/core/Button\"\nimport EditIcon from \"@material-ui/icons/Edit\"\n\nconst useStyles = makeStyles({\n  table: {},\n})\n\nconst hotkeyIconStyle = { marginLeft: 8, width: 16, height: 16 }\n\nexport default ({\n  open,\n  onClose,\n  onChangeHotkey,\n  hotkeyList,\n  onClearHotkeys,\n}) => {\n  const classes = useStyles()\n  const [selectedHotKey, setSelectedHotKey] = useState()\n  const [{ modifier, key }, setCurrentKeyCombo] = useState({})\n\n  useEffect(() => {\n    if (!selectedHotKey) return\n    function keyListener(e) {\n      if ([\"shift\", \"ctrl\", \"cmd\", \"alt\"].includes(e.key.toLowerCase())) {\n        setCurrentKeyCombo({ modifier: e.key.toLowerCase(), key })\n      }\n      if (e.key.length === 1) {\n        setCurrentKeyCombo({ modifier, key: e.key.toLowerCase() })\n      }\n    }\n    window.addEventListener(\"keydown\", keyListener)\n    return () => {\n      window.removeEventListener(\"keydown\", keyListener)\n    }\n  }, [selectedHotKey, key, modifier, setCurrentKeyCombo])\n\n  useEffect(() => {\n    if (!key) return\n    if (modifier) {\n      onChangeHotkey(selectedHotKey, `${modifier} + ${key}`)\n    } else {\n      onChangeHotkey(selectedHotKey, key)\n    }\n    setCurrentKeyCombo({})\n    setSelectedHotKey(null)\n  }, [modifier, key, onChangeHotkey, selectedHotKey])\n\n  return (\n    <SimpleDialog\n      title=\"Manage Keyboard Shortcuts\"\n      actions={[\n        {\n          text: \"Clear Hotkeys\",\n          onClick: onClearHotkeys,\n        },\n      ]}\n      open={open}\n      onClose={onClose}\n    >\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Action</TableCell>\n              <TableCell align=\"right\">Keyboard Shortcut</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {hotkeyList.map((hotkey) => (\n              <TableRow key={hotkey.description}>\n                <TableCell>{hotkey.description}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    onClick={() => {\n                      if (selectedHotKey !== hotkey) {\n                        setSelectedHotKey(hotkey)\n                        setCurrentKeyCombo({})\n                        return\n                      }\n                    }}\n                    style={{ minWidth: 0 }}\n                  >\n                    <b>\n                      {selectedHotKey === hotkey\n                        ? modifier || key\n                          ? `<${modifier ? modifier + \"+\" : \"\"}${key || \"???\"}>`\n                          : \"<Press Any Key>\"\n                        : hotkey.binding}\n                    </b>\n                    {selectedHotKey === hotkey ? (\n                      <EditIcon style={hotkeyIconStyle} />\n                    ) : (\n                      <EditIcon style={hotkeyIconStyle} />\n                    )}\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </SimpleDialog>\n  )\n}\n","import React, { useState } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { useUpdate } from \"react-use\"\nimport { styled } from \"@material-ui/core/styles\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { useHotkeyStorage } from \"../HotkeyStorage\"\nimport KeyboardShortcutManagerDialog from \"../KeyboardShortcutManagerDialog\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Button = styled(MuiButton)({\n  margin: 8,\n})\n\nexport const AdvancedOptionsView = ({ onClickEditJSON, onClearLabelData }) => {\n  const forceUpdate = useUpdate()\n  const posthog = usePosthog()\n  const { fromConfig, setInConfig } = useAppConfig()\n  const { hotkeys, changeHotkey, clearHotkeys } = useHotkeyStorage()\n  const [hotkeyDialogOpen, setHotkeyDialogOpen] = useState(false)\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  return (\n    <Box padding={2}>\n      <Button\n        onClick={() => {\n          if (\n            window.confirm(\n              \"Are you sure you want to delete all your label data? Click OK to delete.\"\n            )\n          ) {\n            onClearLabelData()\n          }\n        }}\n        variant=\"outlined\"\n      >\n        {t(\"clear-labels\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          if (posthog.has_opted_out_capturing()) {\n            posthog.opt_in_capturing()\n          } else {\n            posthog.opt_out_capturing()\n          }\n          forceUpdate()\n        }}\n      >\n        {posthog.has_opted_out_capturing() ? \"Enable\" : \"Disable\"}{\" \"}\n        {t(\"telemetry\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          // TODO store in appConfig\n          const response = window.prompt(\n            \"Input URL for new collaboration server (empty to use universaldatatool.com):\",\n            window.localStorage.getItem(\"CUSTOM_COLLABORATION_SERVER\") || \"\"\n          )\n          if (response === null) return\n          window.localStorage.setItem(\"CUSTOM_COLLABORATION_SERVER\", response)\n          window.location.reload()\n        }}\n      >\n        {t(\"custom-collaboration-server\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          setInConfig(\n            \"labelhelp.disabled\",\n            !Boolean(fromConfig(\"labelhelp.disabled\"))\n          )\n        }}\n      >\n        {fromConfig(\"labelhelp.disabled\") ? \"Enable\" : \"Disable\"}{\" \"}\n        {t(\"label-help\")}\n      </Button>\n      {!fromConfig(\"labelhelp.disabled\") && (\n        <Button\n          variant=\"outlined\"\n          disabled={Boolean(fromConfig(\"labelhelp.disabled\"))}\n          onClick={() => {\n            const response = window.prompt(\n              \"Label Help API Key:\",\n              fromConfig(\"labelhelp.apikey\") || \"\"\n            )\n            if (response === null) return\n            setInConfig(\"labelhelp.apikey\", response)\n          }}\n        >\n          {t(\"label-help-api-key\")}\n        </Button>\n      )}\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          setHotkeyDialogOpen(true)\n        }}\n      >\n        Change/View Hotkeys\n      </Button>\n      <KeyboardShortcutManagerDialog\n        open={hotkeyDialogOpen}\n        hotkeyList={hotkeys}\n        onClose={() => setHotkeyDialogOpen(false)}\n        onClearHotkeys={clearHotkeys}\n        onChangeHotkey={(hotkey, newBinding) =>\n          changeHotkey(hotkey.id, newBinding)\n        }\n      />\n    </Box>\n  )\n}\n\nexport default AdvancedOptionsView\n","import React from \"react\"\nimport templates from \"../StartingPage/templates\"\nimport Button from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  padding: 24,\n  \"&.emptyState\": {\n    textAlign: \"center\",\n    backgroundColor: colors.blue[800],\n    minHeight: \"71vh\",\n    padding: 64,\n    \"& .bigText\": {\n      textAlign: \"left\",\n      fontSize: 48,\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      marginBottom: 48,\n    },\n  },\n})\n\nconst BigButton = styled(Button)({\n  padding: 10,\n  width: 200,\n  height: 150,\n  boxShadow: \"0px 3px 5px rgba(0,0,0,0.3)\",\n  margin: 12,\n  \"& .bigIcon\": {\n    marginTop: 16,\n    width: 64,\n    height: 64,\n  },\n  transition: \"transform 100ms\",\n  \"&:hover\": {\n    backgroundColor: \"#fff\",\n    transform: \"scale(1.04,1.04)\",\n  },\n  backgroundColor: colors.blue[100],\n  \"&.selected\": {\n    backgroundColor: \"#fff\",\n  },\n})\n\nexport const BigInterfaceSelect = ({ onChange, currentInterfaceType }) => {\n  return (\n    <Container className=\"emptyState\">\n      <div className=\"bigText\">Choose an Interface:</div>\n      {templates\n        .filter((t) => t.name !== \"Empty\")\n        .map((template) => (\n          <BigButton\n            key={template.name}\n            className={\n              currentInterfaceType === template.dataset.interface.type\n                ? \"selected\"\n                : \"\"\n            }\n            disabled={currentInterfaceType === template.dataset.interface.type}\n            onClick={() => onChange(template.dataset.interface)}\n          >\n            <div>\n              <div>{template.name}</div>\n              <div>\n                <template.Icon className=\"bigIcon\" />\n              </div>\n            </div>\n          </BigButton>\n        ))}\n    </Container>\n  )\n}\n\nexport default BigInterfaceSelect\n","import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\nimport enTranslation from \"./locales/en/translation.json\"\nimport frTranslation from \"./locales/fr/translations.json\"\nimport cnTranslation from \"./locales/cn/translations.json\"\nimport ptBrTranslation from \"./locales/pt-br/translation.json\"\nimport nlTranslation from \"./locales/nl/translation.json\"\n\nimport LanguageDetector from \"i18next-browser-languagedetector\"\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n\n    resources: {\n      fr: {\n        translation: frTranslation,\n      },\n      en: {\n        translation: enTranslation,\n      },\n      cn: {\n        translation: cnTranslation,\n      },\n      pt: {\n        translation: ptBrTranslation,\n      },\n      nl: {\n        translation: nlTranslation,\n      },\n    },\n  })\n\nexport default i18n\n","import { useState, useMemo, useDebugValue } from \"react\"\n\nexport default (clobber, defaultIfNotClobbered) => {\n  const isClobbered = useMemo(\n    () => clobber !== undefined,\n    //eslint-disable-next-line\n    []\n  )\n  useDebugValue(isClobbered ? \"Clobbered\" : \"Not Clobbered\")\n  const [notClobberedValue, setNotClobberedValue] = useState(\n    defaultIfNotClobbered\n  )\n  if (isClobbered) {\n    return [clobber, undefined]\n  } else {\n    return [notClobberedValue, setNotClobberedValue]\n  }\n}\n","import React from \"react\"\nimport NLPAnnotator from \"react-nlp-annotate\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nexport const TextClassification = (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const { annotation } = props.samples[currentSampleIndex]\n  // TODO remove legacy support for availableLabels\n  if (!props.interface.labels && props.interface.availableLabels) {\n    props.interface.labels = props.interface.availableLabels\n  }\n  const initialLabels = annotation\n    ? typeof annotation === \"string\"\n      ? [annotation]\n      : annotation\n    : undefined\n  if (!props.interface.labels) {\n    throw new Error(\"Labels not defined. Try defining some labels in Setup\")\n  }\n  let labels = props.interface.labels\n    .map((l) =>\n      typeof l === \"string\" ? { id: l, description: l, displayName: l } : l\n    )\n    .map((l) => (!l.displayName ? { ...l, displayName: l.id } : l))\n  return (\n    <NLPAnnotator\n      key={currentSampleIndex}\n      type=\"label-document\"\n      labels={labels}\n      multipleLabels={props.interface.multiple}\n      document={props.samples[currentSampleIndex].document}\n      initialLabels={initialLabels}\n      hotkeysEnabled={!props.disableHotkeys}\n      onPrev={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex - 1)\n        } else {\n          props.onExit(\"go-to-previous\")\n        }\n      }}\n      onNext={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex + 1)\n        } else {\n          props.onExit(\"go-to-next\")\n        }\n      }}\n      onFinish={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        props.onExit()\n      }}\n    />\n  )\n}\n\nexport default TextClassification\n","export const simpleSequenceToEntitySequence = (simpleSeq) => {\n  const entSeq = []\n  let charsPassed = 0\n  for (const seq of simpleSeq || []) {\n    if (seq.label) {\n      entSeq.push({\n        text: seq.text,\n        label: seq.label,\n        start: charsPassed,\n        end: charsPassed + seq.text.length,\n      })\n    }\n    charsPassed += seq.text.length\n  }\n  return entSeq\n}\n\nexport const simpleSequenceAndRelationsToEntitySequence = ({\n  sequence: simpleSeq,\n  relationships,\n}) => {\n  const textIdsInRelation = new Set(\n    (relationships || []).flatMap((r) => [r.from, r.to])\n  )\n\n  const entSeq = []\n  let charsPassed = 0\n  for (const seq of simpleSeq || []) {\n    if (seq.label || (seq.textId && textIdsInRelation.has(seq.textId))) {\n      entSeq.push({\n        text: seq.text,\n        textId: seq.textId,\n        label: seq.label,\n        start: charsPassed,\n        end: charsPassed + seq.text.length - 1,\n      })\n    }\n    charsPassed += seq.text.length\n  }\n  return { entities: entSeq, relations: relationships }\n}\n\nexport const entitySequenceToSimpleSeq = (doc, entSeq) => {\n  if (!entSeq) return undefined\n  const simpleSeq = []\n  entSeq = [...entSeq]\n  entSeq.sort((a, b) => a.start - b.start)\n  let nextEntity = 0\n  for (let i = 0; i < doc.length; i++) {\n    if ((entSeq[nextEntity] || {}).start === i) {\n      simpleSeq.push({\n        text: entSeq[nextEntity].text,\n        label: entSeq[nextEntity].label,\n        textId:\n          entSeq[nextEntity].textId || Math.random().toString(36).slice(-6),\n      })\n      // i = entSeq[nextEntity].end\n      i += entSeq[nextEntity].text.length - 1\n      simpleSeq.push({ text: \"\" })\n      nextEntity += 1\n    } else {\n      if (simpleSeq.length === 0 || simpleSeq[simpleSeq.length - 1].label) {\n        simpleSeq.push({\n          text: doc[i],\n          textId: Math.random().toString(36).slice(-6),\n        })\n      } else {\n        simpleSeq[simpleSeq.length - 1].text += doc[i]\n      }\n    }\n  }\n  if (simpleSeq.map((s) => s.text).join(\"\") !== doc) {\n    throw new Error(\n      \"Combining annotation entities with document didn't match document.\\n\\n\" +\n        simpleSeq.map((s) => s.text).join(\"\") +\n        \"\\n\\nvs\\n\\n\" +\n        doc\n    )\n  }\n  return simpleSeq.filter((item) => item.text.length > 0)\n}\n","import React from \"react\"\nimport NLPAnnotator from \"react-nlp-annotate\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\nimport Box from \"@material-ui/core/Box\"\nimport {\n  simpleSequenceToEntitySequence,\n  entitySequenceToSimpleSeq,\n} from \"./convert-react-nlp-annotate-types\"\n\nexport const TextEntityRecognition = (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const initialSequence = props.samples[currentSampleIndex].annotation\n    ? entitySequenceToSimpleSeq(\n        props.samples[currentSampleIndex].document,\n        props.samples[currentSampleIndex].annotation.entities\n      )\n    : undefined\n\n  if (!props.interface.labels && !props.interface.availableLabels) {\n    throw new Error(\"Labels not defined. Try adding some labels in setup.\")\n  }\n\n  return (\n    <NLPAnnotator\n      key={currentSampleIndex}\n      titleContent={<Box paddingLeft={4}>Sample {currentSampleIndex}</Box>}\n      type=\"label-sequence\"\n      document={props.samples[currentSampleIndex].document}\n      labels={props.interface.labels || props.interface.availableLabels}\n      initialSequence={initialSequence}\n      hotkeysEnabled={!props.disableHotkeys}\n      onPrev={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, {\n          entities: simpleSequenceToEntitySequence(result),\n        })\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex - 1)\n        } else {\n          props.onExit(\"go-to-previous\")\n        }\n      }}\n      onNext={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, {\n          entities: simpleSequenceToEntitySequence(result),\n        })\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex + 1)\n        } else {\n          props.onExit(\"go-to-next\")\n        }\n      }}\n      onFinish={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, {\n          entities: simpleSequenceToEntitySequence(result),\n        })\n        props.onExit()\n      }}\n    />\n  )\n}\n\nexport default TextEntityRecognition\n","import React from \"react\"\nimport NLPAnnotator from \"react-nlp-annotate\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\nimport Box from \"@material-ui/core/Box\"\nimport {\n  simpleSequenceAndRelationsToEntitySequence,\n  entitySequenceToSimpleSeq,\n} from \"../TextEntityRecognition/convert-react-nlp-annotate-types\"\n\nexport const TextEntityRelations = (props) => {\n  console.log(props)\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const initialSequence = props.samples[currentSampleIndex].annotation\n    ? entitySequenceToSimpleSeq(\n        props.samples[currentSampleIndex].document,\n        props.samples[currentSampleIndex].annotation.entities\n      )\n    : undefined\n\n  const initialRelations =\n    props.samples[currentSampleIndex].annotation?.relations || []\n\n  if (!props.interface.relationLabels) {\n    throw new Error(\n      \"Relation labels not defined. Try adding some labels in setup.\"\n    )\n  }\n\n  console.log({ initialSequence, initialRelations })\n\n  return (\n    <NLPAnnotator\n      key={currentSampleIndex}\n      titleContent={<Box paddingLeft={4}>Sample {currentSampleIndex}</Box>}\n      type=\"label-relationships\"\n      document={props.samples[currentSampleIndex].document}\n      entityLabels={props.interface.entityLabels}\n      relationshipLabels={props.interface.relationLabels}\n      initialSequence={initialSequence}\n      initialRelationships={initialRelations}\n      hotkeysEnabled={!props.disableHotkeys}\n      onPrev={(result) => {\n        props.onSaveTaskOutputItem(\n          currentSampleIndex,\n          simpleSequenceAndRelationsToEntitySequence(result)\n        )\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex - 1)\n        } else {\n          props.onExit(\"go-to-previous\")\n        }\n      }}\n      onNext={(result) => {\n        props.onSaveTaskOutputItem(\n          currentSampleIndex,\n          simpleSequenceAndRelationsToEntitySequence(result)\n        )\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex + 1)\n        } else {\n          props.onExit(\"go-to-next\")\n        }\n      }}\n      onFinish={(result) => {\n        props.onSaveTaskOutputItem(\n          currentSampleIndex,\n          simpleSequenceAndRelationsToEntitySequence(result)\n        )\n        props.onExit()\n      }}\n    />\n  )\n}\n\nexport default TextEntityRelations\n","// @flow\n\n// RIA = React Image Annotate\n\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandomColor() {\n  var h = getRandomInt(0, 360)\n  var s = 100\n  var l = 50\n  return \"hsl(\"\n    .concat(h.toString(), \",\")\n    .concat(s.toString(), \"%,\")\n    .concat(l.toString(), \"%)\")\n}\n\nexport const rid = () => Math.random().toString().split(\".\")[1]\n\nexport const convertToRIARegionFmt = (region) => {\n  switch (region.regionType) {\n    case \"bounding-box\": {\n      return {\n        id: region.id || rid(),\n        cls: region.classification,\n        tags: region.labels,\n        color: region.color || getRandomColor(),\n        type: \"box\",\n        x: region.centerX - region.width / 2,\n        y: region.centerY - region.height / 2,\n        w: region.width,\n        h: region.height,\n      }\n    }\n    case \"point\": {\n      return {\n        id: region.id || rid(),\n        type: \"point\",\n        tags: region.labels,\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        x: region.x,\n        y: region.y,\n      }\n    }\n    case \"polygon\": {\n      return {\n        id: region.id || rid(),\n        type: \"polygon\",\n        tags: region.labels,\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        open: false,\n        points: region.points.map((p) => [p.x, p.y]),\n      }\n    }\n    case \"line\":\n    case \"pixel-mask\": {\n      throw new Error(`Unsupported region \"${JSON.stringify(region)}\"`)\n    }\n    case \"keypoints\": {\n      return {\n        id: region.id || rid(),\n        type: \"keypoints\",\n        keypointsDefinitionId: region.keypointsDefinitionId,\n        points: region.points,\n      }\n    }\n    default:\n      return null\n  }\n}\n\nexport const convertFromRIARegionFmt = (riaRegion) => {\n  switch (riaRegion.type) {\n    case \"point\": {\n      return {\n        regionType: \"point\",\n        id: riaRegion.id,\n        x: riaRegion.x,\n        y: riaRegion.y,\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n      }\n    }\n    case \"box\": {\n      return {\n        regionType: \"bounding-box\",\n        id: riaRegion.id,\n        centerX: riaRegion.x + riaRegion.w / 2,\n        centerY: riaRegion.y + riaRegion.h / 2,\n        width: riaRegion.w,\n        height: riaRegion.h,\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n      }\n    }\n    case \"polygon\": {\n      return {\n        regionType: \"polygon\",\n        id: riaRegion.id,\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n        points: riaRegion.points.map(([x, y]) => ({ x, y })),\n      }\n    }\n    case \"keypoints\": {\n      return {\n        id: riaRegion.id || rid(),\n        keypointsDefinitionId: riaRegion.keypointsDefinitionId,\n        regionType: \"keypoints\",\n        points: riaRegion.points,\n      }\n    }\n    default:\n      throw new Error(`Unsupported riaRegion \"${JSON.stringify(riaRegion)}\"`)\n  }\n}\n\nexport const convertToRIAImageFmt = ({\n  title,\n  taskDatum: td,\n  index: i,\n  output,\n}) => {\n  td = td || {}\n  const regions = !output\n    ? undefined\n    : Array.isArray(output)\n    ? output.map(convertToRIARegionFmt)\n    : [convertToRIARegionFmt(output)]\n\n  if (td.imageUrl) {\n    return {\n      src: td.imageUrl,\n      name: title || `Sample ${i}`,\n      regions,\n    }\n  } else if (td.videoUrl && td.videoFrameAt !== undefined) {\n    return {\n      src: td.videoUrl,\n      frameTime: td.videoFrameAt,\n      name: title || `Sample ${i}`,\n      regions,\n    }\n  }\n  throw new Error(`Task Datum not supported \"${JSON.stringify(td)}\"`)\n}\n\nexport const convertToRIAKeyframes = (keyframes) => {\n  const newKeyframes = {}\n  for (const key in keyframes) {\n    newKeyframes[key] = {\n      regions: keyframes[key].regions.map(convertToRIARegionFmt),\n    }\n  }\n  return newKeyframes\n}\n","// @flow\n\nimport React, { useState, useMemo } from \"react\"\nimport Annotator from \"react-image-annotate\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useEventCallback from \"use-event-callback\"\nimport {\n  convertFromRIARegionFmt,\n  convertToRIAImageFmt,\n} from \"../../utils/ria-format.js\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nconst regionTypeToTool = {\n  \"bounding-box\": \"create-box\",\n  polygon: [\"create-polygon\", \"create-expanding-line\"],\n  point: \"create-point\",\n  \"allowed-area\": \"modify-allowed-area\",\n}\n\nconst Container = styled(\"div\")({\n  \"& .fullscreen\": { height: \"100%\" },\n})\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport default ({\n  sampleIndex: globalSampleIndex,\n  interface: iface,\n  sampleIndex,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  // TODO DEPRECATE onSaveTaskOutputItem\n  onSaveTaskOutputItem,\n  onModifySample,\n}) => {\n  // TODO remove legacy \"availableLabels\" support\n  if (iface.availableLabels && !iface.labels) {\n    iface.labels = iface.availableLabels\n  }\n\n  const [selectedIndex, setSelectedIndex] = useClobberedState(\n    globalSampleIndex,\n    0\n  )\n  const [showTags, changeShowTags] = useState(true)\n  const [selectedTool, changeSelectedTool] = useState(\"select\")\n\n  const { regionTypesAllowed = [\"bounding-box\"] } = iface\n\n  const isClassification = !Boolean(iface.multipleRegionLabels)\n  const isPixel = iface.type === \"image_pixel_segmentation\"\n\n  const saveCurrentIndexAnnotation = useEventCallback((output) => {\n    const img = output.images[0]\n    const annotation = multipleRegions\n      ? (img.regions || []).map(convertFromRIARegionFmt)\n      : convertToRIAImageFmt((img.regions || [])[0])\n    if (onModifySample) {\n      const { x, y, w: width, h: height } = output.allowedArea || {}\n      onModifySample(selectedIndex, {\n        annotation,\n        ...(output.allowedArea\n          ? {\n              allowedArea: { x, y, width, height },\n            }\n          : {}),\n      })\n    } else {\n      onSaveTaskOutputItem(selectedIndex, annotation)\n    }\n  })\n\n  const labelProps = useMemo(\n    () =>\n      isPixel\n        ? {\n            regionClsList: [\"background\"]\n              .concat(iface.labels || [])\n              .map((l) => (typeof l === \"string\" ? l : l.id)),\n          }\n        : isClassification\n        ? {\n            regionClsList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          }\n        : {\n            regionTagList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          },\n    [isClassification, iface.labels, isPixel]\n  )\n\n  const multipleRegions =\n    iface.multipleRegions || iface.multipleRegions === undefined\n\n  const onExit = useEventCallback((output, nextAction) => {\n    saveCurrentIndexAnnotation(output)\n    changeShowTags(output.showTags)\n    changeSelectedTool(output.selectedTool)\n    if (containerProps.onExit) containerProps.onExit(nextAction)\n  })\n  const onNextImage = useEventCallback((output) => {\n    if (selectedIndex + 1 >= samples.length) {\n      onExit(output, \"go-to-next\")\n    } else {\n      saveCurrentIndexAnnotation(output)\n      if (setSelectedIndex) {\n        setSelectedIndex(selectedIndex + 1)\n      } else {\n        onExit(output, \"go-to-next\")\n      }\n    }\n  })\n  const onPrevImage = useEventCallback((output) => {\n    if (selectedIndex - 1 < 0) {\n      onExit(output, \"go-to-previous\")\n    } else {\n      saveCurrentIndexAnnotation(output)\n      if (setSelectedIndex) {\n        setSelectedIndex(selectedIndex - 1)\n      } else {\n        onExit(output, \"go-to-previous\")\n      }\n    }\n  })\n\n  const singleImageList = useMemo(() => {\n    return [\n      convertToRIAImageFmt({\n        title: containerProps.datasetName || `Sample ${selectedIndex}`,\n        taskDatum: samples[selectedIndex],\n        output: samples[selectedIndex].annotation,\n        selectedIndex,\n      }),\n    ]\n    // eslint-disable-next-line\n  }, [selectedIndex, containerProps.datasetName])\n\n  const enabledTools =\n    iface.type === \"image_pixel_segmentation\"\n      ? undefined\n      : useMemo(\n          () =>\n            [\"select\"].concat(\n              regionTypesAllowed\n                .flatMap((rt) => regionTypeToTool[rt])\n                .filter(Boolean)\n            ),\n          [regionTypesAllowed]\n        )\n\n  const allowedArea = useMemo(() => {\n    if (!iface.allowedArea && !samples[selectedIndex].allowedArea)\n      return undefined\n    const { x, y, width: w, height: h } =\n      samples[selectedIndex].allowedArea || iface.allowedArea\n    return { x, y, w, h }\n    // eslint-disable-next-line\n  }, [iface.allowedArea, samples[selectedIndex].allowedArea])\n  return (\n    <Container\n      style={{\n        height: containerProps.height || \"calc(100% - 70px)\",\n        minHeight: 600,\n        width: \"100%\",\n      }}\n    >\n      <Annotator\n        key={globalSampleIndex}\n        fullImageSegmentationMode={isPixel}\n        selectedImage={0}\n        taskDescription={iface.description}\n        showTags={showTags}\n        {...labelProps}\n        autoSegmentationOptions={iface.autoSegmentationEngine}\n        allowedArea={allowedArea}\n        onNextImage={onNextImage}\n        onPrevImage={onPrevImage}\n        enabledTools={enabledTools}\n        selectedTool={selectedTool}\n        images={singleImageList}\n        onExit={onExit}\n      />\n    </Container>\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport Workspace from \"react-material-workspace-layout/Workspace\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst HeaderLeftSideContainer = styled(\"div\")({\n  fontSize: 24,\n  fontWeight: \"bold\",\n})\n\nexport default ({\n  children,\n  onNext,\n  onPrev,\n  currentSampleIndex = 0,\n  numberOfSamples = 1,\n  globalSampleIndex = 1,\n  titleContent,\n  onClickHeaderItem,\n}: any) => {\n  const headerItems = useMemo(\n    () =>\n      [\n        (currentSampleIndex > 0 || onPrev) && {\n          name: \"Prev\",\n          onClick: onPrev,\n          disabled: currentSampleIndex === 0,\n        },\n        (numberOfSamples > currentSampleIndex + 1 || onNext) && {\n          name: \"Next\",\n          onClick: onNext,\n          disabled: currentSampleIndex >= numberOfSamples - 1,\n        },\n        { name: \"Save\" },\n      ].filter(Boolean),\n    [currentSampleIndex, numberOfSamples, onNext, onPrev]\n  )\n  return (\n    <Workspace\n      headerLeftSide={\n        titleContent === undefined ? (\n          <Box paddingLeft={2}>\n            <HeaderLeftSideContainer>\n              Sample{\" \"}\n              {numberOfSamples > 1\n                ? `${currentSampleIndex} / ${numberOfSamples}`\n                : `${globalSampleIndex}`}\n            </HeaderLeftSideContainer>\n          </Box>\n        ) : (\n          titleContent\n        )\n      }\n      onClickHeaderItem={onClickHeaderItem}\n      headerItems={headerItems}\n      iconSidebarItems={[]}\n      rightSidebarItems={[]}\n    >\n      <Box padding={2} style={{ width: \"100%\" }}>\n        {children}\n      </Box>\n    </Workspace>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect, useMemo } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport without from \"lodash/without\"\nimport WorkspaceContainer from \"../WorkspaceContainer\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nconst brightColors = [\n  colors.blue[600],\n  colors.green[600],\n  colors.red[600],\n  colors.deepOrange[600],\n  colors.pink[600],\n  colors.teal[600],\n  colors.deepPurple[600],\n  colors.indigo[600],\n  colors.blue[600],\n  colors.cyan[600],\n  colors.purple[600],\n]\n\nconst letters = \"abcdefghijklmnopqrstuvwxyz1234567890\".split(\"\")\nconst getRandomColor = (label) => {\n  const hashInt = label.id\n    .split(\"\")\n    .reduce((acc, v, i) => acc + (letters.indexOf(v) + 1), 0)\n  return brightColors[hashInt % brightColors.length]\n}\n\nconst Container = styled(\"div\")({\n  maxWidth: \"100vw\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nconst ImageContainer = styled(\"div\")({\n  position: \"relative\",\n  display: \"flex\",\n  flexGrow: 1,\n})\n\nconst Image = styled(\"img\")({\n  display: \"inline-block\",\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  width: \"100%\",\n  height: \"100%\",\n  objectFit: \"contain\",\n})\n\nconst ButtonsContainer = styled(\"div\")({\n  paddingLeft: 50,\n  paddingRight: 50,\n  marginTop: 8,\n  textAlign: \"center\",\n  flexShrink: 0,\n})\n\nconst CheckButton = styled(Button)({\n  margin: 8,\n  color: \"#fff\",\n  fontSize: 18,\n  paddingRight: 16,\n  transition: \"transform 50ms ease\",\n})\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport const ImageClassification = ({\n  sampleIndex: globalSampleIndex,\n  interface: iface,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  onSaveTaskOutputItem,\n}) => {\n  // TODO remove legacy \"availableLabels\" support\n  if (iface.availableLabels && !iface.labels) {\n    iface.labels = iface.availableLabels\n  }\n\n  const disableHotkeys = containerProps.disableHotkeys\n\n  if (!iface.labels)\n    throw new Error(\"No labels defined. Add some labels in Setup to continue.\")\n  const [sampleIndex, setSampleIndex] = useClobberedState(globalSampleIndex, 0)\n\n  const [enlargedLabel, changeEnlargedLabel] = useState(null)\n  const [currentOutput, changeCurrentOutput] = useState(emptyArr)\n  const labels = useMemo(\n    () =>\n      iface.labels.map((l) =>\n        typeof l === \"string\" ? { id: l, description: l } : l\n      ),\n    [iface.labels]\n  )\n\n  const onDone = useEventCallback(() => {\n    if (containerProps.onExit) containerProps.onExit()\n  })\n  const onNextNoSave = useEventCallback(() => {\n    if (containerProps.onExit) {\n      containerProps.onExit(\"go-to-next\")\n    }\n  })\n  const onNext = useEventCallback((newOutput) => {\n    onSaveTaskOutputItem(sampleIndex, newOutput || currentOutput)\n    if (setSampleIndex && sampleIndex !== samples.length - 1) {\n      setSampleIndex(sampleIndex + 1)\n    } else {\n      if (containerProps.onExit) containerProps.onExit(\"go-to-next\")\n    }\n  })\n  const onPrev = useEventCallback(() => {\n    if (setSampleIndex && sampleIndex > 0) {\n      setSampleIndex(sampleIndex - 1)\n    } else {\n      if (containerProps.onExit) containerProps.onExit(\"go-to-previous\")\n    }\n  })\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      changeEnlargedLabel(null)\n    }, 100)\n    return () => clearTimeout(timeout)\n  }, [enlargedLabel])\n\n  const onClickLabel = useEventCallback((label) => {\n    changeEnlargedLabel(label)\n    let newOutput\n    if ((currentOutput || []).includes(label.id)) {\n      newOutput = without(currentOutput, label.id)\n    } else {\n      if (iface.allowMultiple) {\n        newOutput = currentOutput.concat([label.id])\n      } else {\n        newOutput = label.id\n      }\n    }\n\n    changeCurrentOutput(newOutput)\n    if (!iface.allowMultiple && newOutput.length > 0) {\n      onNext(newOutput)\n    }\n  })\n\n  useEffect(() => {\n    let newOutput = samples[sampleIndex].annotation\n    if (!newOutput) newOutput = []\n    if (typeof newOutput === \"string\") newOutput = [newOutput]\n    changeCurrentOutput(newOutput)\n  }, [sampleIndex, globalSampleIndex, samples])\n\n  const [hotkeyMap, labelKeyMap] = useMemo(() => {\n    if (disableHotkeys) return [{}, {}]\n    const hotkeyMap = {\n      \" \": onNext,\n      backspace: onPrev,\n      enter: onDone,\n      rightarrow: onNext,\n      leftarrow: onPrev,\n    }\n    const labelKeyMap = {}\n    for (let label of labels) {\n      const nextAvailableLetter = label.id\n        .split(\"\")\n        .filter((l) => letters.includes(l))\n        .find((l) => !hotkeyMap[l.toLowerCase()])\n      if (!nextAvailableLetter) continue\n      hotkeyMap[nextAvailableLetter] = () => onClickLabel(label)\n      labelKeyMap[label.id] = nextAvailableLetter\n    }\n    return [hotkeyMap, labelKeyMap]\n  }, [labels, onClickLabel, onDone, onNext, onPrev, disableHotkeys])\n\n  useEffect(() => {\n    if (disableHotkeys) return\n    const onKeyDown = (e) => {\n      const key = e.key.toLowerCase()\n      if (hotkeyMap[key]) {\n        hotkeyMap[key]()\n      }\n    }\n    window.addEventListener(\"keydown\", onKeyDown)\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown)\n    }\n  }, [hotkeyMap, disableHotkeys])\n\n  return (\n    <WorkspaceContainer\n      onNext={onNextNoSave}\n      onPrev={onPrev}\n      onClickHeaderItem={onDone}\n      numberOfSamples={samples.length}\n      currentSampleIndex={sampleIndex}\n      globalSampleIndex={globalSampleIndex}\n    >\n      <Container\n        style={{\n          height: containerProps.height || \"calc(100% - 70px)\",\n          minHeight: 600,\n        }}\n      >\n        <ImageContainer>\n          <Image src={samples[sampleIndex].imageUrl} />\n        </ImageContainer>\n        <ButtonsContainer>\n          {labels.map((label) => (\n            <CheckButton\n              key={label.id}\n              onClick={() => onClickLabel(label)}\n              style={{\n                backgroundColor: getRandomColor(label),\n                transform:\n                  enlargedLabel === label ? \"scale(1.1,1.1)\" : undefined,\n              }}\n            >\n              <Checkbox\n                style={{ color: \"#fff\" }}\n                checked={\n                  typeof currentOutput === \"object\"\n                    ? currentOutput.includes(label.id)\n                    : currentOutput === label.id\n                }\n              />\n              {label.id}\n              {labelKeyMap[label.id] ? ` (${labelKeyMap[label.id]})` : \"\"}\n            </CheckButton>\n          ))}\n        </ButtonsContainer>\n      </Container>\n    </WorkspaceContainer>\n  )\n}\n\nexport default ImageClassification\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Annotator from \"react-image-annotate\"\nimport useEventCallback from \"use-event-callback\"\nimport {\n  convertFromRIARegionFmt,\n  convertToRIAKeyframes,\n} from \"../../utils/ria-format.js\"\n\nconst regionTypeToTool = {\n  \"bounding-box\": \"create-box\",\n  polygon: \"create-polygon\",\n  \"full-segmentation\": \"create-polygon\",\n  point: \"create-point\",\n}\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport default ({\n  interface: iface,\n  sampleIndex,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  onSaveTaskOutputItem,\n}) => {\n  const { regionTypesAllowed = [\"bounding-box\"] } = iface\n\n  const isClassification = !Boolean(iface.multipleRegionLabels)\n\n  const labelProps = useMemo(\n    () =>\n      isClassification\n        ? {\n            regionClsList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          }\n        : {\n            regionTagList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          },\n    [isClassification, iface.labels]\n  )\n\n  const getUDTKeyFrames = (riaOutput) => {\n    const newKeyframes = {}\n    for (const key in riaOutput.keyframes) {\n      newKeyframes[key] = {\n        regions: riaOutput.keyframes[key].regions.map(convertFromRIARegionFmt),\n      }\n    }\n    return newKeyframes\n  }\n\n  const onExit = useEventCallback((output) => {\n    const annotation = { keyframes: getUDTKeyFrames(output) }\n    onSaveTaskOutputItem(sampleIndex, annotation)\n    if (containerProps.onExit) containerProps.onExit()\n  })\n\n  const onNext = useEventCallback((output) => {\n    const annotation = { keyframes: getUDTKeyFrames(output) }\n    onSaveTaskOutputItem(sampleIndex, annotation)\n    if (containerProps.onExit) {\n      containerProps.onExit(\"go-to-next\")\n    }\n  })\n\n  const onPrev = useEventCallback((output) => {\n    const annotation = { keyframes: getUDTKeyFrames(output) }\n    onSaveTaskOutputItem(sampleIndex, annotation)\n    if (containerProps.onExit) {\n      containerProps.onExit(\"go-to-previous\")\n    }\n  })\n\n  const enabledTools = useMemo(\n    () =>\n      [\"select\"].concat(\n        regionTypesAllowed.map((rt) => regionTypeToTool[rt]).filter(Boolean)\n      ),\n    [regionTypesAllowed]\n  )\n\n  if (samples.length === 0) throw new Error(\"No sample data provided selected\")\n  if (!samples[sampleIndex].videoUrl)\n    throw new Error(\"Sample must have videoUrl\")\n\n  const annotation = samples[sampleIndex].annotation || {}\n\n  return (\n    <div\n      style={{\n        height: containerProps.height || \"calc(100vh - 70px)\",\n        width: \"100%\",\n        minHeight: 600,\n      }}\n    >\n      <Annotator\n        key={sampleIndex}\n        taskDescription={iface.description}\n        {...labelProps}\n        enabledTools={enabledTools}\n        keyframes={convertToRIAKeyframes(annotation?.keyframes || {})}\n        onNextImage={onNext}\n        onPrevImage={onPrev}\n        videoName={samples[sampleIndex].customId || \"\"}\n        videoTime={0}\n        videoSrc={samples[sampleIndex].videoUrl}\n        onExit={onExit}\n      />\n    </div>\n  )\n}\n","// @flow weak\n\nimport React from \"react\"\nimport NLPAnnotator from \"react-nlp-annotate\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\nimport Box from \"@material-ui/core/Box\"\n\nexport default (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n\n  const sample = props.samples[currentSampleIndex]\n\n  return (\n    <NLPAnnotator\n      key={currentSampleIndex}\n      titleContent={<Box paddingLeft={4}>Sample {currentSampleIndex}</Box>}\n      type=\"transcribe\"\n      audio={sample.audioUrl}\n      phraseBank={props.phraseBank}\n      initialTranscriptionText={sample.annotation || \"\"}\n      onPrev={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex - 1)\n        } else {\n          props.onExit(\"go-to-previous\")\n        }\n      }}\n      onNext={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex + 1)\n        } else {\n          props.onExit(\"go-to-next\")\n        }\n      }}\n      onFinish={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (props.onExit) props.onExit()\n      }}\n    />\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Annotator from \"react-image-annotate\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useEventCallback from \"use-event-callback\"\nimport {\n  convertFromRIARegionFmt,\n  convertToRIAImageFmt,\n} from \"../../utils/ria-format.js\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nconst Container = styled(\"div\")({\n  \"& .fullscreen\": { height: \"100%\" },\n})\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nconst posingTools = [\"create-keypoints\"]\n\nexport default ({\n  sampleIndex: globalSampleIndex,\n  interface: iface,\n  sampleIndex,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  onSaveTaskOutputItem,\n  onModifySample,\n}) => {\n  const [selectedIndex, setSelectedIndex] = useClobberedState(\n    globalSampleIndex,\n    0\n  )\n\n  const saveCurrentIndexAnnotation = useEventCallback((output) => {\n    const img = output.images[0]\n    const annotation = (img.regions || []).map(convertFromRIARegionFmt)\n    if (onModifySample) {\n      onModifySample(selectedIndex, { annotation })\n    } else {\n      onSaveTaskOutputItem(selectedIndex, annotation)\n    }\n  })\n\n  const onExit = useEventCallback((output, nextAction) => {\n    saveCurrentIndexAnnotation(output)\n    if (containerProps.onExit) containerProps.onExit(nextAction)\n  })\n  const onNextImage = useEventCallback((output) => {\n    if (selectedIndex + 1 >= samples.length) {\n      onExit(output, \"go-to-next\")\n    } else {\n      saveCurrentIndexAnnotation(output)\n      if (setSelectedIndex) {\n        setSelectedIndex(selectedIndex + 1)\n      } else {\n        onExit(output, \"go-to-next\")\n      }\n    }\n  })\n  const onPrevImage = useEventCallback((output) => {\n    if (selectedIndex - 1 < 0) {\n      onExit(output, \"go-to-previous\")\n    } else {\n      saveCurrentIndexAnnotation(output)\n      if (setSelectedIndex) {\n        setSelectedIndex(selectedIndex - 1)\n      } else {\n        onExit(output, \"go-to-previous\")\n      }\n    }\n  })\n\n  const singleImageList = useMemo(() => {\n    return [\n      convertToRIAImageFmt({\n        title: containerProps.datasetName || `Sample ${selectedIndex}`,\n        taskDatum: samples[selectedIndex],\n        output: samples[selectedIndex].annotation,\n        selectedIndex,\n      }),\n    ]\n    // eslint-disable-next-line\n  }, [selectedIndex, containerProps.datasetName])\n\n  return (\n    <Container\n      style={{\n        height: containerProps.height || \"calc(100% - 70px)\",\n        minHeight: 600,\n        width: \"100%\",\n      }}\n    >\n      <Annotator\n        key={globalSampleIndex}\n        keypointDefinitions={iface.keypointDefinitions}\n        selectedImage={0}\n        taskDescription={iface.description}\n        onNextImage={onNextImage}\n        onPrevImage={onPrevImage}\n        enabledTools={posingTools}\n        images={singleImageList}\n        onExit={onExit}\n      />\n    </Container>\n  )\n}\n","export default function getTaskDescription(samplesItem) {\n  const { description, imageUrl, url, pdfUrl } = samplesItem\n  if (description) return description\n  if (imageUrl) return `![${imageUrl}](${imageUrl})`\n  if (pdfUrl)\n    return (\n      `[PDF Link](${pdfUrl})` +\n      `<object data=\"${pdfUrl.replace(\n        \"http://\",\n        \"https://\"\n      )}\" type=\"application/pdf\" width=\"100%\" height=\"600px\"></object>`\n    )\n  if (url) return `Use this [Link](${url})`\n  return null\n}\n","// @flow\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  linkButtonContainer: {\n    marginLeft: 8,\n    marginRight: 8,\n  },\n  linkButton: {\n    textTransform: \"none\",\n    cursor: \"pointer\",\n    textDecoration: \"underline\",\n  },\n})\n\nexport default ({ onClick, text }: { onClick: Function, text: string }) => {\n  const c = useStyles()\n  return (\n    <span className={c.linkButtonContainer}>\n      (\n      <span onClick={onClick} className={c.linkButton}>\n        {text}\n      </span>\n      )\n    </span>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Button from \"@material-ui/core/Button\"\nimport ReactMarkdown from \"react-markdown\"\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport LeftIcon from \"@material-ui/icons/KeyboardArrowLeft\"\nimport CircleIcon from \"@material-ui/icons/RadioButtonUnchecked\"\nimport CheckCircle from \"@material-ui/icons/CheckCircle\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport LinkButton from \"./LinkButton\"\nimport range from \"lodash/range\"\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: \"#fff\",\n    marginTop: 40,\n  },\n  footerContent: {\n    alignItems: \"center\",\n    padding: 20,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  footerBorder: {\n    borderTop: \"1px solid #ccc\",\n    marginLeft: 20,\n    marginRight: 20,\n  },\n  footerCount: {\n    display: \"inline-flex\",\n  },\n  allSamplesButton: {\n    color: \"#fff\",\n    border: \"1px solid rgba(255,255,255,0.5)\",\n    marginRight: 10,\n    paddingLeft: 8,\n  },\n  sampleIcon: {\n    marginRight: 8,\n  },\n  menuButton: {\n    marginRight: 8,\n    color: \"#fff\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  buttons: {\n    \"& > *\": {\n      margin: 4,\n    },\n  },\n  description: {\n    padding: 10,\n    \"& img\": {\n      maxWidth: \"calc(100% - 16px)\",\n      marginLeft: 8,\n      marginRight: 8,\n      maxHeight: 600,\n    },\n  },\n  sectionHeader: {\n    fontWeight: 700,\n    fontSize: 12,\n    padding: 10,\n    paddingTop: 16,\n    textTransform: \"uppercase\",\n    color: colors.grey[600],\n  },\n  content: {\n    padding: 10,\n    // minHeight: \"calc(100vh - 200px)\"\n  },\n}))\n\nexport const SampleContainer = ({\n  hideDescription: defaultHideDescription = window.localStorage.getItem(\n    \"hideDescription\"\n  ) === '\"true\"',\n  lastSampleExitText,\n  onExit,\n  requireCompleteToPressNext = false,\n  samples,\n  minContentHeight,\n  currentSampleIndex,\n  totalSamples,\n  onChangeSample,\n  taskOutput = [],\n  description,\n  children,\n}) => {\n  const c = useStyles()\n  const [hideDescription, changeHideDescriptionState] = useState(\n    defaultHideDescription\n  )\n  const changeHideDescription = (hide) => {\n    window.localStorage.setItem(\n      \"hideDescription\",\n      `\"${hide ? \"true\" : \"false\"}\"`\n    )\n    changeHideDescriptionState(hide)\n  }\n\n  const [sampleDrawerOpen, changeSampleDrawerOpen] = useState(false)\n  return (\n    <>\n      <Grid container>\n        {!hideDescription && (\n          <Grid item xs={12} sm={12} md={6}>\n            <div className={c.sectionHeader}>\n              Description\n              <LinkButton\n                onClick={() => changeHideDescription(true)}\n                text=\"hide\"\n              />\n            </div>\n            <div className={c.description}>\n              <ReactMarkdown escapeHtml={false} source={description} />\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={12} sm={12} md={hideDescription ? 12 : 6}>\n          <div className={c.sectionHeader}>\n            Sample {currentSampleIndex + 1}/{totalSamples}\n            {hideDescription && (\n              <LinkButton\n                onClick={() => changeHideDescription(false)}\n                text=\"show description\"\n              />\n            )}\n            {totalSamples > 1 && (\n              <LinkButton\n                onClick={() => changeSampleDrawerOpen(true)}\n                text=\"view all\"\n              />\n            )}\n            {onExit && (\n              <LinkButton onClick={() => onExit()} text=\"exit without saving\" />\n            )}\n          </div>\n          <div style={{ minHeight: minContentHeight }} className={c.content}>\n            {children}\n          </div>\n        </Grid>\n        {totalSamples > 1 && (\n          <Grid item xs={12}>\n            <div className={c.footer}>\n              <div className={c.footerBorder} />\n              <div className={c.footerContent}>\n                <Button\n                  onClick={() =>\n                    onChangeSample(\n                      (currentSampleIndex - 1 + totalSamples) % totalSamples\n                    )\n                  }\n                >\n                  <LeftIcon /> Prev Sample\n                </Button>\n                <Button\n                  onClick={() => changeSampleDrawerOpen(true)}\n                  className={c.footerCount}\n                >\n                  {currentSampleIndex + 1} / {totalSamples}\n                </Button>\n                <Button\n                  disabled={\n                    requireCompleteToPressNext &&\n                    !taskOutput[currentSampleIndex]\n                  }\n                  onClick={() =>\n                    onChangeSample((currentSampleIndex + 1) % totalSamples)\n                  }\n                >\n                  {requireCompleteToPressNext && !taskOutput[currentSampleIndex]\n                    ? \"Save to Continue\"\n                    : \"Next Sample\"}\n                  <RightIcon />\n                </Button>\n              </div>\n            </div>\n          </Grid>\n        )}\n      </Grid>\n      <Drawer\n        open={sampleDrawerOpen}\n        anchor=\"left\"\n        onClose={() => changeSampleDrawerOpen(false)}\n      >\n        <List style={{ minWidth: 300 }}>\n          <ListSubheader>Samples</ListSubheader>\n          {range(0, totalSamples).map((i) => (\n            <ListItem\n              style={{\n                backgroundColor:\n                  i === currentSampleIndex ? colors.grey[200] : undefined,\n              }}\n              button\n              onClick={() => onChangeSample(i)}\n            >\n              <ListItemIcon\n                style={{\n                  color:\n                    i === currentSampleIndex ? colors.blue[500] : undefined,\n                }}\n              >\n                {taskOutput[i] ? <CheckCircle /> : <CircleIcon />}\n              </ListItemIcon>\n              <ListItemText>Sample {i + 1}</ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </>\n  )\n}\n\nexport default SampleContainer\n","import React from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nexport const DataEntry = (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const form =\n    props.samples[currentSampleIndex].surveyjs || props.interface.surveyjs\n  if (!form)\n    throw new Error(\"No survey/form created. Try adding some inputs in Setup\")\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples.map((s) => s.annotation)}\n      description={\n        getTaskDescription(props.samples[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={(sampleIndex) => setCurrentSampleIndex(sampleIndex)}\n    >\n      <Survey\n        key={(props.sampleIndex || 0) + currentSampleIndex}\n        variant=\"flat\"\n        form={form}\n        defaultAnswers={\n          props.samples[currentSampleIndex].annotation || undefined\n        }\n        completeText=\"Save & Next\"\n        onFinish={(answers) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, answers)\n          if (props.containerProps.onExit)\n            props.containerProps.onExit(\"go-to-next\")\n        }}\n      />\n    </SampleContainer>\n  )\n}\n\nexport default DataEntry\n","// @flow\n\nimport React from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 50,\n    textAlign: \"center\",\n  },\n  title: {\n    margin: 50,\n  },\n  explain: {},\n})\n\nexport default ({ title, description, children }) => {\n  const c = useStyles()\n  return (\n    <div className={c.root}>\n      <Typography variant=\"h4\" component=\"div\" className={c.title}>\n        {title}\n      </Typography>\n      <Typography variant=\"h6\" component=\"div\" className={c.explain}>\n        {description || children}\n      </Typography>\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport BadOHA from \"../BadOHA\"\n\nexport default () => {\n  return (\n    <BadOHA title=\"No Samples to Show\">\n      Make sure that <code>samples</code> is defined and not empty.\n      <br />\n      <br />\n      Need help setting up? {/*<a href=\"#\">Check out this tutorial.</a>*/}\n    </BadOHA>\n  )\n}\n","import React from \"react\"\n\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\"\nimport TextFormat from \"@material-ui/icons/TextFormat\"\nimport Edit from \"@material-ui/icons/Edit\"\nimport Audiotrack from \"@material-ui/icons/Audiotrack\"\nimport Help from \"@material-ui/icons/Help\"\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\"\n\nexport default ({ type, ...props }) => {\n  switch (type) {\n    case \"image_label\":\n    case \"image_segmentation\":\n      return <RemoveRedEye {...props} />\n    case \"audio_transcription\":\n      return <Audiotrack {...props} />\n    case \"data_entry\":\n      return <Edit {...props} />\n    case \"text_entity_recognition\":\n      return <TextFormat {...props} />\n    case \"3d_bounding_box\":\n      return <ThreeDRotation {...props} />\n    default:\n      return <Help {...props} />\n  }\n}\n","import React, { useState } from \"react\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport InterfaceIcon from \"../InterfaceIcon\"\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport Box from \"@material-ui/core/Box\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Title = styled(\"div\")({\n  fontSize: 18,\n  fontWeight: \"bold\",\n  color: colors.grey[700],\n  borderBottom: `1px solid ${colors.grey[300]}`,\n  paddingBottom: 8,\n  marginBottom: 8,\n  paddingLeft: 8,\n})\nconst StyledButton = styled(Button)({\n  display: \"flex\",\n  textAlign: \"left\",\n  justifyContent: \"flex-start\",\n  marginTop: 8,\n})\n\nexport const Composite = (props) => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const {\n    interface: { fields },\n  } = props\n  const [selectedField, changeSelectedField] = useState()\n\n  const { t } = useTranslation()\n\n  if (!fields) throw new Error(\"No fields defined. Try adding a field in Setup\")\n\n  const sample = props.samples[currentSampleIndex]\n\n  if (selectedField) {\n    return (\n      <UniversalDataViewer\n        dataset={{\n          interface: selectedField.interface,\n          samples: [\n            {\n              ...sample,\n              annotation: (sample.annotation || {})[selectedField.fieldName],\n            },\n          ],\n        }}\n        onExit={() => changeSelectedField(null)}\n        onSaveTaskOutputItem={(indexZero, output) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, {\n            ...sample.annotation,\n            [selectedField.fieldName]: output,\n          })\n          changeSelectedField(null)\n        }}\n      />\n    )\n  }\n\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples.map((s) => s.annotation)}\n      description={getTaskDescription(sample) || props.interface.description}\n      onChangeSample={(sampleIndex) => {\n        if (props.containerProps.onExit) {\n          props.containerProps.onExit(\n            sampleIndex > currentSampleIndex ? \"go-to-next\" : \"go-to-previous\"\n          )\n        } else {\n          changeCurrentSampleIndex(sampleIndex)\n        }\n      }}\n    >\n      <Title>Fields</Title>\n      {fields.map((field, index) => (\n        <StyledButton\n          key={field.fieldName}\n          onClick={() => {\n            changeSelectedField({ ...field, index })\n          }}\n          fullWidth\n          variant=\"outlined\"\n        >\n          <InterfaceIcon\n            style={{ color: colors.grey[500], marginRight: 16 }}\n            type={field.interface.type}\n          />\n          {field.fieldName}\n          <Box flexGrow={1} />\n          <Checkbox\n            checked={Boolean((sample.annotation || {})[field.fieldName])}\n          />\n          <KeyboardArrowRightIcon />\n        </StyledButton>\n      ))}\n      <StyledButton\n        onClick={() => props.containerProps.onExit(\"go-to-next\")}\n        fullWidth\n        variant=\"outlined\"\n      >\n        <KeyboardArrowRightIcon\n          style={{ color: colors.grey[500], marginRight: 16 }}\n        />\n        {t(\"next\")}\n        <Box flexGrow={1} />\n        <Box height=\"42px\" />\n        <KeyboardArrowRightIcon />\n      </StyledButton>\n    </SampleContainer>\n  )\n}\n\nexport default Composite\n","// @flow\n\nimport \"../../i18n\"\nimport React, { useMemo } from \"react\"\nimport TextClassification from \"../TextClassification\"\nimport TextEntityRecognition from \"../TextEntityRecognition\"\nimport TextEntityRelations from \"../TextEntityRelations\"\nimport ImageSegmentation from \"../ImageSegmentation\"\nimport ImageClassification from \"../ImageClassification\"\nimport VideoSegmentation from \"../VideoSegmentation\"\nimport AudioTranscription from \"../AudioTranscription\"\nimport ImageLandmarkAnnotation from \"../ImageLandmarkAnnotation\"\nimport DataEntry from \"../DataEntry\"\nimport EmptySampleContainer from \"../EmptySampleContainer\"\nimport Composite from \"../Composite\"\nimport BadOHA from \"../BadOHA\"\nimport Button from \"@material-ui/core/Button\"\nimport { useTranslation } from \"react-i18next\"\nimport useEventCallback from \"use-event-callback\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nexport const UniversalDataViewer = ({\n  dataset,\n  onExit: onExitProp,\n  hideHeader,\n  hideDescription,\n  disableHotkeys = false,\n  datasetName,\n  requireCompleteToPressNext,\n  onSaveTaskOutputItem: onSaveTaskOutputItemProp,\n  onModifySample,\n  sampleIndex: globalSampleIndex,\n  height,\n  onClickSetup,\n}) => {\n  // TODO type check w/ superstruct against dataset\n  const { t } = useTranslation()\n\n  const [sampleIndex, setSampleIndex] = useClobberedState(globalSampleIndex, 0)\n\n  const onExit = useEventCallback((...args) => {\n    if (globalSampleIndex === undefined) {\n      if (\n        args[0] === \"go-to-next\" &&\n        sampleIndex !== dataset.samples.length - 1\n      ) {\n        setSampleIndex(sampleIndex + 1)\n      } else if (args[0] === \"go-to-previous\" && sampleIndex !== 0) {\n        setSampleIndex(sampleIndex - 1)\n      }\n    }\n    if (onExitProp) return onExitProp(...args)\n  })\n\n  let onSaveTaskOutputItem = onSaveTaskOutputItemProp\n  if (onModifySample && !onSaveTaskOutputItem) {\n    onSaveTaskOutputItem = (sampleIndex, annotation) =>\n      onModifySample(sampleIndex, { annotation })\n  }\n\n  const containerProps = useMemo(\n    () => ({\n      hideHeader,\n      hideDescription,\n      datasetName,\n      requireCompleteToPressNext,\n      onExit,\n      height,\n      disableHotkeys,\n    }),\n    [\n      hideHeader,\n      hideDescription,\n      requireCompleteToPressNext,\n      datasetName,\n      height,\n      onExit,\n      disableHotkeys,\n    ]\n  )\n\n  if (!dataset || !dataset.interface.type) {\n    return (\n      <BadOHA\n        title=\"Set up your project to begin labeling\"\n        description={\n          <p>\n            {t(\"universal-data-viewer-interface-warning\")}\n            <br />\n            <br />\n            <Button color=\"primary\" variant=\"contained\" onClick={onClickSetup}>\n              {t(\"setup-project\")}\n            </Button>\n          </p>\n        }\n      />\n    )\n  }\n\n  if (!dataset.samples || dataset.samples.length === 0) {\n    return <EmptySampleContainer />\n  }\n\n  switch (dataset.interface.type) {\n    case \"data_entry\":\n      return (\n        <DataEntry\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"text_classification\":\n      return (\n        <TextClassification\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"text_entity_recognition\":\n      return (\n        <TextEntityRecognition\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"text_entity_relations\":\n      return (\n        <TextEntityRelations\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"image_segmentation\":\n    case \"image_pixel_segmentation\":\n      return (\n        <ImageSegmentation\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onModifySample={onModifySample}\n        />\n      )\n    case \"image_classification\":\n      return (\n        <ImageClassification\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"video_segmentation\":\n      return (\n        <VideoSegmentation\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"composite\":\n      return (\n        <Composite\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          dataset={dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"audio_transcription\":\n      return (\n        <AudioTranscription\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"image_landmark_annotation\":\n      return (\n        <ImageLandmarkAnnotation\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onModifySample={onModifySample}\n          onExit={onExit}\n        />\n      )\n    default:\n      return `\"${dataset.interface.type}\" not supported`\n  }\n}\n\nexport default UniversalDataViewer\n","// @flow\nimport React, { createContext, useContext, useEffect, useReducer } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Fade from \"@material-ui/core/Fade\"\nimport classNames from \"classnames\"\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"flex-start\",\n    pointerEvents: \"none\",\n  },\n  msgBox: {\n    display: \"flex\",\n    backgroundColor: colors.blue[700],\n    fontSize: 12,\n    color: \"#fff\",\n    padding: 4,\n    marginBottom: 4,\n    boxShadow: \"0px 3px 8px rgba(0,0,0,0.5)\",\n    \"&.warning\": {\n      backgroundColor: colors.orange[700],\n    },\n    \"&.error\": {\n      backgroundColor: colors.red[700],\n    },\n  },\n})\n\nconst REFRESH_INTERVAL = 100\n\nconst ToastContext = createContext({})\n\nexport const useToasts = () => {\n  const { addToast } = useContext(ToastContext)\n\n  return { addToast }\n}\n\nexport const ToastProvider = ({ children }) => {\n  const [toasts, changeToasts] = useReducer((state = [], action) => {\n    if (action.type === \"add\") {\n      const fullLife =\n        action.messageType === \"info\"\n          ? 2000\n          : action.messageType === \"warning\"\n          ? 5000\n          : 5000\n\n      return state.concat([\n        {\n          id: Math.random().toString().split(\".\")[1],\n          message: action.message,\n          type: action.messageType,\n          life: fullLife,\n          fullLife,\n        },\n      ])\n    } else if (action.type === \"tick\") {\n      return state\n        .map((msg) => ({\n          ...msg,\n          life: msg.life - REFRESH_INTERVAL,\n        }))\n        .filter((msg) => msg.life > 0)\n    }\n    return state\n  }, [])\n  const c = useStyles()\n\n  useEffect(() => {\n    if (toasts.length === 0) return () => {}\n    let interval = setInterval(() => {\n      changeToasts({ type: \"tick\" })\n    }, REFRESH_INTERVAL)\n    return () => clearInterval(interval)\n  }, [toasts])\n\n  const addToast = (message: string, messageType: string = \"info\") =>\n    changeToasts({ type: \"add\", message, messageType })\n\n  return (\n    <>\n      <ToastContext.Provider value={{ toasts, addToast }}>\n        {children}\n      </ToastContext.Provider>\n      <div className={c.root}>\n        {toasts.map((msg) => (\n          <Collapse key={msg.id} in={msg.life < msg.fullLife}>\n            <Fade in={msg.life > 600}>\n              <div className={classNames(c.msgBox, msg.type)}>\n                {msg.message}\n              </div>\n            </Fade>\n          </Collapse>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport AceEditor from \"react-ace\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport { useToasts } from \"../Toasts\"\n\nexport const RawJSONEditor = ({ content, onSave }) => {\n  const [jsonText, setJSONText] = useState(\"\")\n  const { addToast } = useToasts()\n  useEffect(() => {\n    if (!content) return\n    if (typeof content === \"string\") {\n      setJSONText(content)\n    } else if (typeof content === \"object\") {\n      setJSONText(JSON.stringify(content, null, \"  \"))\n    }\n  }, [content])\n  return (\n    <Box position=\"relative\" width=\"100%\">\n      <AceEditor\n        theme=\"github\"\n        mode=\"javascript\"\n        width=\"100%\"\n        value={jsonText}\n        editorProps={{ $blockScrolling: Infinity }}\n        onChange={(t) => setJSONText(t)}\n      />\n      <Box position=\"absolute\" right={16} top={16}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            try {\n              onSave(JSON.parse(jsonText))\n            } catch (e) {\n              addToast(\"Invalid JSON\", \"error\")\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Box>\n    </Box>\n  )\n}\n\nexport default RawJSONEditor\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport ConfigureInterface from \"../ConfigureInterface\"\nimport AdvancedOptionsView from \"../AdvancedOptionsView\"\nimport { templateMap } from \"../StartingPage/templates\"\nimport Box from \"@material-ui/core/Box\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport CategoryIcon from \"@material-ui/icons/Category\"\nimport BuildIcon from \"@material-ui/icons/Build\"\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\"\nimport DeveloperBoardIcon from \"@material-ui/icons/DeveloperBoard\"\nimport CodeIcon from \"@material-ui/icons/Code\"\nimport BigInterfaceSelect from \"../BigInterfaceSelect\"\nimport { setIn } from \"seamless-immutable\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport RawJSONEditor from \"../RawJSONEditor\"\n\nconst noop = () => {}\n\nexport default ({ dataset, onChange, onClearLabelData }) => {\n  const [currentTab, setTab] = useState(\n    dataset.interface.type ? \"configure\" : \"datatype\"\n  )\n\n  return (\n    <div>\n      <Box padding=\"16px\">\n        <Tabs value={currentTab} onChange={(e, newTab) => setTab(newTab)}>\n          <Tab icon={<CategoryIcon />} label=\"Data Type\" value=\"datatype\" />\n          <Tab icon={<BuildIcon />} label=\"Configure\" value=\"configure\" />\n          <Tab icon={<LiveTvIcon />} label=\"Preview\" value=\"preview\" />\n          <Tab icon={<CodeIcon />} label=\"JSON\" value=\"json\" />\n          <Tab\n            icon={<DeveloperBoardIcon />}\n            label=\"Advanced\"\n            value=\"advanced\"\n          />\n        </Tabs>\n      </Box>\n      {currentTab === \"datatype\" && (\n        <BigInterfaceSelect\n          currentInterfaceType={dataset.interface?.type}\n          onChange={(newInterface) => {\n            onChange(setIn(dataset, [\"interface\"], newInterface))\n            setTab(\"configure\")\n          }}\n        />\n      )}\n      {currentTab === \"configure\" && (\n        <ConfigureInterface\n          dataset={dataset}\n          onChange={(iface) => onChange(setIn(dataset, [\"interface\"], iface))}\n          isNotNested\n        />\n      )}\n      {currentTab === \"preview\" && (\n        <UniversalDataViewer\n          height={600}\n          onExit={noop}\n          onSaveTaskOutputItem={noop}\n          dataset={{\n            ...dataset,\n            samples: dataset?.samples?.length\n              ? [dataset.samples[0]]\n              : [templateMap[dataset.interface?.type].dataset.samples[0]],\n          }}\n        />\n      )}\n      {currentTab === \"advanced\" && (\n        <AdvancedOptionsView onClearLabelData={onClearLabelData} />\n      )}\n      {currentTab === \"json\" && (\n        <RawJSONEditor\n          content={dataset}\n          onSave={(newDataset) => {\n            onChange(newDataset)\n          }}\n        />\n      )}\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport AceEditor from \"react-ace\"\nimport SimpleDialog from \"../SimpleDialog\"\n\nexport default ({ open, sampleIndex, sampleInput, onChange, onClose }) => {\n  const [text, changeText] = useState()\n  const [error, changeError] = useState()\n  useEffect(() => {\n    const newText = JSON.stringify(sampleInput, null, \"  \")\n    if (newText !== text) {\n      changeText(newText)\n      changeError(null)\n    }\n  }, [sampleIndex, sampleInput, text])\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title={`samples[${sampleIndex}]`}\n    >\n      <AceEditor\n        theme=\"github\"\n        mode=\"javascript\"\n        width=\"100%\"\n        value={text}\n        editorProps={{ $blockScrolling: Infinity }}\n        onChange={(t) => {\n          changeText(t)\n          changeError(null)\n          try {\n            onChange(JSON.parse(t))\n          } catch (e) {\n            changeError(e.toString())\n          }\n        }}\n      />\n      <Box color=\"red\">{error}</Box>\n    </SimpleDialog>\n  )\n}\n","import * as Sentry from \"@sentry/browser\"\n\nSentry.init({\n  dsn: \"https://bc19fbac222243f08f0abaf6d66f2034@sentry.io/5182632\",\n  whitelistUrls: [\"https://universaldatatool.com\", \"^file:?:\"],\n})\n\nexport default Sentry\n","// @flow weak\n\nimport React from \"react\"\nimport Sentry from \"../../utils/sentry.js\"\nimport BadOHA from \"../BadOHA\"\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    console.error(\n      \"The following error occurred when loading a labeling interface:\",\n      error\n    )\n    return {\n      hasError: true,\n      errorString: error.toString(),\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo)\n      const eventId = Sentry.captureException(error)\n      this.setState({ eventId })\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <BadOHA\n          title=\"An error occurred loading the labeling interface\"\n          description={this.state.errorString}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({})\nconst Stat = styled(\"div\")({\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  margin: 8,\n})\nconst Label = styled(\"div\")({\n  fontSize: 14,\n  fontWeight: \"bold\",\n  color: colors.grey[700],\n})\nconst Value = styled(\"div\")({\n  fontSize: 32,\n  marginTop: 8,\n})\n\nexport default ({ stats }) => {\n  return (\n    <Container>\n      {stats.map((s) => (\n        <Stat key={s.name}>\n          <Label>{s.name}</Label>\n          <Value>{s.value}</Value>\n        </Stat>\n      ))}\n    </Container>\n  )\n}\n","import React, { useState } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { useAppConfig } from \"../AppConfig\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nconst Title = styled(\"div\")({\n  fontSize: 18,\n  color: colors.grey[800],\n  padding: 16,\n  \"& a\": {\n    color: colors.blue[600],\n  },\n})\n\nconst LabelHelpIs = styled(\"div\")({\n  fontSize: 18,\n  lineHeight: 1.5,\n  color: colors.grey[800],\n  padding: 16,\n  width: 800,\n})\n\nconst ErrorText = styled(\"div\")({\n  color: colors.red[600],\n})\n\nexport default () => {\n  const { setInConfig } = useAppConfig()\n  const [verifying, setVerifying] = useState(false)\n  const [textFieldValue, setTextFieldValue] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const posthog = usePosthog()\n\n  return (\n    <Box paddingTop={8} textAlign=\"center\">\n      <LabelHelpIs>\n        Label Help is a UDT-integrated service that crowd-sources your labeling,\n        it's about the same speed as having a team of 5-10 full-time labelers.\n      </LabelHelpIs>\n      <Title>\n        To use Label Help, enter your API key. You can{\" \"}\n        <a\n          href=\"https://labelhelp.universaldatatool.com\"\n          onClick={() => posthog.capture(\"get_api_key_link_clicked\")}\n        >\n          get an API key here\n        </a>\n        .\n      </Title>\n      {error && <ErrorText>{error}</ErrorText>}\n      <Box\n        paddingTop={2}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n      >\n        <TextField\n          onChange={(e) => setTextFieldValue(e.target.value)}\n          className=\"label-help-api-key-text-field\"\n          variant=\"outlined\"\n          label=\"API Key\"\n        />\n        <Button\n          style={{ marginTop: 16 }}\n          color=\"primary\"\n          disabled={verifying}\n          variant=\"outlined\"\n          onClick={async () => {\n            setError(null)\n            setVerifying(true)\n            try {\n              // TODO check with labelhelp server and make sure api key is valid\n              const response = await fetch(\n                \"https://labelhelp.universaldatatool.com/api/me\",\n                {\n                  headers: { apikey: textFieldValue },\n                }\n              )\n              if (response.status !== 200) throw new Error(response.toString())\n            } catch (e) {\n              setError(e.toString())\n              setVerifying(false)\n              return\n            }\n\n            setVerifying(false)\n            setInConfig(\"labelhelp.apikey\", textFieldValue)\n            posthog.capture(\"save_api_key_button_clicked\")\n          }}\n        >\n          {verifying ? (\n            <>\n              <CircularProgress size={18} style={{ marginRight: 16 }} />\n              Checking...\n            </>\n          ) : (\n            <>\n              <SaveIcon style={{ marginRight: 8 }} />\n              Save\n            </>\n          )}\n        </Button>\n      </Box>\n    </Box>\n  )\n}\n","// @flow\n\nimport { styled } from \"@material-ui/core/styles\"\n\nexport const PaperContainer = styled(\"div\")({\n  margin: 16,\n  padding: 16,\n  border: \"1px solid #ccc\",\n  borderRadius: 4,\n  boxShadow: \"0px 2px 2px rgba(0,0,0,0.1)\",\n})\n\nexport default PaperContainer\n","import { useFileContext } from \"./\"\nimport { useMemo } from \"react\"\nimport { setIn } from \"seamless-immutable\"\n\nexport const useActiveDataset = () => {\n  const { file, setFile } = useFileContext()\n  const result = useMemo(\n    () =>\n      !file || !file.content\n        ? null\n        : {\n            dataset: file.content,\n            setDataset: (newDataset) => {\n              setFile(setIn(file, [\"content\"], newDataset))\n            },\n          },\n    [file, setFile]\n  )\n  return result || {}\n}\n","import { useContext, createContext } from \"react\"\n\nexport const FileContext = createContext({})\n\nexport const useFileContext = () => useContext(FileContext)\n\nexport { useActiveDataset } from \"./use-active-dataset.js\"\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport Stepper from \"@material-ui/core/Stepper\"\nimport Step from \"@material-ui/core/Step\"\nimport StepLabel from \"@material-ui/core/StepLabel\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { useLabelHelp } from \"./\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useActiveDataset } from \"../FileContext\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport { setIn } from \"seamless-immutable\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nconst Container = styled(\"div\")({\n  fontVariantNumeric: \"tabular-nums\",\n})\nconst Link = styled(\"a\")({\n  color: colors.blue[500],\n  textDecoration: \"none\",\n})\n\nconst usdFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\nconst preciseUSDFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  maximumFractionDigits: 4,\n  minimumFractionDigits: 2,\n})\n\nconst steps = [\"setup\", \"running\", \"completed\"]\n\nexport default () => {\n  const { fromConfig, setInConfig } = useAppConfig()\n  const {\n    labelHelpEnabled,\n    labelHelpError,\n    loadMyCredits = () => 0,\n    variables,\n    totalCost = 0,\n    formulaFunc = () => 0,\n    myCredits = () => 0,\n  } = useLabelHelp()\n  const [error, setError] = useState()\n  const { dataset, setDataset } = useActiveDataset()\n\n  const [labelHelpInfo, setLabelHelpInfo] = useState(dataset.labelHelp || {})\n  const collabUrl = labelHelpInfo.url || (dataset.labelHelp || {}).url\n\n  const posthog = usePosthog()\n\n  useEffect(() => {\n    if (myCredits === null || myCredits === undefined) {\n      loadMyCredits(dataset)\n    }\n  }, [myCredits, dataset, loadMyCredits])\n\n  useEffect(() => {\n    if (!collabUrl) return\n    async function loadJob() {\n      const response = await fetch(\n        `https://labelhelp.universaldatatool.com/api/job?custom_id=${encodeURIComponent(\n          collabUrl\n        )}&api_key=${fromConfig(\"labelhelp.apikey\")}`\n      ).then((r) => r.json())\n      // response contains { progress, status }\n      setLabelHelpInfo({\n        ...dataset.labelHelp,\n        ...response,\n        loaded: true,\n      })\n    }\n    loadJob()\n  }, [collabUrl, dataset.labelHelp, fromConfig])\n\n  if (!labelHelpEnabled)\n    return (\n      <Container>\n        Label Help isn't enabled, check the error below. If you can't resolve\n        the error, reach out on{\" \"}\n        <a href=\"https://universaldatatool.slack.com\">the slack</a> for more\n        help!\n        {labelHelpError && (\n          <div style={{ color: colors.red[500], marginTop: 24 }}>\n            {labelHelpError}\n          </div>\n        )}\n      </Container>\n    )\n\n  const activeStep = !collabUrl\n    ? \"setup\"\n    : labelHelpInfo.progress === 1\n    ? \"completed\"\n    : \"running\"\n\n  return (\n    <Container>\n      <Stepper activeStep={steps.indexOf(activeStep)}>\n        {[\"Setup\", \"Running\", \"Completed\"].map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      {error && <Box color={colors.red[600]}>{error}</Box>}\n      {activeStep === \"setup\" ? (\n        <Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Item</TableCell>\n                <TableCell>Quantity</TableCell>\n                <TableCell>Unit Cost</TableCell>\n                <TableCell>Cost / Sample</TableCell>\n                <TableCell>Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(variables).map((varName) => (\n                <TableRow>\n                  <TableCell style={{ textTransform: \"capitalize\" }}>\n                    {varName.replace(/_/g, \" \")}\n                  </TableCell>\n                  <TableCell>{variables[varName]}</TableCell>\n                  <TableCell>\n                    {varName === \"sample_count\"\n                      ? \"\"\n                      : preciseUSDFormatter.format(\n                          (totalCost -\n                            formulaFunc({ ...variables, [varName]: 0 })) /\n                            variables.sample_count /\n                            (variables[varName] === 0 ? 1 : variables[varName])\n                        )}\n                  </TableCell>\n                  <TableCell>\n                    {usdFormatter.format(\n                      (totalCost -\n                        formulaFunc({ ...variables, [varName]: 0 })) /\n                        variables.sample_count\n                    )}\n                  </TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell>Total Cost</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell>{usdFormatter.format(totalCost)}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Time to Complete</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell>1-3 days</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            padding={2}\n            paddingTop={4}\n          >\n            <Box>Credits: {usdFormatter.format(myCredits)}</Box>\n            <Box flexGrow={1} />\n            <Button\n              onClick={() => {\n                setInConfig(\"labelhelp.apikey\", null)\n                posthog.capture(\"api_key_button_clicked\")\n              }}\n              variant=\"outlined\"\n            >\n              API Key\n            </Button>\n            <Button\n              color={myCredits < totalCost ? \"primary\" : \"none\"}\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              href=\"https://labelhelp.universaldatatool.com#addcredits\"\n              onClick={() => {\n                posthog.capture(\"add_credits_button_clicked\")\n              }}\n            >\n              Add Credits\n            </Button>\n            <Button\n              onClick={async () => {\n                setError(null)\n                const response = await fetch(\n                  \"https://labelhelp.universaldatatool.com/api/submit\",\n                  {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                      dataset,\n                      price: totalCost,\n                      api_key: fromConfig(\"labelhelp.apikey\"),\n                    }),\n                    headers: { \"Content-Type\": \"application/json\" },\n                  }\n                )\n                  .then((r) => r.json())\n                  .catch((e) => {\n                    setError(e.toString())\n                    return null\n                  })\n                if (!response) {\n                  setError(\"Empty response from server\")\n                  return null\n                }\n\n                setDataset(\n                  setIn(dataset, [\"labelHelp\"], {\n                    url: response.custom_id,\n                  })\n                )\n\n                posthog.capture(\"start_label_help_button_clicked\")\n              }}\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              color={myCredits >= totalCost ? \"primary\" : \"none\"}\n            >\n              Start Label Help\n            </Button>\n          </Box>\n        </Box>\n      ) : activeStep === \"running\" ? (\n        <Box>\n          {labelHelpInfo.loaded ? (\n            <Table>\n              <TableBody>\n                <TableRow>\n                  <TableCell>Status</TableCell>\n                  <TableCell>{labelHelpInfo.status}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Link</TableCell>\n                  <TableCell>\n                    <Link href={labelHelpInfo.url}>{labelHelpInfo.url}</Link>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Percent Complete</TableCell>\n                  <TableCell>{labelHelpInfo.progress.toFixed(1)}%</TableCell>\n                </TableRow>\n                {labelHelpInfo.price && (\n                  <TableRow>\n                    <TableCell>Budget Used</TableCell>\n                    <TableCell>\n                      ${labelHelpInfo.progress * labelHelpInfo.price} / $75\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          ) : (\n            <Box padding={8} textAlign=\"center\">\n              <CircularProgress size={100} />\n            </Box>\n          )}\n          <Box display=\"flex\" marginTop={2} justifyContent=\"flex-end\">\n            {/* TODO add stop early by calling /api/stop */}\n            {/* <Button\n              variant=\"outlined\"\n              style={{\n                color: colors.red[500],\n                border: `1px solid ${colors.red[200]}`,\n              }}\n            >\n              Stop Early\n            </Button> */}\n            <Box flexGrow={1} />\n            {/* TODO sync samples merges samples from link */}\n            {/* <Button variant=\"outlined\" color=\"primary\">\n              Sync Samples\n            </Button> */}\n          </Box>\n        </Box>\n      ) : activeStep === \"completed\" ? (\n        <Box>\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell>Percent Complete</TableCell>\n                <TableCell>100%</TableCell>\n              </TableRow>\n              {labelHelpInfo.price && (\n                <TableRow>\n                  <TableCell>Total Cost</TableCell>\n                  <TableCell>\n                    {usdFormatter.format(labelHelpInfo.price)}\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n          <Box display=\"flex\" marginTop={2} justifyContent=\"flex-end\">\n            <Button variant=\"outlined\">Restart</Button>\n            {/* TODO sync samples merges samples from link */}\n            {/* <Button\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Sync Samples\n            </Button> */}\n          </Box>\n        </Box>\n      ) : null}\n    </Container>\n  )\n}\n","import React, { createContext, useMemo, useState } from \"react\"\n\nimport { useAppConfig } from \"../AppConfig\"\nexport const LabelHelpContext = createContext({})\n\nexport const LabelHelpProvider = ({ children }) => {\n  const { fromConfig, setInConfig } = useAppConfig()\n  const [loadingPricingConfig, setLoadingPricingConfig] = useState(false)\n  const [pricingConfig, setPricingConfig] = useState(false)\n  const [loadingMyTeam, setLoadingMyTeam] = useState(false)\n  const [myCredits, setMyCredits] = useState(null)\n  const contextValue = useMemo(\n    () => ({\n      pricingConfig,\n      myCredits,\n      loadPricingConfig: async () => {\n        if (loadingPricingConfig) return\n        setLoadingPricingConfig(true)\n        const pricingConfig = await fetch(\n          \"https://labelhelp.universaldatatool.com/api/price\"\n        ).then((r) => r.json())\n        setLoadingPricingConfig(false)\n        setPricingConfig(pricingConfig)\n      },\n      loadMyCredits: async () => {\n        if (loadingMyTeam) return\n        setLoadingMyTeam(true)\n        const apiKey = fromConfig(\"labelhelp.apikey\")\n        if (!apiKey) return\n        let response\n        try {\n          response = await fetch(\n            `https://labelhelp.universaldatatool.com/api/me`,\n            {\n              headers: { apikey: apiKey },\n            }\n          )\n          response = await response.json()\n        } catch (e) {\n          console.error(e)\n          setLoadingMyTeam(false)\n          return Promise.reject(e)\n        }\n        if (response.status >= 400) {\n          setInConfig(\"labelhelp.apikey\", null)\n        }\n\n        setMyCredits(response.credit)\n        setLoadingMyTeam(false)\n      },\n    }),\n    [\n      pricingConfig,\n      loadingPricingConfig,\n      // eslint-disable-next-line\n      fromConfig(\"labelhelp.apikey\"),\n      loadingMyTeam,\n      myCredits,\n      fromConfig,\n      setInConfig,\n    ]\n  )\n  return (\n    <LabelHelpContext.Provider value={contextValue}>\n      {children}\n    </LabelHelpContext.Provider>\n  )\n}\n","import useIsDesktop from \"./use-is-desktop\"\nexport default () => {\n  const isDesktop = useIsDesktop()\n  if (isDesktop) return false\n  if (window.location.search.includes(\"mode=labelonly\")) {\n    return true\n  }\n  return false\n}\n","export default (dataset, varName) => {\n  let fields = (dataset.interface || {}).fields || []\n  // const totalLabels = fields.reduce(\n  //   (acc, f) =>\n  //     f.interface.type !== \"data_entry\"\n  //       ? acc\n  //       : acc + (f.interface.surveyjs.questions[0].choices || []).length,\n  //   0\n  // )\n  // const totalBoundingBoxes = fields.filter(\n  //   (f) => f.interface.type === \"image_segmentation\"\n  // ).length\n\n  switch (varName) {\n    case \"sample_count\":\n    case \"num_samples\":\n      return (dataset.samples || []).length\n    case \"number_of_fields\":\n      return Object.keys(dataset.interface.fields || {}).length\n    case \"text_field_count\":\n      if (dataset.interface.type === \"data_entry\") {\n        return dataset.interface.surveyjs.questions.filter(\n          (q) => q.type === \"text\"\n        ).length\n      } else if (dataset.interface.type === \"composite\") {\n        return fields.filter(\n          (f) =>\n            f.interface.type === \"data_entry\" &&\n            f.interface.surveyjs.questions[0].type === \"text\"\n        ).length\n      } else {\n        throw new Error(\n          \"Couldn't compute text_field_count for interface: \" +\n            dataset.interface.type\n        )\n      }\n    case \"number_of_classifications\":\n      return dataset.interface.labels.length\n    case \"average_number_of_interactions_per_image\":\n      // find completed samples\n      const completedSamples = dataset.samples.filter((s) => s.annotation)\n      let totalInteractions = 0\n      let totalSamplesConsidered = 0\n      for (const { annotation } of completedSamples) {\n        if (totalSamplesConsidered > 10) break\n        if (typeof annotation === \"object\" && annotation.length) {\n          totalSamplesConsidered += 1\n          for (const { points } of annotation) {\n            if (points) {\n              totalInteractions += points.length\n            } else {\n              totalInteractions += 1\n            }\n          }\n        }\n      }\n      if (totalSamplesConsidered < 1)\n        throw new Error(\n          \"Not enough completed samples to compute average_number_of_interactions_per_image\"\n        )\n      return totalInteractions / totalSamplesConsidered\n    case \"number_of_exclusive_classifications\":\n      return dataset.interface.multiple ? 0 : dataset.interface.labels.length\n    case \"number_of_nonexclusive_classifications\":\n      return dataset.interface.multiple ? dataset.interface.labels.length : 0\n    case \"average_text_length\":\n      return (\n        dataset.samples\n          .map((s) => s.document.length)\n          .reduce((acc, l) => acc + l, 0) / dataset.samples.length\n      )\n    case \"number_of_labels\":\n      return dataset.interface.labels.length\n    default:\n      throw new Error(`Don't know how to compute \"${varName}\"`)\n  }\n}\n","import { useContext, useEffect } from \"react\"\n\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\nimport { useActiveDataset } from \"../FileContext\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { LabelHelpContext } from \"./LabelHelpProvider.js\"\nimport computeDatasetVariable from \"../../utils/compute-dataset-variable\"\n\nexport const useLabelHelp = () => {\n  const isLabelOnlyMode = useIsLabelOnlyMode()\n  const { dataset } = useActiveDataset()\n  const {\n    pricingConfig,\n    myCredits,\n    remoteFile,\n    loadPricingConfig,\n    loadMyCredits,\n  } = useContext(LabelHelpContext)\n  const { fromConfig } = useAppConfig()\n  const labelHelpDisabled = Boolean(fromConfig(\"labelhelp.disabled\"))\n  const hasLabelHelpAPIKey = Boolean(fromConfig(\"labelhelp.apikey\"))\n\n  useEffect(() => {\n    if (labelHelpDisabled || isLabelOnlyMode) return\n    if (!dataset) return\n    if (!pricingConfig) loadPricingConfig()\n  }, [\n    pricingConfig,\n    isLabelOnlyMode,\n    labelHelpDisabled,\n    loadPricingConfig,\n    dataset,\n  ])\n\n  if (!dataset)\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"no active dataset\",\n    }\n  if (labelHelpDisabled)\n    return { labelHelpEnabled: false, labelHelpError: \"Disabled in config\" }\n  if (isLabelOnlyMode) return { labelHelpEnabled: false }\n  if (!hasLabelHelpAPIKey && dataset.samples.length < 100) {\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"Less than 100 samples\",\n    }\n  }\n  if (!pricingConfig) {\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"No pricing config\",\n    }\n  }\n\n  try {\n    const { formula, variables: variableDescriptions } =\n      pricingConfig[dataset.interface.type] || {}\n\n    if (!formula)\n      return {\n        labelHelpEnabled: false,\n        labelHelpError: `No pricing formula for \"${dataset.interface.type}\"`,\n      }\n\n    const variables = {}\n    for (const variableName of Object.keys(variableDescriptions)) {\n      variables[variableName] = computeDatasetVariable(dataset, variableName)\n    }\n\n    const funcArgs = Object.keys(variables)\n    // TODO sanitize formula\n    // eslint-disable-next-line\n    const formulaFuncPos = new Function(...funcArgs, \"return \" + formula)\n    const formulaFunc = (variables) => {\n      return formulaFuncPos(...funcArgs.map((ak) => variables[ak]))\n    }\n    const totalCost = formulaFunc(variables)\n\n    return {\n      labelHelpEnabled: true,\n      myCredits,\n      loadMyCredits,\n      remoteFile,\n      formula,\n      variableDescriptions,\n      variables,\n      formulaFunc,\n      totalCost,\n      labelHelpAPIKey: fromConfig(\"labelhelp.apikey\"),\n    }\n  } catch (e) {\n    return { labelHelpEnabled: false, labelHelpError: e.toString() }\n  }\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport APIKeyEntry from \"./api-key-entry.js\"\nimport PaperContainer from \"../PaperContainer\"\nimport LabelHelpDialogContent from \"./label-help-dialog-content\"\nimport { useAppConfig } from \"../AppConfig\"\n\nexport { LabelHelpProvider, LabelHelpContext } from \"./LabelHelpProvider.js\"\nexport { useLabelHelp } from \"./use-label-help\"\n\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n})\n\nexport const LabelHelpView = () => {\n  const { fromConfig } = useAppConfig()\n  const hasAPIKey = Boolean(fromConfig(\"labelhelp.apikey\"))\n\n  return (\n    <Container>\n      {!hasAPIKey ? (\n        <APIKeyEntry key=\"apikeyentry\" />\n      ) : (\n        <PaperContainer\n          key=\"dialogcontent\"\n          style={{ marginTop: 48, width: \"100%\", maxWidth: 800 }}\n        >\n          <LabelHelpDialogContent />\n        </PaperContainer>\n      )}\n    </Container>\n  )\n}\n\nexport default LabelHelpView\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  fontSize: 18,\n  padding: 32,\n  textAlign: \"center\",\n  color: colors.grey[700],\n  \"& a\": {\n    color: colors.blue[500],\n  },\n})\n\nexport const ActiveLearningView = () => {\n  return (\n    <Container>\n      Hey, this isn't available yet, but if you'd like this functionality please\n      let us know by leaving a thumbs up on{\" \"}\n      <a href=\"https://github.com/UniversalDataTool/universal-data-tool/issues/148\">\n        this github issue\n      </a>\n    </Container>\n  )\n}\n\nexport default ActiveLearningView\n","import React, { useEffect, useState } from \"react\"\nimport LabelErrorBoundary from \"../LabelErrorBoundary\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport Stats from \"../Stats\"\nimport SampleGrid from \"../SampleGrid\"\nimport Box from \"@material-ui/core/Box\"\nimport { setIn } from \"seamless-immutable\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport duration from \"duration\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\"\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\"\nimport LabelHelpView, { useLabelHelp } from \"../LabelHelpView\"\nimport ActiveLearningView from \"../ActiveLearningView\"\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\n\nconst OverviewContainer = styled(\"div\")({\n  padding: 16,\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  boxSizing: \"border-box\",\n})\n\nexport default ({\n  dataset,\n  onChangeDataset,\n  selectedBrush = \"complete\",\n  sampleIndex,\n  onChangeSampleIndex,\n  onClickSetup,\n  onChangeSampleTimeToComplete,\n  sampleTimeToComplete,\n}) => {\n  const [currentTab, setTab] = useState(\"label\")\n  const posthog = usePosthog()\n  const { labelHelpEnabled, totalCost } = useLabelHelp()\n  const labelOnlyMode = useIsLabelOnlyMode()\n  const [annotationStartTime, setAnnotationStartTime] = useState(null)\n\n  const isInOverview = sampleIndex === null\n\n  let percentComplete = 0\n  if (dataset.samples && dataset.samples.length > 0) {\n    percentComplete =\n      dataset.samples\n        .map((s) => s.annotation !== undefined && s.annotation !== null)\n        .filter(Boolean).length / dataset.samples.length\n  }\n\n  useEffect(() => {\n    if (labelHelpEnabled) {\n      posthog.capture(\"label_help_showed\")\n    }\n  }, [labelHelpEnabled, posthog])\n\n  useEffect(() => {\n    if (currentTab === \"labelhelp\") {\n      posthog.capture(\"label_help_clicked\")\n    }\n  }, [currentTab, posthog])\n\n  return !isInOverview ? (\n    <LabelErrorBoundary>\n      <UniversalDataViewer\n        sampleIndex={sampleIndex}\n        onSaveTaskOutputItem={(relativeIndex, output) => {\n          const sample = dataset.samples[sampleIndex]\n\n          let newDataset = dataset\n          newDataset = setIn(\n            newDataset,\n            [\"samples\", sampleIndex, \"annotation\"],\n            output\n          )\n\n          if (\n            sample.brush !== selectedBrush &&\n            !(sample.brush === undefined && selectedBrush === \"complete\")\n          ) {\n            newDataset = setIn(\n              newDataset,\n              [\"samples\", sampleIndex, \"brush\"],\n              selectedBrush\n            )\n          }\n          onChangeDataset(newDataset)\n        }}\n        onExit={(nextAction = \"nothing\") => {\n          if (annotationStartTime) {\n            onChangeSampleTimeToComplete(Date.now() - annotationStartTime)\n          }\n          switch (nextAction) {\n            case \"go-to-next\":\n              if (sampleIndex !== dataset.samples.length - 1) {\n                posthog.capture(\"next_sample\", {\n                  interface_type: dataset.interface.type,\n                })\n                // TODO reset start time\n                onChangeSampleIndex(sampleIndex + 1)\n                setAnnotationStartTime(Date.now())\n                return\n              }\n              break\n            case \"go-to-previous\":\n              if (sampleIndex !== 0) {\n                onChangeSampleIndex(sampleIndex - 1)\n                setAnnotationStartTime(Date.now())\n                return\n              }\n              break\n            default:\n              break\n          }\n          onChangeSampleIndex(null)\n        }}\n        dataset={dataset}\n        onClickSetup={onClickSetup}\n      />\n    </LabelErrorBoundary>\n  ) : (\n    <OverviewContainer>\n      <Box display=\"flex\">\n        <Box>\n          <Tabs value={currentTab} onChange={(e, newTab) => setTab(newTab)}>\n            <Tab icon={<BorderColorIcon />} label=\"Label\" value=\"label\" />\n            {!labelOnlyMode && (\n              <Tab\n                icon={<DataUsageIcon />}\n                label=\"Active Learning\"\n                value=\"activelearning\"\n              />\n            )}\n            {!labelOnlyMode && (\n              <Tab\n                icon={<SupervisedUserCircleIcon />}\n                label={totalCost ? `$${totalCost}` : \"Label Help\"}\n                value=\"labelhelp\"\n              />\n            )}\n          </Tabs>\n        </Box>\n        <Box flexGrow={1} />\n        <Stats\n          stats={[\n            {\n              name: \"Percent Complete\",\n              value: Math.floor(percentComplete * 100) + \"%\",\n            },\n            {\n              name: \"Time per Sample\",\n              value: duration(\n                new Date(Date.now() - sampleTimeToComplete)\n              ).toString(1, 1),\n            },\n            {\n              name: \"Estimated Remaining\",\n              value: duration(\n                new Date(\n                  Date.now() -\n                    sampleTimeToComplete *\n                      (1 - percentComplete) *\n                      (dataset.samples || []).length\n                )\n              ).toString(1, 2),\n            },\n          ]}\n        />\n      </Box>\n      <Box flexGrow={1}>\n        {currentTab === \"label\" && (\n          <SampleGrid\n            tablePaginationPadding={6}\n            count={(dataset.samples || []).length}\n            samples={dataset.samples || []}\n            completed={(dataset.samples || []).map((s) =>\n              Boolean(s.annotation)\n            )}\n            onClick={(selectedSampleIndex) => {\n              posthog.capture(\"open_sample\", {\n                interface_type: dataset.interface.type,\n              })\n              onChangeSampleIndex(selectedSampleIndex)\n            }}\n          />\n        )}\n        {currentTab === \"activelearning\" && <ActiveLearningView />}\n        {currentTab === \"labelhelp\" && <LabelHelpView />}\n      </Box>\n    </OverviewContainer>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect, useMemo } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Header from \"../Header\"\nimport EditableTitleText from \"./EditableTitleText.js\"\nimport SamplesView from \"../SamplesView\"\nimport SetupPage from \"../SetupPage\"\nimport EditSampleDialog from \"../EditSampleDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport useTimeToCompleteSample from \"../../utils/use-time-to-complete-sample.js\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { useToasts } from \"../Toasts\"\nimport { setIn, without } from \"seamless-immutable\"\nimport useEventCallback from \"use-event-callback\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport classnames from \"classnames\"\nimport LabelView from \"../LabelView\"\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\nimport { HotKeys } from \"react-hotkeys\"\nimport { useHotkeyStorage } from \"../HotkeyStorage\"\n\nimport \"brace/mode/javascript\"\nimport \"brace/theme/github\"\n\nconst useStyles = makeStyles({\n  headerButton: {\n    color: \"#fff\",\n  },\n  saveIcon: {\n    marginRight: 4,\n  },\n  editIcon: {\n    marginLeft: 4,\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100vw\",\n    height: \"100vh\",\n  },\n})\n\nexport default ({\n  file,\n  datasetName = \"Universal Data Tool\",\n  dataset,\n  content,\n  inSession,\n  url,\n  fileName = \"unnamed\",\n  onChangeDataset = () => null,\n  onChangeFile,\n  onFileDrop,\n  initialMode = \"setup\",\n  authConfig,\n  user,\n  recentItems,\n  selectedBrush,\n}) => {\n  const labelOnlyMode = useIsLabelOnlyMode()\n  var [valueDisplay, setValueDisplay] = useState(fileName)\n  const c = useStyles()\n  const { addToast } = useToasts()\n  const [mode, changeMode] = useState(labelOnlyMode ? \"label\" : initialMode)\n  const [sampleInputEditor, changeSampleInputEditor] = useState({})\n  const { ipcRenderer } = useElectron() || {}\n  const posthog = usePosthog()\n\n  const [sampleIndex, setSampleIndex] = useState(null)\n\n  const headerTabs = labelOnlyMode ? [\"Label\"] : [\"Setup\", \"Samples\", \"Label\"]\n\n  const [\n    sampleTimeToComplete,\n    changeSampleTimeToComplete,\n  ] = useTimeToCompleteSample()\n\n  useEffect(() => {\n    if (!ipcRenderer) return\n    const onOpenSettingsPage = () => changeMode(\"settings\")\n    const onOpenSamplesPage = () => changeMode(\"samples\")\n    const onOpenLabelPage = () => changeMode(\"label\")\n    ipcRenderer.on(\"open-settings-page\", onOpenSettingsPage)\n    ipcRenderer.on(\"open-samples-page\", onOpenSamplesPage)\n    ipcRenderer.on(\"open-label-page\", onOpenLabelPage)\n    return () => {\n      ipcRenderer.removeListener(\"open-settings-page\", onOpenSettingsPage)\n      ipcRenderer.removeListener(\"open-samples-page\", onOpenSamplesPage)\n      ipcRenderer.removeListener(\"open-label-page\", onOpenLabelPage)\n    }\n  }, [ipcRenderer])\n\n  useEffect(() => {\n    posthog.people.set({\n      average_time_to_complete_sample: sampleTimeToComplete,\n    })\n  }, [sampleTimeToComplete, posthog.people])\n\n  useEffect(() => {\n    if (mode !== \"label\") setSampleIndex(null)\n    posthog.capture(\"open_editor_tab\", { tab: mode })\n  }, [mode, posthog])\n\n  const onChangeTab = useEventCallback((tab) => changeMode(tab.toLowerCase()))\n\n  const shortcutHandlers = useMemo(\n    () => ({\n      switch_to_label: () => changeMode(\"label\"),\n      switch_to_setup: () => changeMode(\"setup\"),\n      switch_to_samples: () => changeMode(\"samples\"),\n    }),\n    [changeMode]\n  )\n\n  const { keyMap } = useHotkeyStorage()\n\n  return (\n    <HotKeys allowChanges handlers={shortcutHandlers} keyMap={keyMap}>\n      <div className={classnames(c.container, \"universaldatatool\")}>\n        <Header\n          title={\n            inSession ? (\n              <TextField\n                label=\"Share Link\"\n                title=\"share-link\"\n                value={url}\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            ) : (\n              <EditableTitleText\n                label=\"File Name\"\n                onChange={(newName) => {\n                  onChangeFile(setIn(file, [\"fileName\"], newName))\n                  setValueDisplay(newName)\n                }}\n                value={valueDisplay || \"\"}\n              />\n            )\n          }\n          onChangeTab={onChangeTab}\n          currentTab={mode}\n          tabs={headerTabs}\n        />\n        <div style={{ height: \"100%\", overflowY: \"scroll\" }}>\n          {mode === \"setup\" && (\n            <SetupPage\n              dataset={dataset}\n              onClearLabelData={() => {\n                onChangeDataset(\n                  setIn(\n                    dataset,\n                    [\"samples\"],\n                    dataset.samples.map((s) => without(s, \"annotation\"))\n                  )\n                )\n              }}\n              onChange={(newDataset) => {\n                const { interface: iface } = newDataset\n                if (\n                  iface.type !== dataset.interface.type &&\n                  dataset.interface.type !== \"empty\" &&\n                  dataset.samples.map((s) => s.annotation).some(Boolean)\n                ) {\n                  addToast(\n                    \"Changing label types can cause label data issues. You must clear all label data first.\",\n                    \"error\"\n                  )\n                  return\n                }\n                onChangeDataset(newDataset)\n              }}\n            />\n          )}\n          {mode === \"samples\" && (\n            <SamplesView\n              file={file}\n              dataset={dataset}\n              openSampleLabelEditor={(sampleIndex) => {\n                setSampleIndex(sampleIndex)\n                posthog.capture(\"open_sample\", {\n                  interface_type: dataset.interface.type,\n                })\n                changeMode(\"label\")\n              }}\n              openSampleInputEditor={(sampleIndex) => {\n                changeSampleInputEditor({ open: true, sampleIndex })\n              }}\n              deleteSample={(sampleIndex) => {\n                const newSamples = [...dataset.samples]\n                newSamples.splice(sampleIndex, 1)\n                onChangeDataset({\n                  ...dataset,\n                  samples: newSamples,\n                })\n              }}\n              onChangeFile={(file) => {\n                onChangeFile(file)\n                setValueDisplay(file.fileName)\n              }}\n              onChangeDataset={onChangeDataset}\n              authConfig={authConfig}\n              user={user}\n            />\n          )}\n          {mode === \"label\" && (\n            <LabelView\n              selectedBrush={selectedBrush}\n              dataset={dataset}\n              sampleIndex={sampleIndex}\n              onChangeSampleIndex={setSampleIndex}\n              sampleTimeToComplete={sampleTimeToComplete}\n              onChangeSampleTimeToComplete={changeSampleTimeToComplete}\n              onChangeDataset={onChangeDataset}\n              onClickSetup={() => changeMode(\"setup\")}\n            />\n          )}\n        </div>\n        <EditSampleDialog\n          {...sampleInputEditor}\n          sampleInput={\n            sampleInputEditor.sampleIndex !== undefined\n              ? dataset.samples[sampleInputEditor.sampleIndex]\n              : null\n          }\n          onClose={() => {\n            changeSampleInputEditor({ open: false })\n          }}\n          onChange={(newInput) => {\n            onChangeDataset(\n              setIn(\n                dataset,\n                [\"samples\", sampleInputEditor.sampleIndex],\n                newInput\n              )\n            )\n          }}\n        />\n      </div>\n    </HotKeys>\n  )\n}\n","import { useReducer } from \"react\"\n\nexport default () => {\n  const [{ timeToCompleteSample }, changeSampleTimeToComplete] = useReducer(\n    (state, newTimeToComplete) => {\n      const newSamplesInWindow = state.samplesInWindow\n        .slice(-10)\n        .concat([newTimeToComplete])\n      return {\n        timeToCompleteSample:\n          newSamplesInWindow.reduce((acc, a) => acc + a, 0) /\n          newSamplesInWindow.length,\n        samplesInWindow: newSamplesInWindow,\n      }\n    },\n    { timeToCompleteSample: 0, samplesInWindow: [] }\n  )\n  return [timeToCompleteSample, changeSampleTimeToComplete]\n}\n","// @flow weak\n\nexport default (changeLog) => {\n  const humanReadableChangeLog = []\n  for (const { userName, op, path } of changeLog) {\n    if (path.startsWith(\"/interface\")) {\n      humanReadableChangeLog.push({\n        type: \"warning\",\n        message: `${userName} changed the project settings`,\n      })\n    } else if (path.startsWith(\"/taskOutput\")) {\n      const sampleMatch = path.match(/\\/samples\\/([^/]+)/)\n      humanReadableChangeLog.push({\n        type: \"info\",\n        message: `${userName} changed sample ${sampleMatch[1]}`,\n      })\n    } else {\n      humanReadableChangeLog.push({\n        message: `${userName} did a ${op} at ${path}`,\n        type: \"info\",\n      })\n    }\n  }\n  return humanReadableChangeLog\n}\n","/*\nThis doesn't handle a fair number of edge cases, for the full specification\nfor what it should implement, see https://tools.ietf.org/html/rfc6902\n\nWhen applySeamlessPatch is called, it usually is accompanied by a object hash\ncheck to make sure that the patch applied correctly, and if not, perform\na download of the latest version. Because of this, we can safely ignore the\ntricky edge cases.\n*/\n\nimport seamless from \"seamless-immutable\"\n\nconst { setIn, getIn, updateIn, without } = seamless\n\nfunction addToArray(a, newValue) {\n  return a.concat([newValue])\n}\n\nfunction withoutIn(obj, path) {\n  if (path.length === 0) return without(obj, path[0])\n  const parentPath = path.slice(0, -1)\n  const key = path[path.length - 1]\n  const parentObj = getIn(obj, parentPath)\n  if (Array.isArray(parentObj)) {\n    const index = parseInt(key)\n    return setIn(obj, parentPath, [\n      ...parentObj.slice(0, index),\n      ...parentObj.slice(index + 1),\n    ])\n  } else {\n    return setIn(obj, parentPath, without(parentObj, key))\n  }\n}\n\nexport default (object, patches) => {\n  for (const patch of patches) {\n    let { op, path } = patch\n    path = path.split(\"/\").filter(Boolean)\n    if (path.length === 0) {\n      // this operation is on the root object, special handling should apply\n      if (op === \"replace\") {\n        object = patch.value\n        continue\n      }\n      throw new Error(\"Operation on root object not supported\")\n    }\n    switch (op) {\n      case \"replace\": {\n        object = setIn(object, path, patch.value)\n        continue\n      }\n      case \"copy\": {\n        object = setIn(object, path, getIn(object, patch.from.split(\"/\")))\n        continue\n      }\n      case \"add\": {\n        if (!isNaN(parseInt(path.slice(-1)[0]))) {\n          object = setIn(object, path, patch.value)\n        } else {\n          const arrayAtPath = Array.isArray(getIn(object, path))\n          if (arrayAtPath) {\n            object = updateIn(object, path, addToArray, patch.value)\n          } else {\n            object = setIn(object, path, patch.value)\n          }\n        }\n        continue\n      }\n      case \"move\": {\n        const from = patch.from.split(\"/\")\n        object = setIn(object, path, getIn(object, from))\n        object = withoutIn(object, from)\n        continue\n      }\n      case \"remove\": {\n        object = withoutIn(object, path)\n        continue\n      }\n      default:\n        return object\n    }\n  }\n  return object\n}\n","// This is the same hashing code that the server uses\n\nconst stringify = require(\"json-stable-stringify\")\n\nconst hashString = (s) => {\n  var hash = 0,\n    i,\n    chr\n  for (i = 0; i < s.length; i++) {\n    chr = s.charCodeAt(i)\n    hash = (hash << 5) - hash + chr\n    hash |= 0\n  }\n  return hash\n}\n\nexport default (o) => hashString(stringify(o))\n","// @flow\n\nimport { useEffect } from \"react\"\nimport CollaborationHandler from \"./handler.js\"\nimport { setIn } from \"seamless-immutable\"\n\nconst serverUrl =\n  window.localStorage.CUSTOM_COLLABORATION_SERVER ||\n  \"https://udt-collaboration-server.now.sh\"\n\n// We use a global singleton to manage the collaboration state machine\nconst collab = new CollaborationHandler({ serverUrl })\n\nexport const convertToCollaborativeFile = async (file) => {\n  await collab.createSession(file.content)\n  return {\n    fileName: file.fileName,\n    id: file.id,\n    sessionId: collab.sessionId,\n    url: `${window.location.origin}/app/?s=${collab.sessionId}`,\n    content: file.content,\n    mode: \"server\",\n  }\n}\n\nexport const joinSession = async (sessionId) => {\n  await collab.joinSession(sessionId)\n  return {\n    state: collab.state,\n    version: collab.version,\n  }\n}\n\nexport default (file, changeFile) => {\n  // const { addToast } = useToasts()\n  const userName = window.localStorage.userName\n  useEffect(() => {\n    if (userName && !userName.includes(\"anonymous\")) {\n      try {\n        collab.userName = JSON.parse(window.localStorage.userName)\n      } catch (e) {}\n    }\n  }, [userName])\n\n  useEffect(() => {\n    if (!file || file.mode !== \"server\") return\n    if (file.sessionId !== collab.sessionId) return\n\n    const checkForLatestPatch = async () => {\n      const applyResult = await collab.applyLatestPatches()\n\n      if (applyResult) {\n        // TODO apply in a smart, immutable way\n        changeFile(setIn(file, [\"content\"], collab.state))\n      }\n\n      if (!timeout) return\n      timeout = setTimeout(checkForLatestPatch, 500)\n    }\n\n    let timeout = setTimeout(checkForLatestPatch, 500)\n    return () => {\n      clearTimeout(timeout)\n      timeout = null\n    }\n  }, [file, changeFile])\n\n  // Update the Server State by Sending Patches\n  useEffect(() => {\n    if (!file || file.mode !== \"server\") return\n    collab.sendPatchIfChanged(file.content)\n  }, [file])\n}\n","// @flow weak\n// NOTE: for unit tests you need to change the following line to...\n// import rfc6902 from \"rfc6902\"\nimport * as rfc6902 from \"rfc6902\"\nimport bent from \"bent\"\nimport getHumanReadableLog from \"./get-human-readable-log.js\"\nimport applySeamlessPatch from \"./apply-seamless-patch.js\"\nimport hash from \"./server-hash.js\"\n\nclass CollaborationHandler {\n  serverUrl = \"http://localhost:6003\"\n  getJSON = (url, payload, opts) => {}\n  postJSON = (url, payload, opts) => {}\n  patchJSON = (url, payload, opts) => {}\n  userName = \"anonymous\"\n\n  sessionId = null\n  state = null\n  version = null\n\n  constructor({ serverUrl, userName }) {\n    this.serverUrl = serverUrl\n    this.getJSON = bent(\"json\", \"GET\", serverUrl)\n    this.postJSON = bent(\"json\", \"POST\", serverUrl)\n    this.patchJSON = bent(\"json\", \"PATCH\", serverUrl)\n    this.userName =\n      userName || `anonymous_${Math.random().toString(36).slice(2, 6)}`\n  }\n\n  async createSession(initialContent) {\n    const response = await this.postJSON(\"/api/session\", {\n      udt: initialContent,\n    })\n\n    this.state = initialContent\n    this.sessionId = response.short_id\n    this.version = response.version\n  }\n\n  async getLatestState() {\n    try {\n      const res = await this.getJSON(\n        `/api/session/${encodeURIComponent(this.sessionId)}`\n      )\n      return {\n        state: res.udt_json,\n        version: res.version,\n      }\n    } catch (e) {\n      throw new Error(\n        `error getting session \"${this.sessionId}\": ${e.toString()}`\n      )\n    }\n  }\n\n  async updateToLatestState() {\n    const { state, version } = await this.getLatestState()\n    this.state = state\n    this.version = version\n  }\n\n  async joinSession(sessionId) {\n    this.sessionId = sessionId\n    await this.updateToLatestState()\n  }\n\n  async applyLatestPatches() {\n    const {\n      patch,\n      hashOfLatestState,\n      latestVersion,\n      changeLog,\n    } = await this.getJSON(\n      `/api/session/${encodeURIComponent(this.sessionId)}/diffs?since=${\n        this.version\n      }`\n    )\n\n    if (patch.length === 0 || latestVersion === this.version) {\n      return null\n    }\n\n    const humanReadableLog = getHumanReadableLog(changeLog)\n\n    let newState = applySeamlessPatch(this.state, patch)\n\n    if (hash(newState) !== hashOfLatestState) {\n      console.error(\"new state with patches applied didn't match latest state\")\n      await this.updateToLatestState()\n      return { patch, changeLog: humanReadableLog }\n    }\n\n    this.state = newState\n    this.version = latestVersion\n    return { patch, changeLog: humanReadableLog }\n  }\n\n  async sendPatchIfChanged(newState) {\n    const patch = rfc6902.createPatch(this.state, newState)\n    if (patch.length === 0) return null\n\n    const { hashOfLatestState, latestVersion } = await this.patchJSON(\n      `/api/session/${encodeURIComponent(this.sessionId)}`,\n      {\n        patch,\n        userName: this.userName,\n      }\n    )\n\n    if (hash(newState) !== hashOfLatestState) {\n      console.error(\n        \"after patch, hashes were not equal! getting latest version from server...\"\n      )\n      await this.updateToLatestState()\n      return this\n    }\n\n    this.state = newState\n    this.version = latestVersion\n    return this\n  }\n}\n\nexport default CollaborationHandler\n","import JAC from \"jac-format\"\nimport range from \"lodash/range\"\nimport { flatten } from \"flat\"\n\nexport default (obj) => {\n  const AddSamplesKeys = (k) => {\n    sampleKeys.add(k)\n  }\n  // Find all possible sample keys\n  let sampleKeys = new Set()\n  for (const sample of obj.samples) {\n    Object.keys(flatten(sample)).forEach((k) => AddSamplesKeys(k))\n  }\n  sampleKeys = Array.from(sampleKeys).sort(\n    (a, b) => a.split(\".\").length - b.split(\".\").length\n  )\n\n  if (sampleKeys.some((k) => k.includes(\"output.keyframes\"))) {\n    sampleKeys = sampleKeys.filter((k) => k.includes(\"output.keyframes\"))\n    sampleKeys.push(\"output.keyframes\")\n  }\n\n  const options = {\n    rows: [\n      \"interface\",\n      ...range(obj.samples.length).map((i) => `samples.${i}`),\n    ],\n    columns: [\".\", ...sampleKeys],\n    validate: false,\n  }\n\n  return JAC.toCSV(obj, options)\n}\n","// @flow\n\nimport { useEffect } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport useElectron from \"../use-electron.js\"\nimport { useToasts } from \"../../components/Toasts\"\nimport { setIn } from \"seamless-immutable\"\nimport toUDTCSV from \"../to-udt-csv.js\"\nimport useIsDesktop from \"../use-is-desktop\"\n\nconst webReturn = { saveFile: () => null }\n\nexport default (file, changeFile) => {\n  const isDesktop = useIsDesktop()\n  if (!isDesktop) return webReturn\n  const { addToast } = useToasts()\n  const { remote } = useElectron()\n  const saveFile = useEventCallback(({ saveAs = false } = {}) => {\n    if (!file) return\n    async function saveFileAsync() {\n      let filePath = file.filePath\n      if (!file.filePath || saveAs) {\n        const {\n          cancelled,\n          filePath: newFilePath,\n        } = await remote.dialog.showSaveDialog({\n          filters: [\n            { name: \".udt.json\", extensions: [\"udt.json\"] },\n            { name: \".udt.csv\", extensions: [\"udt.csv\"] },\n          ],\n        })\n        filePath =\n          !newFilePath ||\n          newFilePath.endsWith(\".json\") ||\n          newFilePath.endsWith(\".csv\")\n            ? newFilePath\n            : `${newFilePath}.udt.json`\n        if (cancelled || !filePath) {\n          addToast(\"Could not save\")\n          return\n        }\n        changeFile({\n          ...file,\n          filePath,\n          fileName: filePath.split(\"/\").slice(-1)[0],\n        })\n      }\n      await remote\n        .require(\"fs\")\n        .promises.writeFile(\n          filePath,\n          filePath.endsWith(\".csv\")\n            ? toUDTCSV(file.content)\n            : JSON.stringify(file.content, null, \"  \")\n        )\n      addToast(\"File Saved!\")\n    }\n    saveFileAsync()\n  })\n\n  useEffect(() => {\n    if (!file || !file.filePath) return\n    if (file.fileName !== file.filePath.split(\"/\").slice(-1)[0]) {\n      changeFile(\n        setIn(\n          file,\n          [\"filePath\"],\n          file.filePath\n            .split(\"/\")\n            .slice(0, -1)\n            .concat([\n              file.fileName +\n                (file.fileName.endsWith(\".json\") ? \"\" : \".dataset.json\"),\n            ])\n            .join(\"/\")\n        )\n      )\n    }\n  }, [file, changeFile])\n\n  return { saveFile }\n}\n","// @flow weak\n\nimport { useEffect } from \"react\"\nimport usePosthog from \"../../utils/use-posthog\"\nconst posthog = usePosthog()\n\nexport default (udt) => {\n  const udtInterface = udt?.interface\n  useEffect(() => {\n    if (!udtInterface) return\n    posthog.capture(\"interface_type\", { interface_type: udtInterface.type })\n    posthog.people.set({ last_used_interface_type: udtInterface.type })\n  }, [udtInterface])\n\n  const udtSamples = udt?.samples\n  const usedToyDataset = udt?.usedToyDataset\n  useEffect(() => {\n    if (!udtSamples) return\n    const numCompleted = (udtSamples || []).filter((s) => s.annotation).length\n    posthog.capture(\"samples_updated\", {\n      dataset_size: (udtSamples || []).length,\n      samples_completed: numCompleted,\n      percent_completed: numCompleted / (udtSamples || []).length,\n      toy_dataset_used: Boolean(usedToyDataset),\n    })\n    posthog.people.set({\n      recently_used_toy_dataset: Boolean(usedToyDataset),\n    })\n  }, [udtSamples, usedToyDataset])\n}\n","// @flow weak\n\nimport { useEffect, useRef, useCallback } from \"react\"\nimport UpdateAWSStorage from \"./update-aws-storage\"\nimport isEmpty from \"lodash/isEmpty\"\nimport useAuth from \"../../auth-handlers/use-auth\"\nimport getFilesDifferences from \"../../dataset-helper/get-files-differences.js\"\n\nconst workingInterfaces = [\n  \"video_segmentation\",\n  \"image_classification\",\n  \"image_segmentation\",\n  \"text_entity_recognition\",\n  \"text_classification\",\n  \"audio_transcription\",\n  \"composite\",\n  \"data_entry\",\n]\n\nexport default ({ file, setFile }) => {\n  const { isLoggedIn, authProvider, authConfig } = useAuth()\n\n  const lastObjectRef = useRef([])\n  const shouldUpdateAWSStorage = useCallback(() => {\n    if (!isLoggedIn || authProvider !== \"cognito\") return\n\n    var changes = getFilesDifferences(lastObjectRef.current, file)\n    if (\n      isEmpty(file) ||\n      (!changes.content.samples && !changes.fileName) ||\n      !workingInterfaces.includes(file.content.interface.type) ||\n      file.fileName === \"unnamed\"\n    )\n      return false\n    return true\n  }, [file, isLoggedIn, authProvider])\n\n  useEffect(() => {\n    if (!isLoggedIn || authProvider !== \"cognito\") return\n    if (!isEmpty(authConfig)) {\n      console.log(\"should update\", shouldUpdateAWSStorage())\n      if (shouldUpdateAWSStorage()) UpdateAWSStorage(file)\n      lastObjectRef.current = file\n    }\n  }, [shouldUpdateAWSStorage, authConfig, file, isLoggedIn, authProvider])\n}\n","import { Storage } from \"aws-amplify\"\nimport isEmpty from \"lodash/isEmpty\"\nimport * as datasetHelper from \"../../dataset-helper\"\nimport { setIn } from \"seamless-immutable\"\n\nexport default (file) => {\n  async function fetchAFile(element) {\n    var proxyUrl = \"https://cors-anywhere.herokuapp.com/\"\n    var response\n    var url\n    if (datasetHelper.getSampleUrl(element) !== undefined)\n      url = proxyUrl + datasetHelper.getSampleUrl(element)\n    response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"X-Requested-With\": \"xmlhttprequest\",\n      },\n    }).catch((error) => {\n      console.log(\"Looks like there was a problem: \\n\", error)\n    })\n    const blob = await response.blob()\n    return blob\n  }\n\n  function fileNameExist(file) {\n    if (file !== \"undefined\" && file.fileName !== \"undefined\") return true\n\n    return false\n  }\n\n  function createOrReplaceProjectFile(file) {\n    Storage.put(`${file.fileName}/`, null, {\n      level: \"private\",\n    }).catch((err) => console.log(err))\n  }\n\n  function createOrReplaceAnnotations(file, json) {\n    console.log({ file, json })\n    Storage.put(`${file.fileName}/annotations/annotations.json`, json, {\n      level: \"private\",\n    }).catch((err) => console.log(err))\n  }\n\n  function createOrReplaceImages(file) {\n    // TODO you can't have async in a forEach loop\n    if (!isEmpty(file.content.samples)) {\n      file.content.samples.forEach(async (element) => {\n        try {\n          var blob\n          if (!isEmpty(datasetHelper.getSampleUrl(element))) {\n            blob = await fetchAFile(element)\n          } else if (!isEmpty(element.document)) {\n            blob = element.document\n          }\n\n          let imageOrVideoName\n          if (isEmpty(element.sampleName)) {\n            imageOrVideoName = datasetHelper.getSampleName(element)\n          } else {\n            imageOrVideoName = element.sampleName\n          }\n\n          var pathToFile = `${file.fileName}/data/${imageOrVideoName}`\n          Storage.put(pathToFile, blob, {\n            level: \"private\",\n          }).catch((err) => console.log(err))\n        } catch (err) {\n          console.log(err)\n        }\n      })\n    }\n  }\n\n  if (fileNameExist(file)) {\n    var dataset = file.content\n    // TODO datasetHelper.setSamplesName is returning an incorrect object, it\n    // should be returning an array of samples\n    console.log(\n      \"this should be an array of samples\",\n      datasetHelper.setSamplesName(dataset)\n    )\n    file = setIn(\n      file,\n      [\"content\"],\n      setIn(dataset, [\"samples\"], datasetHelper.setSamplesName(dataset))\n    )\n    var json = JSON.stringify(file)\n    createOrReplaceProjectFile(file)\n    createOrReplaceAnnotations(file, json)\n    createOrReplaceImages(file)\n  }\n}\n","// @flow\n\nimport { useState, useMemo, useEffect } from \"react\"\nimport useServer, {\n  joinSession,\n  convertToCollaborativeFile,\n} from \"./use-server\"\nimport useFilesystem from \"./use-filesystem\"\nimport useLocalStorage from \"./use-local-storage\"\nimport { useToasts } from \"../../components/Toasts\"\nimport fromUDTCSV from \"../from-udt-csv.js\"\nimport useEventCallback from \"use-event-callback\"\nimport useFileTelemetry from \"./use-file-telemetry\"\nimport useAWSCognito from \"./use-aws-cognito\"\n\nexport default () => {\n  const [file, setFile] = useState()\n  const { addToast } = useToasts()\n\n  const { saveFile } = useFilesystem(file, setFile)\n  const { recentItems, changeRecentItems } = useLocalStorage(file, setFile)\n  useServer(file, setFile)\n\n  // Auth/Cloud\n  useAWSCognito({ file, setFile })\n\n  // Telemetry\n  useFileTelemetry(file && file.content)\n\n  const openFile = useEventCallback((fsFile) => {\n    const { name: fileName, path: filePath } = fsFile\n\n    function handleLoadedFile(content) {\n      try {\n        let dataset\n        if (fileName.endsWith(\"csv\")) {\n          dataset = fromUDTCSV(content)\n        } else {\n          dataset = JSON.parse(content)\n        }\n        // TODO validate OHA and prompt to open anyway if invalid\n        setFile({\n          fileName,\n          filePath,\n          mode: filePath ? \"filesystem\" : \"local-storage\",\n          content: dataset,\n          id: filePath,\n        })\n      } catch (e) {\n        console.log(e.toString())\n        addToast(\"Couldn't read file, see console for details\", \"error\")\n        // addError(`Could not read file \"${fsFile.name}\"`)\n      }\n    }\n\n    if (fsFile.content) {\n      handleLoadedFile(fsFile.content)\n    } else {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        const content = e.target.result\n        handleLoadedFile(content)\n      }\n      reader.readAsText(fsFile)\n    }\n  })\n\n  const openUrl = useEventCallback(async (url) => {\n    const sessionId = decodeURIComponent(url.match(/[?&]s=([^&]+)/)[1])\n    const labelOnly = url.includes(\"mode=labelonly\")\n    if (!sessionId) return\n    const { state } = await joinSession(sessionId)\n    if (!state) return\n    window.history.replaceState(\n      {},\n      window.document.title,\n      `/app/?s=${encodeURIComponent(sessionId)}${\n        labelOnly ? \"&mode=labelonly\" : \"\"\n      }`\n    )\n    setFile({\n      url,\n      sessionId,\n      mode: \"server\",\n      id: sessionId,\n      content: state,\n    })\n  })\n\n  useEffect(() => {\n    if (!file) return\n    if (file.mode === \"server\") return\n    window.history.replaceState({}, window.document.title, `/`)\n  }, [file])\n\n  useEffect(() => {\n    if (window.location.search.match(/[?&]s=([a-zA-Z0-9]+)/)) {\n      openUrl(window.location.href)\n    }\n  }, [openUrl])\n\n  const makeSession = useEventCallback(async () => {\n    const newFile = await convertToCollaborativeFile(file)\n    setFile(newFile)\n    window.history.replaceState(\n      {},\n      window.document.title,\n      `/app/?s=${encodeURIComponent(newFile.sessionId)}`\n    )\n  })\n\n  return useMemo(\n    () => ({\n      file,\n      setFile,\n      openFile,\n      openUrl,\n      makeSession,\n      saveFile,\n      recentItems,\n      changeRecentItems,\n    }),\n    [\n      file,\n      setFile,\n      openFile,\n      saveFile,\n      makeSession,\n      recentItems,\n      changeRecentItems,\n      openUrl,\n    ]\n  )\n}\n","// @flow\nimport { useEffect } from \"react\"\nimport { useLocalStorage } from \"react-use\"\n\nexport default (file, changeFile) => {\n  let [recentItems, changeRecentItems] = useLocalStorage(\"recentItems\", [])\n\n  if (!recentItems) recentItems = []\n  useEffect(() => {\n    if (!file || file.fileName === \"unnamed\") return\n    if (recentItems.map((item) => item.id).includes(file.id)) {\n      changeRecentItems(\n        recentItems.map((ri) => (ri.id === file.id ? file : ri))\n      )\n    } else {\n      changeRecentItems([file].concat(recentItems).slice(0, 3))\n    }\n    // eslint-disable-next-line\n  }, [file, changeRecentItems])\n  return { recentItems, changeRecentItems }\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { detect } from \"detect-browser\"\nimport Button from \"@material-ui/core/Button\"\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Sentry from \"../../utils/sentry.js\"\n\nconst Container = styled(\"div\")({\n  width: \"100vw\",\n  minHeight: \"100vh\",\n  backgroundColor: colors.grey[900],\n  padding: 32,\n  \"& .title\": {\n    color: colors.grey[200],\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  \"& .subtitle\": {\n    color: colors.grey[300],\n    fontSize: 18,\n    marginTop: 8,\n  },\n  \"& .info\": {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    padding: 32,\n    \"& textarea\": {\n      width: \"calc(100% - 64px)\",\n      boxSizing: \"border-box\",\n      minHeight: 300,\n      fontSize: 12,\n    },\n  },\n})\nconst Buttons = styled(\"div\")({\n  padding: 8,\n})\nconst StyledButton = styled(Button)({\n  color: \"#fff\",\n  borderColor: \"rgba(255,255,255,0.5)\",\n  margin: 8,\n})\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      errorDetails: JSON.stringify(detect()) + \"\\n\\n\" + error.stack,\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo)\n      const eventId = Sentry.captureException(error)\n      this.setState({ eventId })\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <Container>\n          <div className=\"title\">An error has occurred</div>\n          <div className=\"subtitle\">All the details are below:</div>\n          <div className=\"info\">\n            <textarea>{this.state.errorDetails}</textarea>\n          </div>\n          <Buttons>\n            <StyledButton\n              variant=\"outlined\"\n              target=\"_blank\"\n              href=\"https://github.com/Universal/universal-data-tool/issues\"\n            >\n              <LaunchIcon style={{ color: \"#fff\", marginRight: 8 }} /> View\n              Issues on Github\n            </StyledButton>\n            {/* <StyledButton\n              variant=\"outlined\"\n              onClick={this.props.revertLastChange}\n            >\n              Revert Last File Change\n            </StyledButton> */}\n            <StyledButton\n              variant=\"outlined\"\n              onClick={() => window.location.reload()}\n            >\n              Reload (unsaved progress will be lost)\n            </StyledButton>\n          </Buttons>\n        </Container>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","// @flow weak\n\nimport { useEffect } from \"react\"\n\nfunction preventNavigation(e) {\n  var confirmationMessage =\n    \"It looks like you have been editing something. \" +\n    \"If you leave before saving, your changes will be lost.\"\n\n  ;(e || window.event).returnValue = confirmationMessage //Gecko + IE\n  return confirmationMessage //Gecko + Webkit, Safari, Chrome etc.\n}\n\nexport default (shouldPreventNavigation = true) => {\n  useEffect(() => {\n    if (!shouldPreventNavigation) return\n    if (window.location.origin.includes(\"localhost\")) return\n    window.addEventListener(\"beforeunload\", preventNavigation)\n    return () => {\n      window.removeEventListener(\"beforeunload\", preventNavigation)\n    }\n  }, [shouldPreventNavigation])\n}\n","// @flow\nimport React, { useState, useCallback } from \"react\"\nimport { HeaderContext } from \"../Header\"\nimport StartingPage from \"../StartingPage\"\nimport DatasetEditor from \"../DatasetEditor\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport useFileHandler from \"../../utils/file-handlers\"\nimport download from \"in-browser-download\"\nimport toUDTCSV from \"../../utils/to-udt-csv.js\"\nimport { setIn } from \"seamless-immutable\"\nimport AppErrorBoundary from \"../AppErrorBoundary\"\nimport useEventCallback from \"use-event-callback\"\nimport usePreventNavigation from \"../../utils/use-prevent-navigation\"\nimport { FileContext } from \"../FileContext\"\nimport usePosthog from \"../../utils/use-posthog\"\nconst randomId = () => Math.random().toString().split(\".\")[1]\n\nexport default () => {\n  const {\n    file,\n    setFile,\n    openFile,\n    openUrl,\n    makeSession,\n    recentItems,\n    changeRecentItems,\n  } = useFileHandler()\n  usePreventNavigation(Boolean(file))\n  const posthog = usePosthog()\n  const [errors] = useErrors()\n\n  const [selectedBrush, setSelectedBrush] = useState(\"complete\")\n  const onCreateTemplate = useEventCallback((template) => {\n    setFile({\n      fileName: \"unnamed\",\n      content: template.dataset,\n      id: randomId(),\n      mode: \"local-storage\",\n    })\n  })\n\n  const openRecentItem = useEventCallback((item) => setFile(item))\n  const onClickHome = useEventCallback(() => setFile(null))\n  const onDownload = useEventCallback((format) => {\n    if (!file) return\n    posthog.capture(\"download_file\", { file_type: format })\n    const outputName = (file.sessionId || file.fileName) + \".udt.\" + format\n    if (format === \"json\") {\n      download(JSON.stringify(file.content), outputName)\n    } else if (format === \"csv\") {\n      download(toUDTCSV(file.content), outputName)\n    }\n  })\n\n  const inSession = file && file.mode === \"server\"\n  const [sessionBoxOpen, changeSessionBoxOpen] = useState(false)\n\n  const onJoinSession = useCallback(\n    async (sessionName) => {\n      await openUrl(sessionName)\n    },\n    [openUrl]\n  )\n\n  const onLeaveSession = useEventCallback(() =>\n    setFile({\n      ...file,\n      mode: \"local-storage\",\n      fileName: file.fileName || `copy_of_${file.id}`,\n    })\n  )\n\n  const onChangeDataset = useEventCallback((newDataset) => {\n    setFile(setIn(file, [\"content\"], newDataset))\n  })\n\n  return (\n    <>\n      <FileContext.Provider value={{ file, setFile }}>\n        <HeaderContext.Provider\n          value={{\n            title: file\n              ? file.mode === \"local-storage\"\n                ? file.fileName\n                : file.url\n              : \"unnamed\",\n            interfaceType: file?.content?.interface?.type,\n            recentItems,\n            changeRecentItems,\n            onClickTemplate: onCreateTemplate,\n            onClickHome,\n            onOpenFile: openFile,\n            onOpenRecentItem: openRecentItem,\n            inSession,\n            sessionBoxOpen,\n            changeSessionBoxOpen,\n            onJoinSession,\n            onLeaveSession,\n            onCreateSession: makeSession,\n            fileOpen: Boolean(file),\n            onDownload,\n            onChangeSelectedBrush: setSelectedBrush,\n            selectedBrush,\n            isWelcomePage: !file,\n          }}\n        >\n          {!file ? (\n            <StartingPage\n              onFileDrop={openFile}\n              onOpenTemplate={onCreateTemplate}\n              recentItems={recentItems}\n              onOpenRecentItem={openRecentItem}\n              onClickOpenSession={() => changeSessionBoxOpen(true)}\n            />\n          ) : (\n            <AppErrorBoundary>\n              <DatasetEditor\n                file={file}\n                key={file.id}\n                {...file}\n                selectedBrush={selectedBrush}\n                inSession={inSession}\n                dataset={file.content}\n                onChangeDataset={onChangeDataset}\n                onChangeFile={setFile}\n                authConfig\n                recentItems={recentItems}\n              />\n            </AppErrorBoundary>\n          )}\n        </HeaderContext.Provider>\n      </FileContext.Provider>\n      <ErrorToasts errors={errors} />\n    </>\n  )\n}\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport { HeaderContext } from \"../Header\"\nimport StartingPage from \"../StartingPage\"\nimport DatasetEditor from \"../DatasetEditor\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport useElectron from \"../../utils/use-electron.js\"\nimport templates from \"../StartingPage/templates\"\nimport useEventCallback from \"use-event-callback\"\nimport { setIn } from \"seamless-immutable\"\nimport toUDTCSV from \"../../utils/to-udt-csv.js\"\nimport useFileHandler from \"../../utils/file-handlers\"\n\nconst randomId = () => Math.random().toString().split(\".\")[1]\n\nexport default () => {\n  const {\n    file,\n    setFile,\n    openFile,\n    openUrl,\n    makeSession,\n    saveFile,\n    recentItems,\n  } = useFileHandler()\n\n  const [selectedBrush, setSelectedBrush] = useState(\"complete\")\n  const [errors] = useErrors()\n\n  const { remote, ipcRenderer } = useElectron()\n\n  const onCreateTemplate = useEventCallback((template) => {\n    setFile({\n      fileName: \"unnamed\",\n      content: template.dataset,\n      id: randomId(),\n      mode: \"filesystem\",\n    })\n  })\n\n  const openRecentItem = useEventCallback((item) => setFile(item))\n  const onClickHome = useEventCallback(() => setFile(null))\n\n  useEffect(() => {\n    const onOpenWelcomePage = () => setFile(null)\n    const onNewFile = (arg0, { templateName } = {}) => {\n      onCreateTemplate(\n        templates.find((t) => t.name === templateName) || templates[0]\n      )\n    }\n    const saveFileAs = () => saveFile({ saveAs: true })\n    const exportToCSV = async () => {\n      if (!file) return\n      let { cancelled, filePath } = await remote.dialog.showSaveDialog({\n        filters: [{ name: \".udt.csv\", extensions: [\"udt.csv\"] }],\n      })\n      if (cancelled) return\n      filePath =\n        !filePath || filePath.endsWith(\".csv\")\n          ? filePath\n          : `${filePath}.udt.csv`\n\n      await remote\n        .require(\"fs\")\n        .promises.writeFile(filePath, toUDTCSV(file.content))\n    }\n    const onOpenFileFromToolbar = (e, file) => openFile(file)\n\n    ipcRenderer.on(\"open-welcome-page\", onOpenWelcomePage)\n    ipcRenderer.on(\"new-file\", onNewFile)\n    ipcRenderer.on(\"open-file\", onOpenFileFromToolbar)\n    ipcRenderer.on(\"save-file\", saveFile)\n    ipcRenderer.on(\"save-file-as\", saveFileAs)\n    ipcRenderer.on(\"export-to-csv\", exportToCSV)\n    return () => {\n      ipcRenderer.removeListener(\"open-welcome-page\", onOpenWelcomePage)\n      ipcRenderer.removeListener(\"new-file\", onNewFile)\n      ipcRenderer.removeListener(\"open-file\", onOpenFileFromToolbar)\n      ipcRenderer.removeListener(\"save-file\", saveFile)\n      ipcRenderer.removeListener(\"save-file-as\", saveFileAs)\n      ipcRenderer.removeListener(\"export-to-csv\", exportToCSV)\n    }\n  }, [file, setFile, ipcRenderer, openFile, onCreateTemplate, remote, saveFile])\n\n  const inSession = file && file.mode === \"server\"\n  const [sessionBoxOpen, changeSessionBoxOpen] = useState(false)\n\n  const onJoinSession = useEventCallback(async (sessionName) => {\n    await openUrl(sessionName)\n  })\n\n  const onLeaveSession = useEventCallback(() =>\n    setFile({\n      ...file,\n      mode: \"local-storage\",\n      fileName: file.fileName || `copy_of_${file.id}`,\n    })\n  )\n\n  const collaborateError = (file?.content?.samples || []).some((sample) =>\n    [sample.imageUrl, sample.videoUrl, sample.pdfUrl]\n      .filter(Boolean)\n      .map((a) => a.includes(\"file://\"))\n      .some(Boolean)\n  )\n    ? \"Some URLs (links) in this file are connected to files on your computer. Use the Samples > Transform > Transform Files to Web URLs to upload these files, then collaboration will be available.\"\n    : null\n\n  return (\n    <>\n      <HeaderContext.Provider\n        value={{\n          recentItems,\n          onClickTemplate: onCreateTemplate,\n          onClickHome,\n          title: file\n            ? file.mode !== \"server\"\n              ? file.fileName\n              : file.url\n            : \"unnamed\",\n          fileOpen: Boolean(file),\n          interfaceType: file?.content?.interface?.type,\n          onOpenRecentItem: openRecentItem,\n          isDesktop: true,\n          onOpenFile: openFile,\n          selectedBrush,\n          onChangeSelectedBrush: setSelectedBrush,\n\n          // collaboration session\n          inSession,\n          sessionBoxOpen,\n          changeSessionBoxOpen,\n          collaborateError,\n          onJoinSession,\n          onLeaveSession,\n          onCreateSession: makeSession,\n          isWelcomePage: !file,\n        }}\n      >\n        {!file ? (\n          <StartingPage\n            showDownloadLink={false}\n            onFileDrop={openFile}\n            onOpenTemplate={onCreateTemplate}\n            recentItems={recentItems}\n            onOpenRecentItem={openRecentItem}\n          />\n        ) : (\n          <DatasetEditor\n            key={file.id}\n            {...file}\n            inSession={inSession}\n            selectedBrush={selectedBrush}\n            dataset={file.content}\n            onChangeFileName={(newName) => {\n              setFile(setIn(file, [\"fileName\"], newName))\n            }}\n            onChangeDataset={(newOHA) => {\n              setFile(setIn(file, [\"content\"], newOHA))\n            }}\n          />\n        )}\n      </HeaderContext.Provider>\n      <ErrorToasts errors={errors} />\n    </>\n  )\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}))\n\nexport default function Loading() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.root}>\n        <CircularProgress />\n      </div>\n    </div>\n  )\n}\n","import React, { Suspense } from \"react\"\nimport Theme from \"./components/Theme\"\nimport LocalStorageApp from \"./components/LocalStorageApp\"\nimport DesktopApp from \"./components/DesktopApp\"\nimport { ToastProvider } from \"./components/Toasts\"\nimport useElectron from \"./utils/use-electron.js\"\nimport { AppConfigProvider } from \"./components/AppConfig\"\nimport { AuthProvider } from \"./utils/auth-handlers/use-auth.js\"\nimport { LabelHelpProvider } from \"./components/LabelHelpView\"\nimport { HotkeyStorageProvider } from \"./components/HotkeyStorage\"\nimport \"./App.css\"\n\nimport Loading from \"./components/Loading\"\n\n// Importing Internalization file\nimport \"./i18n\"\n\nexport const App = () => {\n  const electron = useElectron()\n  return (\n    <Suspense fallback={Loading}>\n      <Theme>\n        <AppConfigProvider>\n          <AuthProvider>\n            <LabelHelpProvider>\n              <ToastProvider>\n                <HotkeyStorageProvider>\n                  {Boolean(electron) ? <DesktopApp /> : <LocalStorageApp />}\n                </HotkeyStorageProvider>\n              </ToastProvider>\n            </LabelHelpProvider>\n          </AuthProvider>\n        </AppConfigProvider>\n      </Theme>\n    </Suspense>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}